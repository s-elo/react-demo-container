{"version":3,"sources":["component/Ops/index.tsx","component/Menu/index.tsx","demos/01-tic-tac-toe/index.tsx","demos/02-todoList/component/ToDoInput/index.tsx","demos/02-todoList/component/ToDoItem/index.tsx","demos/02-todoList/component/ToDoList/index.tsx","demos/02-todoList/component/ToDoFooter/index.tsx","demos/02-todoList/TodoList.tsx","demos/03-proxy/Proxy.tsx","demos/04-search-axios/component/Search/index.tsx","demos/04-search-axios/component/List/index.tsx","demos/04-search-axios/SearchAxios.tsx","demos/react-basis/10-redux/redux/todos/todo_reducer.ts","demos/react-basis/10-redux/redux/store.ts","demos/react-basis/10-redux/redux/counter/count_reducer.ts","demos/react-basis/10-redux/redux/counter/count_action.ts","demos/react-basis/10-redux/redux/counter/constant.ts","demos/react-basis/10-redux/component/Count/index.tsx","demos/react-basis/10-redux/redux/todos/todo_action.ts","demos/react-basis/10-redux/component/Todos/Todos.tsx","demos/react-basis/10-redux/ReduxDemo.tsx","demos/react-basis/11-react-redux/redux/constant.ts","demos/react-basis/11-react-redux/redux/reducers/person.ts","demos/react-basis/11-react-redux/redux/store.ts","demos/react-basis/11-react-redux/redux/reducers/count.ts","demos/react-basis/11-react-redux/redux/actions/count.ts","demos/react-basis/11-react-redux/component/Count/index.jsx","demos/react-basis/11-react-redux/component/Person/index.tsx","demos/react-basis/11-react-redux/redux/actions/person.ts","demos/react-basis/11-react-redux/ReactRedux.tsx","demos/react-basis/08-refs/index.tsx","demos/react-basis/12-redux-toolkit/components/Header/Header.tsx","demos/react-basis/12-redux-toolkit/api/client.js","demos/react-basis/12-redux-toolkit/features/users/userSlice.ts","demos/react-basis/12-redux-toolkit/features/posts/PostAuthor/PostAuthor.tsx","demos/react-basis/12-redux-toolkit/components/TimeAgo/TimeAge.tsx","demos/react-basis/12-redux-toolkit/features/api/apiSlice.ts","demos/react-basis/12-redux-toolkit/features/posts/PostReactBtn/PostReactBtn.tsx","demos/react-basis/12-redux-toolkit/features/posts/PostItem/PostItem.tsx","component/Spinner/Spinner.tsx","demos/react-basis/12-redux-toolkit/features/posts/PostList/PostList.tsx","demos/react-basis/12-redux-toolkit/features/posts/AddPostForm/AddPostForm.tsx","demos/react-basis/12-redux-toolkit/features/posts/EditPostForm/EditPostForm.tsx","demos/react-basis/12-redux-toolkit/features/posts/PostDetail/PostDetail.tsx","demos/react-basis/12-redux-toolkit/features/users/UserList/UserList.tsx","demos/react-basis/12-redux-toolkit/features/users/UserPage/UserPage.tsx","demos/react-basis/12-redux-toolkit/features/notifications/notificationSlice.ts","demos/react-basis/12-redux-toolkit/features/notifications/NotificationList/NotificationList.tsx","demos/react-basis/12-redux-toolkit/api/server.js","demos/react-basis/12-redux-toolkit/features/posts/postSlice.ts","demos/react-basis/12-redux-toolkit/store.ts","demos/react-basis/12-redux-toolkit/ReduxToolkit.tsx","demos/06-tetris/pannelSlice.ts","demos/06-tetris/store.ts","demos/06-tetris/components/GamePannel/GamePannel.tsx","demos/06-tetris/utils.ts","demos/06-tetris/control.ts","demos/06-tetris/components/ControlPannel/ControlPannel.tsx","demos/react-basis/02-lazyLoad/index.tsx","demos/react-basis/04-context/index.tsx","demos/react-basis/05-pureComponent/index.tsx","demos/react-basis/07-errorBoundary/ErrorBoundary.tsx","demos/react-basis/07-errorBoundary/Child.tsx","demos/react-basis/01-setState/setState.tsx","demos/react-basis/06-render_prop(slot)/index.tsx","demos/react-basis/09-portal/PortalDemo.tsx","demos/05-resizeLayout/ResizeBar.tsx","demos/05-resizeLayout/ResizableBox.tsx","demos/05-resizeLayout/index.tsx","menuconfig.ts","demos/06-tetris/index.tsx","demos/react-basis/03-hooks/index.tsx","demos/react-basis/07-errorBoundary/index.tsx","App.tsx","index.tsx"],"names":["Ops","React","Component","Menu","this","props","history","menuPath","push","items","linkStyle","className","path","exact","map","item","index","style","to","name","Array","isArray","component","createElement","withRouter","onClick","toMenu","bind","title","calculateWinner","squares","val","a","b","c","Square","squareClick","value","Board","i","square","handleClickOnBoard","renderSquare","Game","state","fill","xIsNext","stepNumber","slice","nextSquare","length","setState","concat","move","currentSquare","moves","step","desc","jumpTo","status","result","handleClick","ToDoInput","handleKeyUp","event","target","key","trim","alert","addTask","onKeyUp","type","placeholder","TodoItem","mouseFlag","handleChange","id","updateStatus","checked","handleDelete","window","confirm","deleteTask","flag","task","done","background","onMouseEnter","handleMouse","onMouseLeave","onChange","visibility","ToDoList","data","handleSelectAll","selectAll","handleClearAllDone","clearAllDone","doneTasks","reduce","pre","curVal","total","TodoList","handleAddTask","newTask","newItem","newData","filter","isAll","Proxy","getData","axios","get","then","res","console","log","err","Search","searchInput","createRef","updateState","searchStr","current","isFirst","isLoading","message","ref","List","color","href","html_url","src","avatar_url","alt","login","App","initialWorks","createStore","combineReducers","counterSum","prevState","action","todoList","work","includes","job","applyMiddleware","thunk","incrementAction","decrementAction","incrementAsyncAction","time","dispatch","setTimeout","Count","stateChange","Number","add","store","sub","addIfOdd","getState","addAsync","addWork","subWork","Todos","workInput","addToList","subFromList","ReduxDemo","unsubscribe","subscribe","forceUpdate","ADD_PERSON","initData","age","sum","persons","composeWithDevTools","count","asyncAdd","personNum","select","connect","Person","inputName","inputAge","handleAdd","personObj","handleNameInput","handleAgeInput","person","ClassInput","handleInputChanged","el","RefDemo","classInputRef","Header","demoPath","client","endpoint","body","customConfig","headers","config","method","JSON","stringify","fetch","response","json","ok","url","Error","statusText","Promise","reject","post","userAdapter","createEntityAdapter","initialState","getInitialState","error","fetchUsers","createAsyncThunk","resp","userSlice","createSlice","reducers","extraReducers","builder","addCase","pending","_","fulfilled","setAll","payload","rejected","getSelectors","users","selectById","selectAllUsers","selectUserFetchStatus","PostAuthor","userId","user","useSelector","selectUserById","TimeAge","timestamp","timeAgo","date","parseISO","timePeriod","formatDistanceToNow","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","getPosts","query","providesTags","queryRet","keepUnusedDataFor","getPost","postId","__","addNewPost","mutation","newPost","invalidatesTags","editPost","arg","addReaction","reactName","onQueryStarted","queryFulfilled","patchResult","util","updateQueryData","undefined","draft","find","reactions","undo","useGetPostsQuery","useGetPostQuery","useAddNewPostMutation","useEditPostMutation","useAddReactionMutation","reactionEmoji","thumbsUp","hooray","heart","rocket","eyes","PostReactBtn","updataReaction","Object","entries","emoji","fontWeight","PostItem","detailPath","margin","content","Spinner","text","size","header","height","width","PostList","useDispatch","userFetchStatus","useEffect","renderedPosts","posts","isSuccess","isError","sortedPosts","useMemo","sort","localeCompare","useState","setTitle","setContent","setUserId","onSaveBtnClick","e","preventDefault","unwrap","display","disabled","EditPostForm","match","params","updatePost","htmlFor","PostDetail","renderedDetail","isFetching","Fragment","UserList","finalRender","renderedUsers","UserPage","filteredPosts","notificationAdapter","sortComparer","fetchNotifications","allNotifications","selectAllNotifications","latestNotification","latestTimestamp","markAsRead","values","entities","forEach","notification","isRead","upsertMany","actions","notifications","selectNotificationFetchStatus","NotificationList","notificationFetchStatus","renderedNotifications","backgroundColor","emptyReminder","textAlign","fetchNewNotifications","seedDate","postAdapter","fetchPosts","nanoid","Date","toISOString","postSlice","postAdded","reducer","prepare","postUpdated","prevPost","reactionAdded","addOne","selectIds","configureStore","postReducer","userReducer","notificationReducer","middleware","getDefaultMiddleware","ARTIFICIAL_DELAY_MS","rng","seedrandom","randomSeedString","localStorage","getItem","getRandomInt","min","max","Math","ceil","floor","setItem","faker","seed","getTime","randomFromArray","array","db","factory","primaryKey","firstName","String","lastName","username","manyOf","oneOf","comments","comment","reaction","createUserData","internet","userName","author","create","j","lorem","words","recent","paragraphs","serializePost","handlers","rest","req","ctx","getAll","delay","findFirst","where","equals","patch","updatedPost","update","generateRandomNotifications","worker","setupWorker","socketServer","MockSocketServer","sendRandomNotifications","socket","since","obj","send","sendMessage","on","parse","notificationTemplates","numNotifications","pastDate","now","valueOf","setMinutes","getMinutes","template","between","start","onUnhandledRequest","workerStarted","location","pathname","stop","AddPostForm","defaultPannel","isActive","isCancelling","pannelSlice","pannelWidth","pannelHeight","maxRow","maxCol","pannel","curDropState","curStartPos","row","col","curDropPos","gameState","topCancelledRow","setActive","setDisactive","setGameState","cancelBlocks","cancelRows","block","downBlocksAfterCancellation","r","setDropBlocks","startPos","activePos","dropState","clearPrev","some","row_","col_","selectGameState","selectPannel","selectCurBlock","selectBoundary","pannelReducer","GamePannel","idx","getActivePos","blockState","isFilter","pos","rotateFsm","blockShape","rotateState","useGenerateBlock","useCallback","cancellRows","cancelledRows","every","dropStates","round","random","nextStartPos","useCheckBoundary","operation","validStep","Infinity","validStepPerBlock","ControlPannel","controller","initBlock","checkBoundary","timerRef","useRef","moveFnRef","initBlockFnRef","gameStateRef","setInterval","pause","clearInterval","useController","lazyHome","lazy","lazyAbout","LazyLoad","fallback","MyContext","createContext","Provider","Consumer","Grand","Parent","Child","context","NextChild","contextType","changeName","PureComponent","hasError","info","children","Demo","renderBFunc","renderCountFunc","render","A","B","Modal","modalContainer","document","modalRoot","append","ReactDOM","createPortal","ModalChild","PortalDemo","showModal","handleShowModal","ResizeBar","containerRef","widthChange","widths","barRef","onMouseDown","moveEvent","prevLeftTotalWidthPercent","widthDiff","clientX","offsetLeft","getComputedStyle","replace","curWidthPercent","lastWidthPercent","addEventListener","upEvent","removeEventListener","ResizableBox","setWidths","box","n","toFixed","Box1","Box2","textDecoration","padding","demos","TicTacToe","ProxyTest","SearchAxios","setCount","timer","inputValue","unmountComponentAtNode","getElementById","Context","PureComDemo","RenderProp","Portal","ReactRedux","ReduxToolkit","rootDom"],"mappings":"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","file":"static/js/main.276de81b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Ops extends React.Component {\r\n  render() {\r\n    return <div>Ops~</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n  RouteComponentProps,\r\n} from \"react-router-dom\";\r\nimport Ops from \"@/component/Ops\";\r\n\r\nimport \"./index.less\";\r\nimport { Demo } from \"@/menuconfig\";\r\n\r\ntype Props = {\r\n  items: Array<Demo>;\r\n  linkStyle: {\r\n    [Props: string]: string;\r\n  };\r\n  menuPath: string;\r\n};\r\n\r\nclass Menu extends React.Component<RouteComponentProps & Props> {\r\n  toMenu() {\r\n    const { history, menuPath } = this.props;\r\n\r\n    history.push(menuPath);\r\n  }\r\n\r\n  render() {\r\n    const { items, linkStyle } = this.props;\r\n    const menuPath = this.props.menuPath === \"/\" ? \"\" : this.props.menuPath;\r\n\r\n    return (\r\n      <div className=\"body\">\r\n        <Switch>\r\n          <Route path={`${this.props.menuPath}`} exact>\r\n            <div className=\"menu\">\r\n              {items.map((item, index) => (\r\n                <div className=\"menu-item\" key={`${menuPath}${item.path}`}>\r\n                  <div className=\"menu-order\">{index + 1}</div>\r\n                  <Link style={linkStyle} to={`${menuPath}${item.path}`}>\r\n                    {item.name}\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Route>\r\n          {items.map((item) =>\r\n            !Array.isArray(item.component) ? (\r\n              <Route\r\n                path={`${menuPath}${item.path}`}\r\n                key={`${menuPath}${item.path}`}\r\n              >\r\n                <div className=\"demo-area\">\r\n                  <div className=\"demo-content\">\r\n                    {React.createElement(item.component)}\r\n                  </div>\r\n                  <div\r\n                    className=\"back-to-menu\"\r\n                    onClick={this.toMenu.bind(this)}\r\n                    title=\"back to menu\"\r\n                  >\r\n                    ⬅\r\n                  </div>\r\n                </div>\r\n              </Route>\r\n            ) : (\r\n              <Route\r\n                key={`${menuPath}${item.path}`}\r\n                path={`${menuPath}${item.path}`}\r\n              >\r\n                <div className=\"demo-area\">\r\n                  <div className=\"demo-content\">\r\n                    {React.createElement(withRouter(Menu), {\r\n                      items: item.component,\r\n                      linkStyle,\r\n                      menuPath: `${menuPath}${item.path}`,\r\n                    })}\r\n                  </div>\r\n                  <div\r\n                    className=\"back-to-menu\"\r\n                    onClick={this.toMenu.bind(this)}\r\n                    title=\"back to menu\"\r\n                  >\r\n                    ⬅\r\n                  </div>\r\n                </div>\r\n              </Route>\r\n            )\r\n          )}\r\n          <Route path=\"/ops\" component={Ops} exact />\r\n          {/* when the above does not match */}\r\n          <Redirect to=\"/ops\" />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Menu);\r\n","import React from \"react\";\r\nimport { SquareProps, BoardProps, GameProps, GameStates } from \"./type\";\r\n\r\nimport \"./index.less\";\r\n\r\n// class Square extends React.Component {\r\n//   handleSquareClick() {\r\n//     this.props.squareClick();\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <button className=\"square\" onClick={this.handleSquareClick.bind(this)}>\r\n//         {this.props.value}\r\n//       </button>\r\n//     );\r\n//   }\r\n// }\r\nfunction calculateWinner(squares: Array<SquareProps[\"value\"]>) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (const val of lines) {\r\n    const [a, b, c] = val;\r\n\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction Square(props: SquareProps) {\r\n  return (\r\n    <button className=\"square\" onClick={props.squareClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component<BoardProps> {\r\n  renderSquare(i: number) {\r\n    return (\r\n      <Square\r\n        value={this.props.square[i]}\r\n        squareClick={this.props.handleClickOnBoard.bind(this, i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Game extends React.Component<GameProps, GameStates> {\r\n  constructor(props: GameProps) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: new Array(9).fill(null),\r\n        },\r\n      ],\r\n\r\n      xIsNext: true,\r\n\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  handleClick(i: number) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const currentSquare = history[history.length - 1].squares;\r\n\r\n    const nextSquare = currentSquare.slice();\r\n\r\n    // someone won or the square has beenn filled\r\n    if (calculateWinner(nextSquare) || nextSquare[i]) {\r\n      return;\r\n    }\r\n\r\n    nextSquare[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: nextSquare,\r\n        },\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  jumpTo(move: number) {\r\n    this.setState({\r\n      stepNumber: move,\r\n      xIsNext: move % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const currentSquare = history[this.state.stepNumber].squares;\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Go to move #\" + move : \"Go to start\";\r\n\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={this.jumpTo.bind(this, move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status = \"\";\r\n    let result = calculateWinner(currentSquare);\r\n\r\n    if (result) {\r\n      status = `Winner: ${result}`;\r\n    } else {\r\n      status = `Next player: ${this.state.xIsNext ? \"X\" : \"O\"}`;\r\n    }\r\n\r\n    return (\r\n      <div className=\"tic-tac-body\">\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              square={currentSquare}\r\n              handleClickOnBoard={(i: number) => {\r\n                this.handleClick(i);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TodoInputProps } from \"../../type\";\r\nimport \"./index.css\";\r\n\r\nexport default class ToDoInput extends Component<TodoInputProps> {\r\n  handleKeyUp = (\r\n    event: React.KeyboardEvent<HTMLInputElement> &\r\n      React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { target, key } = event;\r\n\r\n    if (key !== \"Enter\") {\r\n      return;\r\n    }\r\n\r\n    if (target.value.trim() === \"\") {\r\n      return alert(\"what the hell is the blank task?\");\r\n    }\r\n\r\n    this.props.addTask(target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <input\r\n          onKeyUp={this.handleKeyUp}\r\n          type=\"text\"\r\n          placeholder=\"Press Enter to Add\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TodoItemProps } from \"../../type\";\r\nimport \"./index.css\";\r\n\r\nexport default class TodoItem extends Component<TodoItemProps> {\r\n  state = {\r\n    mouseFlag: false,\r\n  };\r\n\r\n  handleMouse(flag: boolean) {\r\n    this.setState({\r\n      mouseFlag: flag,\r\n    });\r\n  }\r\n\r\n  handleChange = (id: number) => {\r\n    return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      this.props.updateStatus(id, event.target.checked);\r\n    };\r\n  };\r\n\r\n  handleDelete = (id: number) => {\r\n    return () => {\r\n      if (window.confirm(\"delete?\")) {\r\n        this.props.deleteTask(id);\r\n      }\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { id, task, done } = this.props;\r\n    const { mouseFlag } = this.state;\r\n\r\n    return (\r\n      <div\r\n        style={{ background: mouseFlag ? \"#e6e6e6\" : \"white\" }}\r\n        className=\"item-box\"\r\n        onMouseEnter={() => {\r\n          this.handleMouse(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          this.handleMouse(false);\r\n        }}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={done}\r\n          onChange={this.handleChange(id)}\r\n        />\r\n        <span className=\"task\">{task}</span>\r\n        <button\r\n          style={{ visibility: mouseFlag ? \"visible\" : \"hidden\" }}\r\n          onClick={this.handleDelete(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ToDoItem from \"../ToDoItem\";\r\nimport { TodoListProps } from \"../../type\";\r\nimport \"./index.css\";\r\n\r\nexport default class ToDoList extends Component<TodoListProps> {\r\n  render() {\r\n    const { data, updateStatus, deleteTask } = this.props;\r\n\r\n    return (\r\n      <div className=\"list-box\">\r\n        {data.map((item) => {\r\n          return (\r\n            <ToDoItem\r\n              key={item.id}\r\n              {...item}\r\n              updateStatus={updateStatus}\r\n              deleteTask={deleteTask}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TodoFooterProps } from \"../../type\";\r\nimport \"./index.css\";\r\n\r\nexport default class index extends Component<TodoFooterProps> {\r\n  handleSelectAll = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.selectAll(event.target.checked);\r\n  };\r\n\r\n  handleClearAllDone = () => {\r\n    this.props.clearAllDone();\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    const doneTasks = data.reduce((pre, curVal) => {\r\n      return pre + (curVal.done ? 1 : 0);\r\n    }, 0);\r\n\r\n    const total = data.length;\r\n    return (\r\n      <div className=\"footer-box\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={doneTasks === total && total !== 0}\r\n          onChange={this.handleSelectAll}\r\n        />\r\n        <span className=\"data\">\r\n          {doneTasks} Done / {total} All\r\n        </span>\r\n        <button onClick={this.handleClearAllDone}>Clear all done tasks</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ToDoInput from \"./component/ToDoInput\";\r\nimport ToDoList from \"./component/ToDoList\";\r\nimport ToDoFooter from \"./component/ToDoFooter\";\r\nimport { TodoState } from \"./type\";\r\nimport \"./TodoList.less\";\r\n\r\nexport default class TodoList extends Component<{}, TodoState> {\r\n  state = {\r\n    data: [\r\n      { id: 1, task: \"sleep\", done: true },\r\n      { id: 2, task: \"eat\", done: true },\r\n      { id: 3, task: \"codeing\", done: false },\r\n    ],\r\n\r\n    total: 3,\r\n  };\r\n\r\n  handleAddTask = (newTask: string) => {\r\n    const { data, total } = this.state;\r\n\r\n    const newItem = { id: total + 1, task: newTask, done: false };\r\n\r\n    this.setState({\r\n      data: [newItem, ...data],\r\n      total: total + 1,\r\n    });\r\n  };\r\n\r\n  updateStatus = (id: number, status: boolean) => {\r\n    const { data } = this.state;\r\n\r\n    const newData = data.map((item) => {\r\n      return item.id === id ? { ...item, done: status } : item;\r\n    });\r\n\r\n    this.setState({\r\n      data: newData,\r\n    });\r\n  };\r\n\r\n  deleteTask = (id: number) => {\r\n    const { data } = this.state;\r\n\r\n    const newData = data.filter((item) => {\r\n      return item.id !== id;\r\n    });\r\n\r\n    this.setState({\r\n      data: newData,\r\n    });\r\n  };\r\n\r\n  selectAll = (isAll: boolean) => {\r\n    const { data } = this.state;\r\n\r\n    const newData = data.map((item) => {\r\n      return { ...item, done: isAll };\r\n    });\r\n\r\n    this.setState({\r\n      data: newData,\r\n    });\r\n  };\r\n\r\n  clearAllDone = () => {\r\n    const { data } = this.state;\r\n\r\n    const newData = data.filter((item) => {\r\n      return !item.done;\r\n    });\r\n\r\n    this.setState({\r\n      data: newData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-box\">\r\n        <ToDoInput addTask={this.handleAddTask} />\r\n        <ToDoList\r\n          data={this.state.data}\r\n          updateStatus={this.updateStatus}\r\n          deleteTask={this.deleteTask}\r\n        />\r\n        <ToDoFooter\r\n          data={this.state.data}\r\n          selectAll={this.selectAll}\r\n          clearAllDone={this.clearAllDone}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Proxy extends Component {\r\n  getData = () => {\r\n    // proxy server\r\n    // leoProxy is used to fine the corresponding proxy\r\n    // when there are multiple proxys\r\n    axios.get(`http://localhost:3000/leoProxy/testData`).then(\r\n      (res) => {\r\n        console.log(res.data);\r\n      },\r\n      (err) => {\r\n        console.log(\"error!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.getData}>Get data</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n// import PubSub from \"pubsub-js\";\r\nimport { SearchProps } from \"../../type\";\r\nimport \"./index.less\";\r\n\r\nexport default class Search extends Component<SearchProps> {\r\n  private searchInput = React.createRef<HTMLInputElement>();\r\n\r\n  updateState = () => {\r\n    const searchStr = this.searchInput.current!.value;\r\n\r\n    // update the status\r\n    this.props.updateState({ isFirst: false, isLoading: true });\r\n\r\n    axios\r\n      // using the proxy\r\n      .get(`http://localhost:3000/leoProxy/search/users?q=${searchStr}`)\r\n      .then(\r\n        (res) => {\r\n          // console.log(res.data);\r\n          // PubSub.publish(\"status\", { isLoading: false, data: res.data.items });\r\n          this.props.updateState({ isLoading: false, data: res.data.items });\r\n        },\r\n        (err) => {\r\n          // console.log(err);\r\n          this.props.updateState({ isLoading: false, err: err.message });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-box\">\r\n        <div className=\"title\">Search Github Users</div>\r\n        <input\r\n          ref={this.searchInput}\r\n          type=\"text\"\r\n          placeholder=\"enter the name you search\"\r\n        />\r\n        <button onClick={this.updateState}>Search</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import PubSub from \"pubsub-js\";\r\nimport { Status } from \"../../type\";\r\nimport \"./index.less\";\r\n\r\nexport default class List extends Component<Status> {\r\n  // when using the PubSub\r\n  // componentDidMount() {\r\n  //   this.token = PubSub.subscribe(\"status\", (_, status) => {\r\n  //     this.setState(status);\r\n  //   });\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   PubSub.unsubscribe(this.token);\r\n  // }\r\n\r\n  // right now the state is hoisted to the father\r\n  render() {\r\n    const { data, isFirst, isLoading, err } = this.props;\r\n\r\n    return (\r\n      <div className=\"search-list-box\">\r\n        {isFirst ? (\r\n          <h2>Welcome!</h2>\r\n        ) : isLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : err ? (\r\n          <h2 style={{ color: \"red\" }}>{err}</h2>\r\n        ) : data ? (\r\n          data.map((val) => {\r\n            return (\r\n              <div className=\"item\" key={val.login}>\r\n                <a href={val.html_url}>\r\n                  <img src={val.avatar_url} alt=\"avatar\" />\r\n                </a>\r\n                <div className=\"desc\">{val.login}</div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./component/Search\";\r\nimport List from \"./component/List\";\r\nimport { Status } from \"./type\";\r\n\r\nexport default class App extends Component {\r\n  state: Status = {\r\n    data: [],\r\n    isFirst: true,\r\n    isLoading: false,\r\n    err: \"\",\r\n  };\r\n\r\n  updateState = (status: Status) => {\r\n    this.setState({\r\n      data: status.data,\r\n      isFirst: status.isFirst,\r\n      isLoading: status.isLoading,\r\n      err: status.err,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search updateState={this.updateState} />\r\n        <List {...this.state} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const initialWorks = [\"sleeping\", \"coding\", \"playing\"];\r\nexport default function todoReducer(\r\n  prevState: string[] = initialWorks,\r\n  action: any\r\n) {\r\n  const { type, work } = action;\r\n\r\n  switch (type) {\r\n    case \"ADD\":\r\n      return prevState.concat(work);\r\n    case \"SUB\":\r\n      if (prevState.includes(work)) {\r\n        return prevState.filter((job) => job !== work);\r\n      }\r\n\r\n      return [...prevState];\r\n    default:\r\n      return [...prevState];\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport countReducer from \"./counter/count_reducer\";\r\nimport todoReducer from \"./todos/todo_reducer\";\r\n\r\n// handle the async actions\r\n// the async reducers return a function,\r\n// but we need an object with type prop\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default createStore(\r\n  combineReducers({ counterSum: countReducer, todoList: todoReducer }),\r\n  applyMiddleware(thunk)\r\n);\r\n","const initData = 0;\r\nexport default function counterReducer (prevState = initData, action: any) {\r\n  const { type, data } = action;\r\n\r\n  switch (type) {\r\n    case \"increment\":\r\n      return prevState + data;\r\n    case \"decrement\":\r\n      return prevState - data;\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","import { INCREMENT, DECREMENT } from \"./constant\";\r\nimport { Dispatch } from \"react\";\r\nimport { AnyAction } from \"redux\";\r\n\r\n// sync action, reutrn an obj\r\nexport const incrementAction = (data: number) => ({ type: INCREMENT, data });\r\nexport const decrementAction = (data: number) => ({ type: DECREMENT, data });\r\n\r\n// async action, return a function\r\nexport const incrementAsyncAction = (data: number, time: number) => {\r\n  return (dispatch: Dispatch<AnyAction>) => {\r\n    setTimeout(() => {\r\n      dispatch(incrementAction(data));\r\n    }, time);\r\n\r\n    return { type: \"asycIncrement\" };\r\n  };\r\n};\r\n","export const INCREMENT = \"increment\";\r\nexport const DECREMENT = \"decrement\";\r\n","import React, { Component } from \"react\";\r\nimport store from \"../../redux/store\";\r\nimport {\r\n  incrementAction,\r\n  decrementAction,\r\n  incrementAsyncAction,\r\n} from \"../../redux/counter/count_action\";\r\n\r\nexport default class Count extends Component {\r\n  state = {\r\n    // count: 0,\r\n    step: 1,\r\n  };\r\n\r\n  stateChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n    this.setState({\r\n      step: Number(value),\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { step } = this.state;\r\n\r\n    store.dispatch(incrementAction(step));\r\n  };\r\n\r\n  sub = () => {\r\n    const { step } = this.state;\r\n\r\n    store.dispatch(decrementAction(step));\r\n  };\r\n\r\n  addIfOdd = () => {\r\n    const { step } = this.state;\r\n    // the store contains two states\r\n    const { counterSum } = store.getState();\r\n\r\n    if (counterSum % 2 === 0) {\r\n      return;\r\n    }\r\n\r\n    store.dispatch(incrementAction(step));\r\n  };\r\n\r\n  addAsync = () => {\r\n    const { step } = this.state;\r\n\r\n    // async action\r\n    store.dispatch(incrementAsyncAction(step, 1000));\r\n  };\r\n\r\n  render() {\r\n    const { counterSum, todoList } = store.getState();\r\n\r\n    return (\r\n      <div className=\"box\">\r\n        <h2 className=\"count-show\">SUM: {counterSum}</h2>\r\n        <h2>Todo Num: {todoList.length}</h2>\r\n        <select onChange={this.stateChange}>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n        &nbsp;\r\n        <button onClick={this.add}>+</button>&nbsp;\r\n        <button onClick={this.sub}>-</button>&nbsp;\r\n        <button onClick={this.addIfOdd}>+ ifodd</button>&nbsp;\r\n        <button onClick={this.addAsync}>+ async</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const addWork = (work: string) => ({ type: \"ADD\", work });\r\n\r\nexport const subWork = (work: string) => ({ type: \"SUB\", work });\r\n","import React, { Component } from \"react\";\r\nimport store from \"../../redux/store\";\r\nimport { addWork, subWork } from \"../../redux/todos/todo_action\";\r\nimport \"./todos.less\";\r\n\r\nexport default class Todos extends Component {\r\n  workInput: React.RefObject<HTMLInputElement> = React.createRef();\r\n\r\n  addToList = () => {\r\n    const work = this.workInput.current!.value;\r\n\r\n    if (work.trim() === \"\") return alert(\"blank work?\");\r\n\r\n    store.dispatch(addWork(work));\r\n  };\r\n\r\n  subFromList = () => {\r\n    const work = this.workInput.current!.value;\r\n\r\n    if (work.trim() === \"\") return alert(\"blank work?\");\r\n\r\n    const { todoList } = store.getState();\r\n\r\n    if (!todoList.includes(work)) return alert(\"no such work\");\r\n\r\n    store.dispatch(subWork(work));\r\n  };\r\n\r\n  render() {\r\n    const { todoList, counterSum } = store.getState();\r\n\r\n    return (\r\n      <div className=\"todo-redux-box\">\r\n        <h2>SUM: {counterSum}</h2>\r\n        <span>Todo List:</span>\r\n        <input type=\"text\" ref={this.workInput} />\r\n        <button onClick={this.addToList}>Add</button>\r\n        <button onClick={this.subFromList}>Sub</button>\r\n        {todoList.map((work, index) => (\r\n          <li key={work}>{`${index + 1}: ${work}`}</li>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport store from \"./redux/store\";\r\nimport Count from \"./component/Count\";\r\nimport Todos from './component/Todos/Todos';\r\n\r\nexport default class ReduxDemo extends Component {\r\n  unsubscribe: () => void = () => {}\r\n\r\n  componentDidMount() {\r\n    // when one of the states in the store changes\r\n    this.unsubscribe = store.subscribe(() => {\r\n      this.forceUpdate();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {    \r\n    return (\r\n      <div>\r\n        <Count />\r\n        <hr />\r\n        <Todos />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// for action types\r\nexport const INCREMENT = \"increment\";\r\nexport const DECREMENT = \"decrement\";\r\nexport const ADD_PERSON = \"add_person\";\r\n","import { ADD_PERSON } from \"../constant\";\r\n\r\nconst initData = [{ id: 1, name: \"leo\", age: \"22\" }];\r\nexport default function personReducer(prevState = initData, action: any) {\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case ADD_PERSON:\r\n      // must return a new reference!!\r\n      // reudx will have a shallow comparsion\r\n      return [data, ...prevState];\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\n\r\n// reducers\r\nimport sum from \"./reducers/count\";\r\nimport persons from \"./reducers/person\";\r\n\r\n// handle the async actions\r\nimport thunk from \"redux-thunk\";\r\n// for dev tools of redux\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport default createStore(\r\n  combineReducers({\r\n    sum,\r\n    persons,\r\n  }),\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","const initData = 0;\r\nexport default function counterReducer(prevState = initData, action: any) {\r\n  const { type, data } = action;\r\n\r\n  switch (type) {\r\n    case \"increment\":\r\n      return prevState + data;\r\n    case \"decrement\":\r\n      return prevState - data;\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","import { INCREMENT, DECREMENT } from \"../constant\";\r\nimport { Dispatch } from \"react\";\r\nimport { AnyAction } from \"redux\";\r\n// sync action, reutrn an obj\r\nexport const incrementAction = (data: number) => ({ type: INCREMENT, data });\r\nexport const decrementAction = (data: number) => ({ type: DECREMENT, data });\r\n\r\n// async action, return a function\r\nexport const incrementAsyncAction = (data: number, time: number) => {\r\n  return (dispatch: Dispatch<AnyAction>) => {\r\n    setTimeout(() => {\r\n      dispatch(incrementAction(data));\r\n    }, time);\r\n  };\r\n};\r\n","// import CountUI from \"../../component/Count\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  incrementAction,\r\n  decrementAction,\r\n  incrementAsyncAction,\r\n} from \"../../redux/actions/count\";\r\n\r\n// put the UI component in the same file\r\nclass Count extends Component {\r\n  state = {\r\n    step: 1,\r\n  };\r\n\r\n  stateChange = (event) => {\r\n    const { value } = event.target;\r\n    this.setState({\r\n      step: value * 1,\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { step } = this.state;\r\n\r\n    // from the container\r\n    this.props.add(step);\r\n  };\r\n\r\n  sub = () => {\r\n    const { step } = this.state;\r\n\r\n    this.props.sub(step);\r\n  };\r\n\r\n  addIfOdd = () => {\r\n    const { step } = this.state;\r\n    const { count, add } = this.props;\r\n\r\n    if (count % 2 === 0) {\r\n      return;\r\n    }\r\n\r\n    add(step);\r\n  };\r\n\r\n  addAsync = () => {\r\n    const { step } = this.state;\r\n\r\n    // async action\r\n    this.props.asyncAdd(step, 1000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"box\">\r\n        <h2 className=\"count-show\">\r\n          SUM: {this.props.count} --- person number: {this.props.personNum}\r\n        </h2>\r\n        <select onChange={this.stateChange}>\r\n          <option select=\"1\">1</option>\r\n          <option select=\"2\">2</option>\r\n          <option select=\"3\">3</option>\r\n        </select>\r\n        &nbsp;\r\n        <button onClick={this.add}>+</button>&nbsp;\r\n        <button onClick={this.sub}>-</button>&nbsp;\r\n        <button onClick={this.addIfOdd}>+ odd</button>&nbsp;\r\n        <button onClick={this.addAsync}>+ async</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// concise version\r\nexport default connect(\r\n  (state) => ({\r\n    count: state.sum,\r\n    personNum: state.persons.length,\r\n  }),\r\n\r\n  {\r\n    add: incrementAction,\r\n    sub: decrementAction,\r\n    asyncAdd: incrementAsyncAction,\r\n  }\r\n)(Count);\r\n\r\n/**\r\n *\r\n * @param {*} state in redux\r\n * 1. return an obj\r\n * 2. key is the key of the props in UI component\r\n * 3. used to map the states to the props...\r\n */\r\n// function mapStateToProps(state) {\r\n//   return {\r\n//     count: state,\r\n//   };\r\n// }\r\n\r\n/**\r\n *\r\n * @param {*} dispatch the actions in redux\r\n * 1. return an obj (must store functions (actions))\r\n * 2. key is the name of the fucntions, value is the functions\r\n * 3. used to map the actions to the props...\r\n */\r\n// function mapDispatchToProps(dispatch) {\r\n//   return {\r\n//     add: (step) => dispatch(incrementAction(step)),\r\n//     sub: (step) => dispatch(decrementAction(step)),\r\n//     asyncAdd: (step, time) => dispatch(incrementAsyncAction(step, time)),\r\n//   };\r\n// }\r\n\r\n// connect the container with the UI component and the redux\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(CountUI);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { AddPerosonAction } from \"../../redux/actions/person\";\r\n\r\nimport { Person as PersonData, ReduxState } from \"../../redux/type\";\r\n\r\ntype PersonProps = {\r\n  persons: Array<PersonData>;\r\n  count: number;\r\n  add: (personObj: PersonData) => void;\r\n};\r\n\r\nclass Person extends Component<PersonProps> {\r\n  state = {\r\n    inputName: \"\",\r\n    inputAge: \"\",\r\n    id: 1,\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { inputName, inputAge, id } = this.state;\r\n\r\n    const personObj = { id: id + 1, name: inputName, age: inputAge };\r\n\r\n    this.props.add(personObj);\r\n\r\n    this.setState({\r\n      inputName: \"\",\r\n      inputAge: \"\",\r\n      id: id + 1,\r\n    });\r\n  };\r\n\r\n  handleNameInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      inputName: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleAgeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      inputAge: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"person-box\">\r\n        <h2>Person Cpmponent --- count: {this.props.count}</h2>\r\n        <input\r\n          onChange={this.handleNameInput}\r\n          type=\"text\"\r\n          placeholder=\"name?\"\r\n          value={this.state.inputName}\r\n        />\r\n        &nbsp;\r\n        <input\r\n          onChange={this.handleAgeInput}\r\n          type=\"text\"\r\n          placeholder=\"age?\"\r\n          value={this.state.inputAge}\r\n        />\r\n        &nbsp;\r\n        <button onClick={this.handleAdd}>Add a person</button>\r\n        <ul>\r\n          {this.props.persons.map((person) => {\r\n            return (\r\n              <li key={person.id}>\r\n                {person.name}---{person.age}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state: ReduxState) => ({\r\n    persons: state.persons,\r\n    count: state.sum,\r\n  }),\r\n  {\r\n    add: AddPerosonAction,\r\n  }\r\n)(Person);\r\n","import { ADD_PERSON } from \"../constant\";\r\nimport { Person } from \"../type\";\r\n\r\n\r\nexport const AddPerosonAction = (personObj: Person) => ({\r\n  type: ADD_PERSON,\r\n  data: personObj,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n// import Count from \"./component/Count\";\r\n\r\n// use the container\r\nimport Count from \"./component/Count\";\r\nimport Person from \"./component/Person\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Provider store={store}>\r\n          {/* connect the container with the redux */}\r\n          {/* <Count store={store} /> */}\r\n          {/* using Provider in index to give the store to all components */}\r\n          <Count />\r\n          <hr />\r\n          <Person />\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n// function FunctionInput() {\r\n//   const state = {\r\n//     name: \"leo\",\r\n//     age: 22,\r\n//   };\r\n\r\n//   const handleInputChanged = (el: React.ChangeEvent<HTMLInputElement>) => {\r\n//     console.log(el.target.value);\r\n//   };\r\n\r\n//   return <input type=\"text\" onChange={handleInputChanged} />;\r\n// }\r\n\r\nclass ClassInput extends Component {\r\n  state = {\r\n    name: \"leo\",\r\n    age: 22,\r\n  };\r\n\r\n  handleInputChanged = (el: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(el.target.value);\r\n  };\r\n\r\n  render() {\r\n    return <input type=\"text\" onChange={this.handleInputChanged} />;\r\n  }\r\n}\r\n\r\nexport default class RefDemo extends Component {\r\n  classInputRef = React.createRef<ClassInput>();\r\n  // cannot use ref to get function component instance\r\n  //   funcInputRef = React.createRef<FunctionInput>();\r\n\r\n  componentDidMount() {\r\n    console.log(this.classInputRef.current?.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Func: <FunctionInput ref={this.funcInputRef}/> */}\r\n        &nbsp; Class: <ClassInput ref={this.classInputRef} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.less\";\r\n\r\nexport default function Header(props: { demoPath: string }) {\r\n  const { demoPath } = props;\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <title>Mini Postland</title>\r\n      <div className=\"tap-box\">\r\n        <Link className=\"link-btn\" to={`${demoPath}/posts`}>\r\n          Posts\r\n        </Link>\r\n        <Link className=\"link-btn\" to={`${demoPath}/addPost`}>\r\n          Add Post\r\n        </Link>\r\n        <Link className=\"link-btn\" to={`${demoPath}/users`}>\r\n          Users\r\n        </Link>\r\n        <Link className=\"link-btn\" to={`${demoPath}/notifications`}>\r\n          Notifications\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// A tiny wrapper around fetch(), borrowed from\r\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\r\n\r\nexport async function client(endpoint, { body, ...customConfig } = {}) {\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n\r\n  const config = {\r\n    method: body ? \"POST\" : \"GET\",\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      ...customConfig.headers,\r\n    },\r\n  };\r\n\r\n  if (body) {\r\n    config.body = JSON.stringify(body);\r\n  }\r\n\r\n  let data;\r\n  try {\r\n    const response = await window.fetch(endpoint, config);\r\n    data = await response.json();\r\n    if (response.ok) {\r\n      // Return a result object similar to Axios\r\n      return {\r\n        status: response.status,\r\n        data,\r\n        headers: response.headers,\r\n        url: response.url,\r\n      };\r\n    }\r\n    throw new Error(response.statusText);\r\n  } catch (err) {\r\n    return Promise.reject(err.message ? err.message : data);\r\n  }\r\n}\r\n\r\nclient.get = function (endpoint, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, method: \"GET\" });\r\n};\r\n\r\nclient.post = function (endpoint, body, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, body });\r\n};\r\n","import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  EntityId,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../store\";\r\nimport { UserData, UserExtraField } from \"./user\";\r\nimport { client } from \"../../api/client\";\r\n\r\nconst userAdapter = createEntityAdapter<UserData>();\r\n\r\nconst initialState = userAdapter.getInitialState({\r\n  status: \"idle\",\r\n  error: null,\r\n} as UserExtraField);\r\n\r\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\r\n  const resp = await client.get(\"/fakeApi/users\");\r\n\r\n  return resp.data;\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state, _) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.status = \"complete\";\r\n        userAdapter.setAll(state, action.payload);\r\n      })\r\n      .addCase(fetchUsers.rejected, (state, _) => {\r\n        state.status = \"failed\";\r\n      });\r\n  },\r\n});\r\n\r\nconst { selectAll, selectById } = userAdapter.getSelectors(\r\n  (state: RootState) => state.users\r\n);\r\n\r\nexport const selectAllUsers = selectAll;\r\nexport const selectUserById = (userId: EntityId) => (state: RootState) =>\r\n  selectById(state, userId);\r\nexport const selectUserFetchStatus = (state: RootState) => state.users.status;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserById } from \"../../users/userSlice\";\r\n\r\nexport default function PostAuthor({ userId }: { userId: string }) {\r\n  const user = useSelector(selectUserById(userId));\r\n\r\n  return <span>by {user ? user.name : \"Unknown author\"}</span>;\r\n}\r\n","import React from \"react\";\r\nimport { parseISO, formatDistanceToNow } from \"date-fns\";\r\n\r\nexport default function TimeAge({ timestamp }: { timestamp: string }) {\r\n  let timeAgo = \"\";\r\n\r\n  if (timestamp) {\r\n    const date = parseISO(timestamp);\r\n    const timePeriod = formatDistanceToNow(date);\r\n    timeAgo = `${timePeriod} ago`;\r\n  }\r\n\r\n  return (\r\n    <span title={timestamp}>\r\n      &nbsp; <i>{timeAgo}</i>\r\n    </span>\r\n  );\r\n}\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport {\r\n  PostAddedField,\r\n  PostUpdatedPayload,\r\n  ReactionAddedPayload,\r\n  PostData,\r\n} from \"../posts/post\";\r\n\r\nexport const apiSlice = createApi({\r\n  // The cache reducer expects to be added at `state.api` (already default - this is optional)\r\n  reducerPath: \"api\",\r\n  // All of our requests will have URLs starting with '/fakeApi'\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"/fakeApi\" }),\r\n  // define all the tags\r\n  tagTypes: [\"Posts\"] as string[],\r\n  // The \"endpoints\" represent operations and requests for this server\r\n  endpoints: (builder) => ({\r\n    // The `getPosts` endpoint is a \"query\" operation that returns data\r\n    getPosts: builder.query<PostData[], void>({\r\n      // The URL for the request is '/fakeApi/posts'\r\n      query: () => \"/posts\",\r\n      // when the mutation includes one of the tags\r\n      // in the array, this data will be refetched\r\n      // providesTags: [\"Post\"],\r\n      // it can be a callback as well\r\n      providesTags: (queryRet = [], error, queryArg) => [\r\n        \"Posts\",\r\n        // specific to a certian post\r\n        ...queryRet.map(({ id }) => ({ type: \"Posts\", id })),\r\n      ],\r\n      // the cached time when no subscribers\r\n      // 60s by default\r\n      keepUnusedDataFor: 300, // 300s 5min\r\n    }),\r\n    getPost: builder.query<PostData, string>({\r\n      query: (postId) => `/posts/${postId}`,\r\n      providesTags: (queryRet, _, __) =>\r\n        queryRet ? [\"Posts\", { type: \"Posts\", id: queryRet.id }] : [\"Posts\"],\r\n    }),\r\n    addNewPost: builder.mutation<\r\n      unknown,\r\n      // the other fields will be handled in server-side\r\n      PostAddedField\r\n    >({\r\n      query: (newPost) => ({\r\n        url: \"/posts\",\r\n        method: \"POST\",\r\n        // Include the entire post object as the body of the request\r\n        body: newPost,\r\n      }),\r\n      // when mutating, the query containing the tags will be called\r\n      // but why can we just add to the cached list\r\n      // instead of refetching...\r\n      invalidatesTags: [\"Posts\"],\r\n    }),\r\n    editPost: builder.mutation<unknown, PostUpdatedPayload>({\r\n      query: (post) => ({\r\n        url: `/posts/${post.id}`,\r\n        method: \"PATCH\",\r\n        body: post,\r\n      }),\r\n      invalidatesTags: (_, __, arg) => [{ type: \"Posts\", id: arg.id }],\r\n    }),\r\n    addReaction: builder.mutation<unknown, ReactionAddedPayload>({\r\n      query: ({ id, reactName }) => ({\r\n        url: `/posts/${id}/reactions`,\r\n        method: \"POST\",\r\n        body: { reactName },\r\n      }),\r\n      // for optimistic updates\r\n      async onQueryStarted({ id, reactName }, { dispatch, queryFulfilled }) {\r\n        // `updateQueryData` requires the endpoint name and cache key arguments,\r\n        // so it knows which piece of cache state to update\r\n        const patchResult = dispatch(\r\n          apiSlice.util.updateQueryData(\"getPosts\", undefined, (draft) => {\r\n            // The `draft` is Immer-wrapped and can be \"mutated\" like in createSlice\r\n            const post = draft.find((post) => post.id === id);\r\n            if (post) {\r\n              post.reactions[reactName]++;\r\n            }\r\n          })\r\n        );\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n        }\r\n      },\r\n      invalidatesTags: (_, __, arg) => [\"Posts\", { type: \"Posts\", id: arg.id }],\r\n    }),\r\n  }),\r\n});\r\n\r\n// Export the auto-generated hook for the `getPosts` query endpoint\r\n// use + <endpoints name (capitalized)> + Query|Mutation\r\nexport const {\r\n  useGetPostsQuery,\r\n  useGetPostQuery,\r\n  useAddNewPostMutation,\r\n  useEditPostMutation,\r\n  useAddReactionMutation,\r\n} = apiSlice;\r\n","import React from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { reactionAdded } from \"../postSlice\";\r\nimport { PostData, ReactionNames } from \"../post\";\r\nimport { useAddReactionMutation } from \"../../api/apiSlice\";\r\nimport \"./PostReactBtn.less\";\r\n\r\nconst reactionEmoji = {\r\n  thumbsUp: \"👍\",\r\n  hooray: \"🎉\",\r\n  heart: \"❤️\",\r\n  rocket: \"🚀\",\r\n  eyes: \"👀\",\r\n};\r\n\r\nexport default function PostReactBtn({ post }: { post: PostData }) {\r\n  // const dispatch = useDispatch();\r\n  const [updataReaction] = useAddReactionMutation();\r\n\r\n  return (\r\n    <div className=\"react-btn-container\">\r\n      {Object.entries(reactionEmoji).map(([name, emoji]) => (\r\n        <button\r\n          className=\"btn emoji-btn\"\r\n          key={name}\r\n          onClick={() =>\r\n            // dispatch(\r\n            //   reactionAdded({ id: post.id, reactName: name as ReactionNames })\r\n            // )\r\n\r\n            updataReaction({ id: post.id, reactName: name as ReactionNames })\r\n          }\r\n        >\r\n          {emoji}{\" \"}\r\n          <span style={{ fontWeight: \"bold\" }}>\r\n            {post.reactions[name as ReactionNames]}\r\n          </span>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { useSelector } from \"react-redux\";\r\nimport PostAuthor from \"../PostAuthor/PostAuthor\";\r\nimport TimeAge from \"@/demos/react-basis/12-redux-toolkit/components/TimeAgo/TimeAge\";\r\nimport PostReactBtn from \"../PostReactBtn/PostReactBtn\";\r\nimport { PostData } from \"../post\";\r\n// import { selectPostById } from \"../postSlice\";\r\nimport \"./PostItem.less\";\r\n// import { EntityId } from \"@reduxjs/toolkit\";\r\n\r\nexport default function PostItem({ post }: { post: PostData }) {\r\n  // now using the normalized data to find the item\r\n  // instead of array\r\n  // const post = useSelector(selectPostById(postId)) as PostData;\r\n  const detailPath = `/reduxToolkit/posts/${post.id}`;\r\n\r\n  return (\r\n    <article className=\"post-excerpt\">\r\n      <h2>{post.title}</h2>\r\n      <PostAuthor userId={post.user} />\r\n      <TimeAge timestamp={post.date} />\r\n      <hr style={{ margin: \"5px 0\" }} />\r\n      <p className=\"post-content\">{post.content.slice(0, 100)}</p>\r\n      <PostReactBtn post={post} />\r\n      <Link to={detailPath} className=\"view-btn btn\">\r\n        View\r\n      </Link>\r\n    </article>\r\n  );\r\n}\r\n\r\n// just like pureComponent for class component\r\n// export default React.memo(PostItem);\r\n","import React from \"react\";\r\nimport \"./Spinner.less\";\r\n\r\nexport default function Spinner({ text = \"\", size = \"5em\" }) {\r\n  const header = text ? <h4>{text}</h4> : null;\r\n  return (\r\n    <div className=\"spinner\">\r\n      {header}\r\n      <div className=\"loader\" style={{ height: size, width: size }} />\r\n    </div>\r\n  );\r\n}\r\n","import { useMemo, useEffect, ReactNode } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PostItem from \"../PostItem/PostItem\";\r\n// import { selectPostIds, fetchPosts } from \"../postSlice\";\r\nimport { RootState } from \"@/demos/react-basis/12-redux-toolkit/store\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\nimport { fetchUsers } from \"../../users/userSlice\";\r\nimport { useGetPostsQuery } from \"../../api/apiSlice\";\r\nimport \"./PostList.less\";\r\n\r\nexport default function PostList() {\r\n  const dispatch = useDispatch();\r\n\r\n  // const postIds = useSelector(selectPostIds);\r\n  // const postFetchStatus = useSelector((state: RootState) => state.posts.status);\r\n  // const postFetchError = useSelector((state: RootState) => state.posts.error);\r\n  const userFetchStatus = useSelector((state: RootState) => state.users.status);\r\n\r\n  useEffect(() => {\r\n    // if (postFetchStatus === \"idle\") {\r\n    //   dispatch(fetchPosts());\r\n    // }\r\n\r\n    if (userFetchStatus === \"idle\") {\r\n      dispatch(fetchUsers());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // replace the postSlice.ts\r\n  // this is not stored in the Redux store anymore\r\n  // the data will be cached once query\r\n  // actually it is the endpoint query func being cached with the same arg\r\n  // unless the arg changes or using refetch func, it wont re-fetch\r\n  const {\r\n    data: posts = [],\r\n    isLoading, // only once for first time\r\n    // isFetching,\r\n    isSuccess,\r\n    isError,\r\n    // error,\r\n    // refetch\r\n  } = useGetPostsQuery();\r\n\r\n  // to avoid sorting every time re-render\r\n  // unless posts has been changed\r\n  const sortedPosts = useMemo(() => {\r\n    const sortedPosts = posts.slice();\r\n    // Sort posts in descending chronological order\r\n    sortedPosts.sort((a, b) => b.date.localeCompare(a.date));\r\n    return sortedPosts;\r\n  }, [posts]);\r\n\r\n  let renderedPosts: ReactNode;\r\n\r\n  if (isLoading) {\r\n    renderedPosts = <Spinner text=\"Loading\" />;\r\n  } else if (isSuccess) {\r\n    renderedPosts = sortedPosts.map((post) => (\r\n      <PostItem post={post} key={post.id} />\r\n    ));\r\n  } else if (isError) {\r\n    renderedPosts = <div>{`error, cannot fetch the list so far`}</div>;\r\n  }\r\n\r\n  // if (postFetchStatus === \"loading\") {\r\n  //   renderedPosts = <Spinner text=\"Loading\" />;\r\n  // } else if (postFetchStatus === \"complete\") {\r\n  //   renderedPosts = postIds.map((postId) => (\r\n  //     <PostItem postId={postId} key={postId} />\r\n  //   ));\r\n  // } else if (postFetchStatus === \"failed\") {\r\n  //   renderedPosts = <div>{postFetchError}</div>;\r\n  // }\r\n\r\n  return <div className=\"post-list-container\">{renderedPosts}</div>;\r\n}\r\n","import { MouseEvent, ChangeEvent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\n// import { addNewPost } from \"../postSlice\";\r\nimport {\r\n  selectAllUsers,\r\n  selectUserFetchStatus,\r\n  fetchUsers,\r\n} from \"../../users/userSlice\";\r\nimport { useAddNewPostMutation } from \"../../api/apiSlice\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\n\r\nimport \"./AddPostForm.less\";\r\n\r\nfunction AddPostForm(props: RouteComponentProps) {\r\n  const users = useSelector(selectAllUsers);\r\n  const userFetchStatus = useSelector(selectUserFetchStatus);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (userFetchStatus === \"idle\") {\r\n    dispatch(fetchUsers());\r\n  }\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const [addNewPost, { isLoading }] = useAddNewPostMutation();\r\n\r\n  const onTitleChanged = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setTitle(e.target.value);\r\n  const onContentChanged = (e: ChangeEvent<HTMLTextAreaElement>) =>\r\n    setContent(e.target.value);\r\n  const onUserSelected = (e: ChangeEvent<HTMLSelectElement>) =>\r\n    setUserId(e.target.value);\r\n\r\n  const onSaveBtnClick = async (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (title.trim() === \"\") return alert(\"Please enter the title\");\r\n\r\n    if (content.trim() === \"\") return alert(\"Please give some content\");\r\n\r\n    if (userId.trim() === \"\") return alert(\"Please select the user\");\r\n\r\n    try {\r\n      // setAddStatus(\"pending\");\r\n      // await dispatch(addNewPost({ title, content, user: userId }));\r\n      await addNewPost({ title, content, user: userId }).unwrap();\r\n\r\n      // alert(\"Added!\");\r\n      // jump to the /posts\r\n      // and the addStatus will be idle next time rendering\r\n      props.history.push(\"/reduxToolkit/posts\");\r\n    } catch (err) {\r\n      console.error(\"Failed to save the post: \", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"add-post-form-container\">\r\n      <form className=\"form\">\r\n        <label>Post Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postTitle\"\r\n          name=\"postTitle\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n          placeholder={`What's on your mind?`}\r\n        />\r\n        <label>Author:</label>\r\n        <select name=\"user\" id=\"user\" onChange={onUserSelected} value={userId}>\r\n          <option value=\"\" style={{ display: \"none\" }}></option>\r\n          {users.map((user) => (\r\n            <option value={user.id} key={user.id}>\r\n              {user.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Post Content:</label>\r\n        <textarea\r\n          className=\"scroll-bar\"\r\n          id=\"postContent\"\r\n          name=\"postContent\"\r\n          value={content}\r\n          onChange={onContentChanged}\r\n        />\r\n        <div style={{ display: \"flex\" }}>\r\n          <button className=\"btn\" onClick={onSaveBtnClick} disabled={isLoading}>\r\n            Save\r\n          </button>\r\n          {isLoading ? (\r\n            <span style={{ display: \"inline-block\" }}>\r\n              <Spinner size={\"2em\"} />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default withRouter(AddPostForm);\r\n","import { MouseEvent, ChangeEvent, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { postUpdated } from \"../postSlice\";\r\n// import { selectPostById } from \"../postSlice\";\r\nimport { useEditPostMutation, useGetPostQuery } from \"../../api/apiSlice\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\nimport \"./EditPostForm.less\";\r\n\r\nexport default function EditPostForm(\r\n  props: RouteComponentProps<{ postId: string }>\r\n) {\r\n  const { postId } = props.match.params;\r\n\r\n  // const post = useSelector(selectPostById(postId));\r\n\r\n  const { data: post } = useGetPostQuery(postId);\r\n  const [updatePost, { isLoading }] = useEditPostMutation();\r\n\r\n  const [title, setTitle] = useState(post ? post.title : \"\");\r\n  const [content, setContent] = useState(post ? post.content : \"\");\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  const onTitleChanged = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setTitle(e.target.value);\r\n  const onContentChanged = (e: ChangeEvent<HTMLTextAreaElement>) =>\r\n    setContent(e.target.value);\r\n\r\n  const onSaveBtnClick = async (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (title.trim() === \"\") return alert(\"Please enter the title\");\r\n\r\n    if (content.trim() === \"\") return alert(\"Please give some content\");\r\n\r\n    // dispatch(postUpdated(postId, title, content));\r\n    await updatePost({ id: postId, title, content });\r\n\r\n    alert(\"Updated!\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"edit-post-form-container\">\r\n      <form className=\"form\">\r\n        <label htmlFor=\"\">Post Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postTitle\"\r\n          name=\"postTitle\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n          placeholder={`What's on your mind?`}\r\n        />\r\n        <label htmlFor=\"\">Post Content:</label>\r\n        <textarea\r\n          className=\"scroll-bar\"\r\n          id=\"postContent\"\r\n          name=\"postContent\"\r\n          value={content}\r\n          onChange={onContentChanged}\r\n        />\r\n        <div style={{ display: \"flex\" }}>\r\n          <button className=\"btn\" onClick={onSaveBtnClick} disabled={isLoading}>\r\n            Edit Post\r\n          </button>\r\n          {isLoading ? (\r\n            <span style={{ display: \"inline-block\" }}>\r\n              <Spinner size={\"2em\"} />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport PostAuthor from \"../PostAuthor/PostAuthor\";\r\nimport TimeAge from \"@/demos/react-basis/12-redux-toolkit/components/TimeAgo/TimeAge\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\nimport PostReactBtn from \"../PostReactBtn/PostReactBtn\";\r\n// import { selectPostById } from \"../postSlice\";\r\nimport { useGetPostQuery } from \"../../api/apiSlice\";\r\nimport \"./PostDetail.less\";\r\n\r\nexport default function PostDetail(\r\n  props: RouteComponentProps<{ postId: string }>\r\n) {\r\n  const { postId } = props.match.params;\r\n\r\n  // const post = useSelector(selectPostById(postId));\r\n\r\n  // you can use the same query hook multiple times,\r\n  // pass it different query parameters,\r\n  // and each result will be cached separately in the Redux store\r\n  const {\r\n    data: post,\r\n    isFetching,\r\n    isSuccess,\r\n    isError,\r\n    // error,\r\n  } = useGetPostQuery(postId);\r\n\r\n  let renderedDetail;\r\n  if (isFetching) {\r\n    renderedDetail = <Spinner />;\r\n  } else if (isSuccess) {\r\n    if (!post) {\r\n      return <h2>Page not found...</h2>;\r\n    }\r\n\r\n    renderedDetail = (\r\n      <article className=\"post-detail-container\">\r\n        <h2>{post.title}</h2>\r\n        <PostAuthor userId={post.user} />\r\n        <TimeAge timestamp={post.date} />\r\n        <hr style={{ margin: \"5px 0\" }} />\r\n        <main>{post.content}</main>\r\n        <PostReactBtn post={post} />\r\n        <Link to={`/reduxToolkit/edit/${post.id}`} className=\"btn edit-btn\">\r\n          Edit\r\n        </Link>\r\n      </article>\r\n    );\r\n  } else if (isError) {\r\n    return <div>{`error, cannot find this id`}</div>;\r\n  }\r\n\r\n  return <React.Fragment>{renderedDetail}</React.Fragment>;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectAllUsers,\r\n  selectUserFetchStatus,\r\n  fetchUsers,\r\n} from \"../userSlice\";\r\n// import { selectPostFetchStatus, fetchPosts } from \"../../posts/postSlice\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\nimport \"./UserList.less\";\r\n\r\nexport default function UserList() {\r\n  const users = useSelector(selectAllUsers);\r\n  const userFetchStatus = useSelector(selectUserFetchStatus);\r\n  // const postFetchStatus = useSelector(selectPostFetchStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  if (userFetchStatus === \"idle\") {\r\n    dispatch(fetchUsers());\r\n  }\r\n\r\n  // if (postFetchStatus === \"idle\") {\r\n  //   dispatch(fetchPosts());\r\n  // }\r\n\r\n  const renderedUsers = users.map((user) => (\r\n    <li key={user.id}>\r\n      <Link to={`/reduxToolkit/users/${user.id}`} className=\"link\">\r\n        {user.name}\r\n      </Link>\r\n    </li>\r\n  ));\r\n\r\n  let finalRender;\r\n\r\n  if (userFetchStatus === \"complete\") {\r\n    finalRender = renderedUsers;\r\n  } else if (userFetchStatus === \"loading\" || userFetchStatus === \"idle\") {\r\n    finalRender = <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-list-container\">\r\n      <ul>{finalRender}</ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { selectPostByUser } from \"../../posts/postSlice\";\r\nimport PostItem from \"../../posts/PostItem/PostItem\";\r\nimport { useGetPostsQuery } from \"../../api/apiSlice\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\n\r\nexport default function UserPage(\r\n  props: RouteComponentProps<{ userId: string }>\r\n) {\r\n  const { userId } = props.match.params;\r\n\r\n  // const posts = useSelector(selectPostByUser(userId));\r\n  const {\r\n    data: posts = [],\r\n    isLoading,\r\n    // isFetching,\r\n    isSuccess,\r\n    isError,\r\n  } = useGetPostsQuery();\r\n\r\n  const filteredPosts = useMemo(() => {\r\n    console.log(\"call\");\r\n    return posts.filter((post) => post.user === userId);\r\n  }, [posts, userId]);\r\n\r\n  let renderedPosts;\r\n  if (isLoading) {\r\n    renderedPosts = <Spinner />;\r\n  } else if (isSuccess) {\r\n    if (filteredPosts.length === 0) {\r\n      return <div>{`This user has noting here`}</div>;\r\n    }\r\n    renderedPosts = filteredPosts.map((post) => (\r\n      <PostItem key={post.id} post={post} />\r\n    ));\r\n  } else if (isError) {\r\n    return <div>{`can not fetch`}</div>;\r\n  }\r\n\r\n  return <div>{renderedPosts}</div>;\r\n}\r\n","import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../store\";\r\nimport { client } from \"../../api/client\";\r\nimport { NotificationData, NotificationExtraField } from \"./notifications\";\r\n\r\nconst notificationAdapter = createEntityAdapter<NotificationData>({\r\n  sortComparer: (a, b) => b.date.localeCompare(a.date),\r\n});\r\n\r\nconst initialState = notificationAdapter.getInitialState({\r\n  status: \"idle\",\r\n  error: null,\r\n} as NotificationExtraField);\r\n\r\nexport const fetchNotifications = createAsyncThunk(\r\n  \"notifications/fetchNotifications\",\r\n  async (_, { getState }) => {\r\n    const allNotifications = selectAllNotifications(getState() as RootState);\r\n    const latestNotification = allNotifications[0];\r\n    const latestTimestamp = latestNotification ? latestNotification.date : \"\";\r\n    const response = await client.get(\r\n      `/fakeApi/notifications?since=${latestTimestamp}`\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst slice = createSlice({\r\n  name: \"notifications\",\r\n  initialState,\r\n  reducers: {\r\n    markAsRead(state) {\r\n      Object.values(state.entities).forEach((notification) => {\r\n        notification!.isRead = true;\r\n      });\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchNotifications.pending, (state, _) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(\r\n        fetchNotifications.fulfilled,\r\n        (state, action: PayloadAction<NotificationData[]>) => {\r\n          state.status = \"complete\";\r\n          // newly fetched mark as no read\r\n          action.payload.forEach((notification) => {\r\n            notification.isRead = false;\r\n          });\r\n\r\n          notificationAdapter.upsertMany(state, action.payload);\r\n        }\r\n      )\r\n      .addCase(fetchNotifications.rejected, (state, _) => {\r\n        state.status = \"failed\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { markAsRead } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const { selectAll: selectAllNotifications } =\r\n  notificationAdapter.getSelectors((state: RootState) => state.notifications);\r\nexport const selectNotificationFetchStatus = (state: RootState) =>\r\n  state.notifications.status;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectAllUsers } from \"../../users/userSlice\";\r\nimport {\r\n  selectAllNotifications,\r\n  selectNotificationFetchStatus,\r\n  fetchNotifications,\r\n  markAsRead,\r\n} from \"../notificationSlice\";\r\nimport { formatDistanceToNow, parseISO } from \"date-fns\";\r\nimport \"./NotificationList.less\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\n\r\nexport default function NotificationList() {\r\n  const notifications = useSelector(selectAllNotifications);\r\n  const notificationFetchStatus = useSelector(selectNotificationFetchStatus);\r\n  const users = useSelector(selectAllUsers);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (notificationFetchStatus === \"idle\") {\r\n      dispatch(fetchNotifications());\r\n    }\r\n\r\n    // mark as been read\r\n    return () => {\r\n      dispatch(markAsRead());\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const renderedNotifications = notifications.map((notification) => {\r\n    const date = parseISO(notification.date);\r\n    const timeAgo = formatDistanceToNow(date);\r\n    const user = users.find((user) => user.id === notification.user) || {\r\n      name: \"Unknown User\",\r\n    };\r\n    return (\r\n      <li\r\n        key={notification.id}\r\n        style={{\r\n          backgroundColor: notification.isRead\r\n            ? \"rgb(230, 224, 224)\"\r\n            : \"#b56ef8\",\r\n        }}\r\n      >\r\n        <div>\r\n          <b>{user.name}</b> {notification.message}\r\n        </div>\r\n        <div title={notification.date}>\r\n          <i>{timeAgo} ago</i>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const emptyReminder = (\r\n    <div style={{ textAlign: \"center\", margin: \"20px 0\", fontWeight: \"bold\" }}>\r\n      It is empty now~\r\n    </div>\r\n  );\r\n\r\n  const fetchNewNotifications = async () => {\r\n    // before fetch more, mark the existed as read\r\n    dispatch(markAsRead());\r\n    dispatch(fetchNotifications());\r\n  };\r\n\r\n  let finalRender;\r\n\r\n  if (notificationFetchStatus === \"complete\") {\r\n    if (notifications.length === 0) {\r\n      finalRender = emptyReminder;\r\n    } else {\r\n      finalRender = renderedNotifications;\r\n    }\r\n  } else if (\r\n    notificationFetchStatus === \"loading\" ||\r\n    notificationFetchStatus === \"idle\"\r\n  ) {\r\n    finalRender = <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification-list-container\">\r\n      <button className=\"btn refresh-btn\" onClick={fetchNewNotifications}>\r\n        Refresh Notifications\r\n      </button>\r\n      {finalRender}\r\n    </div>\r\n  );\r\n}\r\n","import { rest, setupWorker } from \"msw\";\r\nimport { factory, oneOf, manyOf, primaryKey } from \"@mswjs/data\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport faker from \"faker\";\r\nimport seedrandom from \"seedrandom\";\r\nimport { Server as MockSocketServer } from \"mock-socket\";\r\n// import { setRandom } from \"txtgen\";\r\n\r\nimport { parseISO } from \"date-fns\";\r\n\r\nconst NUM_USERS = 3;\r\nconst POSTS_PER_USER = 3;\r\nconst RECENT_NOTIFICATIONS_DAYS = 7;\r\n\r\n// Add an extra delay to all endpoints, so loading spinners show up.\r\nconst ARTIFICIAL_DELAY_MS = 1000;\r\n\r\n/* RNG setup */\r\n\r\n// Set up a seeded random number generator, so that we get\r\n// a consistent set of users / entries each time the page loads.\r\n// This can be reset by deleting this localStorage value,\r\n// or turned off by setting `useSeededRNG` to false.\r\nlet useSeededRNG = true;\r\n\r\nlet rng = seedrandom();\r\n\r\nif (useSeededRNG) {\r\n  let randomSeedString = localStorage.getItem(\"randomTimestampSeed\");\r\n  let seedDate;\r\n\r\n  if (randomSeedString) {\r\n    seedDate = new Date(randomSeedString);\r\n  } else {\r\n    seedDate = new Date();\r\n    randomSeedString = seedDate.toISOString();\r\n    localStorage.setItem(\"randomTimestampSeed\", randomSeedString);\r\n  }\r\n\r\n  rng = seedrandom(randomSeedString);\r\n  // setRandom(rng);\r\n  faker.seed(seedDate.getTime());\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(rng() * (max - min + 1)) + min;\r\n}\r\n\r\nconst randomFromArray = (array) => {\r\n  const index = getRandomInt(0, array.length - 1);\r\n  return array[index];\r\n};\r\n\r\n/* MSW Data Model Setup */\r\n\r\nexport const db = factory({\r\n  user: {\r\n    id: primaryKey(nanoid),\r\n    firstName: String,\r\n    lastName: String,\r\n    name: String,\r\n    username: String,\r\n    posts: manyOf(\"post\"),\r\n  },\r\n  post: {\r\n    id: primaryKey(nanoid),\r\n    title: String,\r\n    date: String,\r\n    content: String,\r\n    reactions: oneOf(\"reaction\"),\r\n    comments: manyOf(\"comment\"),\r\n    user: oneOf(\"user\"),\r\n  },\r\n  comment: {\r\n    id: primaryKey(String),\r\n    date: String,\r\n    text: String,\r\n    post: oneOf(\"post\"),\r\n  },\r\n  reaction: {\r\n    id: primaryKey(nanoid),\r\n    thumbsUp: Number,\r\n    hooray: Number,\r\n    heart: Number,\r\n    rocket: Number,\r\n    eyes: Number,\r\n    post: oneOf(\"post\"),\r\n  },\r\n});\r\n\r\nconst createUserData = () => {\r\n  const firstName = faker.name.firstName();\r\n  const lastName = faker.name.lastName();\r\n\r\n  return {\r\n    firstName,\r\n    lastName,\r\n    name: `${firstName} ${lastName}`,\r\n    username: faker.internet.userName(),\r\n  };\r\n};\r\n\r\nconst createPostData = (user) => {\r\n  return {\r\n    title: faker.lorem.words(),\r\n    date: faker.date.recent(RECENT_NOTIFICATIONS_DAYS).toISOString(),\r\n    user,\r\n    content: faker.lorem.paragraphs(),\r\n    reactions: db.reaction.create(),\r\n  };\r\n};\r\n\r\n// Create an initial set of users and posts\r\nfor (let i = 0; i < NUM_USERS; i++) {\r\n  const author = db.user.create(createUserData());\r\n\r\n  for (let j = 0; j < POSTS_PER_USER; j++) {\r\n    const newPost = createPostData(author);\r\n    db.post.create(newPost);\r\n  }\r\n}\r\n\r\nconst serializePost = (post) => ({\r\n  ...post,\r\n  user: post.user.id,\r\n});\r\n\r\n/* MSW REST API Handlers */\r\n\r\nexport const handlers = [\r\n  rest.get(\"/fakeApi/posts\", function (req, res, ctx) {\r\n    const posts = db.post.getAll().map(serializePost);\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(posts));\r\n  }),\r\n  rest.post(\"/fakeApi/posts\", function (req, res, ctx) {\r\n    const data = req.body;\r\n\r\n    if (data.content === \"error\") {\r\n      return res(\r\n        ctx.delay(ARTIFICIAL_DELAY_MS),\r\n        ctx.status(500),\r\n        ctx.json(\"Server error saving this post!\")\r\n      );\r\n    }\r\n\r\n    data.date = new Date().toISOString();\r\n\r\n    const user = db.user.findFirst({ where: { id: { equals: data.user } } });\r\n    data.user = user;\r\n    data.reactions = db.reaction.create();\r\n\r\n    const post = db.post.create(data);\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(serializePost(post)));\r\n  }),\r\n  rest.get(\"/fakeApi/posts/:postId\", function (req, res, ctx) {\r\n    const post = db.post.findFirst({\r\n      where: { id: { equals: req.params.postId } },\r\n    });\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(serializePost(post)));\r\n  }),\r\n  rest.patch(\"/fakeApi/posts/:postId\", (req, res, ctx) => {\r\n    const { id, ...data } = req.body;\r\n    const updatedPost = db.post.update({\r\n      where: { id: { equals: req.params.postId } },\r\n      data,\r\n    });\r\n    return res(\r\n      ctx.delay(ARTIFICIAL_DELAY_MS),\r\n      ctx.json(serializePost(updatedPost))\r\n    );\r\n  }),\r\n\r\n  rest.get(\"/fakeApi/posts/:postId/comments\", (req, res, ctx) => {\r\n    const post = db.post.findFirst({\r\n      where: { id: { equals: req.params.postId } },\r\n    });\r\n    return res(\r\n      ctx.delay(ARTIFICIAL_DELAY_MS),\r\n      ctx.json({ comments: post.comments })\r\n    );\r\n  }),\r\n\r\n  rest.post(\"/fakeApi/posts/:postId/reactions\", (req, res, ctx) => {\r\n    const postId = req.params.postId;\r\n    const reaction = req.body.reactName;\r\n    \r\n    const post = db.post.findFirst({\r\n      where: { id: { equals: postId } },\r\n    });\r\n\r\n    const updatedPost = db.post.update({\r\n      where: { id: { equals: postId } },\r\n      data: {\r\n        reactions: {\r\n          ...post.reactions,\r\n          [reaction]: (post.reactions[reaction] += 1),\r\n        },\r\n      },\r\n    });\r\n\r\n    return res(\r\n      ctx.delay(ARTIFICIAL_DELAY_MS),\r\n      ctx.json(serializePost(updatedPost))\r\n    );\r\n  }),\r\n  rest.get(\"/fakeApi/notifications\", (req, res, ctx) => {\r\n    const numNotifications = getRandomInt(1, 5);\r\n\r\n    let notifications = generateRandomNotifications(\r\n      undefined,\r\n      numNotifications,\r\n      db\r\n    );\r\n\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(notifications));\r\n  }),\r\n  rest.get(\"/fakeApi/users\", (req, res, ctx) => {\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(db.user.getAll()));\r\n  }),\r\n];\r\n\r\nexport const worker = setupWorker(...handlers);\r\n// worker.printHandlers() // Optional: nice for debugging to see all available route handlers that will be intercepted\r\n\r\n/* Mock Websocket Setup */\r\n\r\nconst socketServer = new MockSocketServer(\"ws://localhost\");\r\n\r\nlet currentSocket;\r\n\r\nconst sendMessage = (socket, obj) => {\r\n  socket.send(JSON.stringify(obj));\r\n};\r\n\r\n// Allow our UI to fake the server pushing out some notifications over the websocket,\r\n// as if other users were interacting with the system.\r\nconst sendRandomNotifications = (socket, since) => {\r\n  const numNotifications = getRandomInt(1, 5);\r\n\r\n  const notifications = generateRandomNotifications(\r\n    since,\r\n    numNotifications,\r\n    db\r\n  );\r\n\r\n  sendMessage(socket, { type: \"notifications\", payload: notifications });\r\n};\r\n\r\nexport const forceGenerateNotifications = (since) => {\r\n  sendRandomNotifications(currentSocket, since);\r\n};\r\n\r\nsocketServer.on(\"connection\", (socket) => {\r\n  currentSocket = socket;\r\n\r\n  socket.on(\"message\", (data) => {\r\n    const message = JSON.parse(data);\r\n\r\n    switch (message.type) {\r\n      case \"notifications\": {\r\n        const since = message.payload;\r\n        sendRandomNotifications(socket, since);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n});\r\n\r\n/* Random Notifications Generation */\r\n\r\nconst notificationTemplates = [\r\n  \"poked you\",\r\n  \"says hi!\",\r\n  `is glad we're friends`,\r\n  \"sent you a gift\",\r\n];\r\n\r\nfunction generateRandomNotifications(since, numNotifications, db) {\r\n  const now = new Date();\r\n  let pastDate;\r\n\r\n  if (since) {\r\n    pastDate = parseISO(since);\r\n  } else {\r\n    pastDate = new Date(now.valueOf());\r\n    pastDate.setMinutes(pastDate.getMinutes() - 15);\r\n  }\r\n\r\n  // Create N random notifications. We won't bother saving these\r\n  // in the DB - just generate a new batch and return them.\r\n  const notifications = [...Array(numNotifications)].map(() => {\r\n    const user = randomFromArray(db.user.getAll());\r\n    const template = randomFromArray(notificationTemplates);\r\n    return {\r\n      id: nanoid(),\r\n      date: faker.date.between(pastDate, now).toISOString(),\r\n      message: template,\r\n      user: user.id,\r\n    };\r\n  });\r\n\r\n  return notifications;\r\n}\r\n","import {\r\n  createSlice,\r\n  nanoid,\r\n  createAsyncThunk,\r\n  PayloadAction,\r\n  createSelector,\r\n  createEntityAdapter,\r\n  EntityId,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  PostData,\r\n  PostExtraField,\r\n  PostAddedPayload,\r\n  PostUpdatedPayload,\r\n  ReactionAddedPayload,\r\n  PostAddedField,\r\n} from \"./post\";\r\nimport { RootState } from \"../../store\";\r\nimport { client } from \"../../api/client\";\r\n\r\n// instead of using array, now using Map kind of method to store the data\r\n// so that we can get the item by id without iterating the entire array\r\nconst postAdapter = createEntityAdapter<PostData>({\r\n  // Sort posts in reverse chronological order by datetime string\r\n  sortComparer: (a, b) => b.date.localeCompare(a.date),\r\n});\r\n\r\n// {status: 'idle', error: null} is the extra field plus entities field\r\n// The type of the state is inferred here\r\nconst initialState = postAdapter.getInitialState({\r\n  status: \"idle\",\r\n  error: null,\r\n} as PostExtraField);\r\n\r\nexport const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\r\n  const resp = await client.get(\"/fakeApi/posts\");\r\n\r\n  return resp.data;\r\n});\r\n\r\nexport const addNewPost = createAsyncThunk(\r\n  \"posts/addNewPost\",\r\n  async ({ title, content, user }: PostAddedField) => {\r\n    const newPost = {\r\n      id: nanoid(),\r\n      title,\r\n      content,\r\n      user,\r\n      date: new Date().toISOString(),\r\n      reactions: {\r\n        thumbsUp: 0,\r\n        hooray: 0,\r\n        heart: 0,\r\n        rocket: 0,\r\n        eyes: 0,\r\n      },\r\n    };\r\n\r\n    const resp = await client.post(\"/fakeApi/posts\", newPost);\r\n\r\n    // The response includes the complete post object, including unique ID\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst postSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState,\r\n  reducers: {\r\n    // sync added, addNewPost is aync for AJAX\r\n    postAdded: {\r\n      reducer(state, action: PayloadAction<PostAddedPayload>) {\r\n        state.entities[action.payload.id] = action.payload;\r\n      },\r\n\r\n      // this callback help us create the payload object\r\n      // so that we dont need do this every time in components\r\n      prepare(title: string, content: string, userId: string) {\r\n        return {\r\n          payload: {\r\n            id: nanoid(),\r\n            title,\r\n            content,\r\n            user: userId,\r\n            date: new Date().toISOString(),\r\n            reactions: {\r\n              thumbsUp: 0,\r\n              hooray: 0,\r\n              heart: 0,\r\n              rocket: 0,\r\n              eyes: 0,\r\n            },\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    postUpdated: {\r\n      reducer(state, action: PayloadAction<PostUpdatedPayload>) {\r\n        const { id, title, content } = action.payload;\r\n\r\n        const prevPost = state.entities[id];\r\n        if (prevPost) {\r\n          prevPost.title = title;\r\n          prevPost.content = content;\r\n        }\r\n      },\r\n\r\n      prepare(id: string, title: string, content: string) {\r\n        return {\r\n          payload: {\r\n            id,\r\n            title,\r\n            content,\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    reactionAdded(state, action: PayloadAction<ReactionAddedPayload>) {\r\n      const { id, reactName } = action.payload;\r\n\r\n      const prevPost = state.entities[id];\r\n      if (prevPost) {\r\n        prevPost.reactions[reactName]++;\r\n      }\r\n    },\r\n  },\r\n\r\n  // for async reducers\r\n  extraReducers(builder) {\r\n    // for fetch posts\r\n    builder\r\n      .addCase(fetchPosts.pending, (state, _) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, action) => {\r\n        state.status = \"complete\";\r\n        // Add any fetched posts to the array\r\n        // if there's any items in action.payload that already existing in our state,\r\n        // the upsertMany function will merge them together based on matching IDs\r\n        postAdapter.upsertMany(state, action.payload);\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      });\r\n\r\n    // for save post\r\n    // Use the `addOne` reducer for the fulfilled case\r\n    builder.addCase(addNewPost.fulfilled, postAdapter.addOne);\r\n  },\r\n});\r\n\r\nexport const { postAdded, postUpdated, reactionAdded } = postSlice.actions;\r\n\r\n// Export the customized selectors for this adapter using `getSelectors`\r\nconst {\r\n  selectAll,\r\n  selectById,\r\n  selectIds,\r\n  // Pass in a selector that returns the posts slice of state\r\n} = postAdapter.getSelectors((state: RootState) => state.posts);\r\n\r\nexport const selectAllPosts = selectAll;\r\nexport const selectPostById = (postId: EntityId) => (state: RootState) =>\r\n  selectById(state, postId);\r\nexport const selectPostIds = selectIds;\r\nexport const selectPostFetchStatus = (state: RootState) => state.posts.status;\r\n\r\n// here using the posts.filter which will return a new reference\r\n// and it leads to rerender even the posts doesnt change when other states changed in other places\r\n// createSelector can return a memorized selector to avoid this unneccessary rerender\r\nexport const selectPostByUser = (userId: string) =>\r\n  createSelector([selectAllPosts], (posts) =>\r\n    posts.filter((post) => post.user === userId)\r\n  );\r\n\r\nexport default postSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport postReducer from \"./features/posts/postSlice\";\r\nimport userReducer from \"./features/users/userSlice\";\r\nimport notificationReducer from \"./features/notifications/notificationSlice\";\r\nimport { apiSlice } from \"./features/api/apiSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    posts: postReducer,\r\n    users: userReducer,\r\n    notifications: notificationReducer,\r\n    [apiSlice.reducerPath]: apiSlice.reducer,\r\n  },\r\n  // This middleware must be added as well - it manages cache lifetimes and expiration\r\n  // We need to keep all of the existing standard middleware like redux-thunk in the store setup,\r\n  // which leads to the use of concat\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(apiSlice.middleware),\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import { useEffect } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n  RouteComponentProps,\r\n} from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Header from \"./components/Header/Header\";\r\nimport PostList from \"./features/posts/PostList/PostList\";\r\nimport AddPostForm from \"./features/posts/AddPostForm/AddPostForm\";\r\nimport EditPostForm from \"./features/posts/EditPostForm/EditPostForm\";\r\nimport PostDetail from \"./features/posts/PostDetail/PostDetail\";\r\nimport UserList from \"./features/users/UserList/UserList\";\r\nimport UserPage from \"./features/users/UserPage/UserPage\";\r\nimport NotificationList from \"./features/notifications/NotificationList/NotificationList\";\r\nimport store from \"./store\";\r\nimport { worker } from \"./api/server\";\r\nimport \"./reduxToolkit.less\";\r\n\r\nconst demoPath = \"/react-basis/reduxToolkit\";\r\n\r\nasync function start() {\r\n  // Start our mock API server\r\n  await worker.start({ onUnhandledRequest: \"bypass\" });\r\n}\r\n\r\nlet workerStarted = false;\r\n\r\nfunction ReduxToolkit(props: RouteComponentProps) {\r\n  // only call when entering this component\r\n  // and only call once\r\n  if (!workerStarted) {\r\n    start();\r\n    workerStarted = true;\r\n  }\r\n\r\n  // only call once\r\n  useEffect(() => {\r\n    const {\r\n      history,\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    // only the path is /reduxToolkit\r\n    if (pathname === demoPath) {\r\n      history.push(`${demoPath}/posts`);\r\n    }\r\n\r\n    // when unmount, stop the worker\r\n    // so that the conflit of HMR doesnt affect other demos\r\n    return () => {\r\n      worker.stop();\r\n      workerStarted = false;\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"post-container\">\r\n      <Provider store={store}>\r\n        <Header demoPath={demoPath} />\r\n        <main className=\"app-sections scroll-bar\">\r\n          <Switch>\r\n            <Route\r\n              exact // to match the /posts/:postId\r\n              path={`${demoPath}/posts`}\r\n              component={PostList}\r\n              key=\"/posts\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/posts/:postId`}\r\n              component={PostDetail}\r\n              key=\"/postDetail\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/edit/:postId`}\r\n              component={EditPostForm}\r\n              key=\"/editPostForm\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/addPost`}\r\n              component={AddPostForm}\r\n              key=\"/addPost\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/users`}\r\n              component={UserList}\r\n              key=\"/users\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/users/:userId`}\r\n              component={UserPage}\r\n              key=\"/users\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/notifications`}\r\n              component={NotificationList}\r\n              key=\"/notifications\"\r\n            />\r\n            {/* when the above does not match */}\r\n            <Redirect to={`${demoPath}/posts`} />\r\n          </Switch>\r\n        </main>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ReduxToolkit);\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\nimport {\r\n  SetActivePayload,\r\n  SetDropBlock,\r\n  DefaultPannel,\r\n  GameStates,\r\n} from \"./type\";\r\n\r\nconst defaultPannelWidth = 294;\r\nconst defaultPannelHeight = 404;\r\nconst defaultPannel: { isActive: boolean; isCancelling: boolean }[][] =\r\n  new Array(~~(defaultPannelHeight / 22)).fill(\r\n    new Array(~~(defaultPannelWidth / 22)).fill({\r\n      isActive: false,\r\n      isCancelling: false,\r\n    })\r\n  );\r\n\r\nconst pannelSlice = createSlice({\r\n  name: \"pannel\",\r\n  initialState: {\r\n    pannelWidth: defaultPannelWidth,\r\n    pannelHeight: defaultPannelHeight,\r\n    maxRow: ~~(defaultPannelHeight / 22) - 1,\r\n    maxCol: ~~(defaultPannelWidth / 22) - 1,\r\n    pannel: defaultPannel,\r\n    curDropState: \"B\",\r\n    curStartPos: { row: 0, col: 0 },\r\n    curDropPos: [],\r\n    gameState: \"DROPPING\",\r\n    topCancelledRow: 0,\r\n  } as DefaultPannel,\r\n  reducers: {\r\n    setActive(state, action: PayloadAction<SetActivePayload>) {\r\n      const activePos = action.payload;\r\n\r\n      activePos.forEach(({ row, col }) => {\r\n        state.pannel[row][col].isActive = true;\r\n      });\r\n    },\r\n\r\n    setDisactive(state, action: PayloadAction<SetActivePayload>) {\r\n      const activePos = action.payload;\r\n\r\n      activePos.forEach(({ row, col }) => {\r\n        state.pannel[row][col].isActive = false;\r\n      });\r\n    },\r\n\r\n    setGameState(state, action: PayloadAction<GameStates>) {\r\n      const gameState = action.payload;\r\n      state.gameState = gameState;\r\n    },\r\n\r\n    cancelBlocks(state, action: PayloadAction<number[]>) {\r\n      const cancelRows = action.payload;\r\n\r\n      cancelRows.forEach((row) =>\r\n        state.pannel[row].forEach((block) => {\r\n          block.isActive = false;\r\n          block.isCancelling = true;\r\n        })\r\n      );\r\n\r\n      state.gameState = \"CANCELLING\";\r\n      state.topCancelledRow = cancelRows[cancelRows.length - 1];\r\n    },\r\n\r\n    downBlocksAfterCancellation(state) {\r\n      // down after cancellation\r\n      for (let row = state.topCancelledRow - 1; row >= 0; row--) {\r\n        state.pannel[row].forEach((block, col) => {\r\n          if (!block.isActive) return;\r\n\r\n          // find the lowest postition\r\n          for (let r = row; r <= state.maxRow; r++) {\r\n            if (r === state.maxRow || state.pannel[r + 1][col].isActive) {\r\n              state.pannel[row][col].isActive = false;\r\n              state.pannel[r][col].isActive = true;\r\n              return;\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      // set isCancelling status as false\r\n      for (let row = state.topCancelledRow; row <= state.maxRow; row++) {\r\n        state.pannel[row].forEach((block, col) => {\r\n          if (block.isCancelling) state.pannel[row][col].isCancelling = false;\r\n        });\r\n      }\r\n\r\n      state.topCancelledRow = 0;\r\n      state.gameState = \"CANCELLED\";\r\n    },\r\n\r\n    setDropBlocks(state, action: PayloadAction<SetDropBlock>) {\r\n      const {\r\n        startPos,\r\n        activePos,\r\n        dropState,\r\n        clearPrev = true,\r\n      } = action.payload;\r\n\r\n      // make sure the boundary\r\n      if (\r\n        activePos.some(\r\n          ({ row, col }) =>\r\n            row < 0 ||\r\n            row > state.maxRow ||\r\n            col < 0 ||\r\n            col > state.maxCol ||\r\n            (state.pannel[row][col].isActive &&\r\n              !state.curDropPos.some(\r\n                // and pos is not included in curDropPos\r\n                ({ row: row_, col: col_ }) => row_ === row && col_ === col\r\n              ))\r\n        )\r\n      )\r\n        return;\r\n\r\n      // disactivate the previous blocks if it is true\r\n      clearPrev &&\r\n        state.curDropPos.forEach(({ row, col }) => {\r\n          state.pannel[row][col].isActive = false;\r\n        });\r\n\r\n      // activate the new blocks\r\n      activePos.forEach(({ row, col }) => {\r\n        state.pannel[row][col].isActive = true;\r\n      });\r\n\r\n      dropState && (state.curDropState = dropState);\r\n\r\n      state.curDropPos = activePos;\r\n      state.curStartPos = startPos;\r\n      state.gameState = \"DROPPING\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default pannelSlice.reducer;\r\nexport const {\r\n  setActive,\r\n  setDisactive,\r\n  setDropBlocks,\r\n  setGameState,\r\n  cancelBlocks,\r\n  downBlocksAfterCancellation,\r\n} = pannelSlice.actions;\r\n\r\nexport const selectGameState = (state: RootState) => state.pannel.gameState;\r\nexport const selectPannel = (state: RootState) => state.pannel;\r\nexport const selectPannelPos = (state: RootState) => state.pannel.pannel;\r\nexport const selectCurBlock = (state: RootState) => ({\r\n  curDropPos: state.pannel.curDropPos,\r\n  curStartPos: state.pannel.curStartPos,\r\n  curDropState: state.pannel.curDropState,\r\n});\r\nexport const selectBoundary = (state: RootState) => ({\r\n  maxRow: state.pannel.maxRow,\r\n  maxCol: state.pannel.maxCol,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport pannelReducer from \"./pannelSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    pannel: pannelReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPannel } from \"../../pannelSlice\";\r\nimport \"./GamePannel.less\";\r\n\r\nexport default function GamePannel() {\r\n  const { pannel, pannelHeight, pannelWidth } = useSelector(selectPannel);\r\n\r\n  return (\r\n    <div\r\n      className=\"game-container\"\r\n      style={{ width: `${pannelWidth}px`, height: `${pannelHeight}px` }}\r\n    >\r\n      {pannel.map((row, idx) => (\r\n        <p className=\"row\" key={idx}>\r\n          {row.map(({ isActive, isCancelling }, idx) => (\r\n            <b\r\n              className={`block ${isActive ? \"active-block\" : \"\"} ${\r\n                isCancelling && isActive === false ? \"cancelled-block\" : \"\"\r\n              }`}\r\n              key={idx}\r\n            ></b>\r\n          ))}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { BlockStates, BlockShapes, RotateStates, StartPos } from \"./type\";\r\n\r\nexport const getActivePos = (\r\n  { row, col }: StartPos,\r\n  blockState: BlockStates,\r\n  isFilter = true\r\n) => {\r\n  // start pos is the left top pos of a square\r\n  let pos: StartPos[] = [];\r\n\r\n  if (blockState === \"LU\") {\r\n    pos = [\r\n      { row: row + 1, col: col + 2 },\r\n      { row: row + 2, col },\r\n      { row: row + 2, col: col + 1 },\r\n      { row: row + 2, col: col + 2 },\r\n    ];\r\n  } else if (blockState === \"LD\") {\r\n    pos = [\r\n      { row: row + 1, col: col },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 1, col: col + 2 },\r\n      { row: row + 2, col },\r\n    ];\r\n  } else if (blockState === \"LL\") {\r\n    pos = [\r\n      { row: row, col: col },\r\n      { row: row, col: col + 1 },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"LR\") {\r\n    pos = [\r\n      { row: row, col: col + 1 },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 2, col: col + 1 },\r\n      { row: row + 2, col: col + 2 },\r\n    ];\r\n  } else if (blockState === \"JU\") {\r\n    pos = [\r\n      { row: row + 1, col },\r\n      { row: row + 2, col },\r\n      { row: row + 2, col: col + 1 },\r\n      { row: row + 2, col: col + 2 },\r\n    ];\r\n  } else if (blockState === \"JD\") {\r\n    pos = [\r\n      { row: row + 1, col },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 1, col: col + 2 },\r\n      { row: row + 2, col: col + 2 },\r\n    ];\r\n  } else if (blockState === \"JL\") {\r\n    pos = [\r\n      { row: row + 2, col },\r\n      { row, col: col + 1 },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"JR\") {\r\n    pos = [\r\n      { row, col: col + 1 },\r\n      { row, col: col + 2 },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"TU\") {\r\n    pos = [\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 2, col },\r\n      { row: row + 2, col: col + 1 },\r\n      { row: row + 2, col: col + 2 },\r\n    ];\r\n  } else if (blockState === \"TD\") {\r\n    pos = [\r\n      { row: row + 1, col },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 1, col: col + 2 },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"TL\") {\r\n    pos = [\r\n      { row, col: col + 1 },\r\n      { row: row + 1, col },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"TR\") {\r\n    pos = [\r\n      { row, col: col + 1 },\r\n      { row: row + 1, col: col + 2 },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"SU\") {\r\n    pos = [\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 1, col: col + 2 },\r\n      { row: row + 2, col },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"SL\") {\r\n    pos = [\r\n      { row, col },\r\n      { row: row + 1, col },\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"ZU\") {\r\n    pos = [\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 1, col },\r\n      { row: row + 2, col: col + 2 },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"ZR\") {\r\n    pos = [\r\n      { row: row + 1, col: col + 1 },\r\n      { row, col: col + 2 },\r\n      { row: row + 1, col: col + 2 },\r\n      { row: row + 2, col: col + 1 },\r\n    ];\r\n  } else if (blockState === \"IU\") {\r\n    pos = [\r\n      { row: row + 2, col },\r\n      { row: row + 2, col: col + 1 },\r\n      { row: row + 2, col: col + 2 },\r\n      { row: row + 2, col: col + 3 },\r\n    ];\r\n  } else if (blockState === \"IL\") {\r\n    pos = [\r\n      { row, col: col + 2 },\r\n      { row: row + 1, col: col + 2 },\r\n      { row: row + 2, col: col + 2 },\r\n      { row: row + 3, col: col + 2 },\r\n    ];\r\n  } else if (blockState === \"OU\") {\r\n    pos = [\r\n      { row: row + 1, col: col + 1 },\r\n      { row: row + 1, col: col + 2 },\r\n      { row: row + 2, col: col + 1 },\r\n      { row: row + 2, col: col + 2 },\r\n    ];\r\n  } else if (blockState === \"B\") pos = [];\r\n\r\n  // only show the valid part\r\n  return isFilter ? pos.filter(({ row, col }) => row >= 0 && col >= 0) : pos;\r\n};\r\n\r\nexport const rotateFsm = (blockState: BlockStates): BlockStates => {\r\n  const blockShape = blockState[0] as BlockShapes;\r\n  const rotateState = blockState[1] as RotateStates;\r\n\r\n  if (blockShape === \"L\") {\r\n    if (rotateState === \"U\") return \"LL\";\r\n    if (rotateState === \"D\") return \"LR\";\r\n    if (rotateState === \"L\") return \"LD\";\r\n    if (rotateState === \"R\") return \"LU\";\r\n  }\r\n\r\n  if (blockShape === \"J\") {\r\n    if (rotateState === \"U\") return \"JL\";\r\n    if (rotateState === \"D\") return \"JR\";\r\n    if (rotateState === \"L\") return \"JD\";\r\n    if (rotateState === \"R\") return \"JU\";\r\n  }\r\n\r\n  if (blockShape === \"T\") {\r\n    if (rotateState === \"U\") return \"TL\";\r\n    if (rotateState === \"D\") return \"TR\";\r\n    if (rotateState === \"L\") return \"TD\";\r\n    if (rotateState === \"R\") return \"TU\";\r\n  }\r\n\r\n  if (blockShape === \"S\") {\r\n    if (rotateState === \"U\") return \"SL\";\r\n    if (rotateState === \"L\") return \"SU\";\r\n  }\r\n\r\n  if (blockShape === \"Z\") {\r\n    if (rotateState === \"U\") return \"ZR\";\r\n    if (rotateState === \"R\") return \"ZU\";\r\n  }\r\n\r\n  if (blockShape === \"I\") {\r\n    if (rotateState === \"U\") return \"IL\";\r\n    if (rotateState === \"L\") return \"IU\";\r\n  }\r\n\r\n  if (blockShape === \"O\") {\r\n    return \"OU\";\r\n  }\r\n\r\n  return \"B\";\r\n};\r\n","import { useCallback, useMemo, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectCurBlock,\r\n  setDropBlocks,\r\n  selectBoundary,\r\n  selectPannel,\r\n  selectGameState,\r\n  cancelBlocks,\r\n  downBlocksAfterCancellation,\r\n  setGameState,\r\n} from \"./pannelSlice\";\r\nimport { getActivePos, rotateFsm } from \"./utils\";\r\nimport { BlockStates, GameStates, Operations, StartPos } from \"./type\";\r\n\r\nexport const useController = () => {\r\n  const { curDropPos, curDropState, curStartPos } = useSelector(selectCurBlock);\r\n  const gameState = useSelector(selectGameState);\r\n  const { maxCol } = useSelector(selectBoundary);\r\n\r\n  const initBlock = useGenerateBlock();\r\n  const checkBoundary = useCheckBoundary();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\r\n  const moveFnRef = useRef<\r\n    ((operation: Operations) => \"STOPPED\" | \"DROPPING\") | null\r\n  >(null);\r\n  const initBlockFnRef = useRef<(() => void) | null>(null);\r\n  const gameStateRef = useRef<GameStates>(\"DROPPING\");\r\n\r\n  return useMemo(() => {\r\n    const controller = {\r\n      start() {\r\n        dispatch(setGameState(\"DROPPING\"));\r\n        if (timerRef.current != null) return;\r\n\r\n        // when no block dropping, generate one\r\n        curDropPos.length === 0 && initBlock();\r\n\r\n        timerRef.current = setInterval(() => {\r\n          if (!moveFnRef.current) return;\r\n\r\n          if (\r\n            gameStateRef.current === \"CANCELLING\" ||\r\n            gameStateRef.current === \"CANCELLED\"\r\n          ) {\r\n            initBlockFnRef.current && initBlockFnRef.current();\r\n            return;\r\n          }\r\n\r\n          const status = moveFnRef.current(\"DOWN\");\r\n\r\n          if (status === \"STOPPED\" && gameStateRef.current === \"DROPPING\") {\r\n            initBlockFnRef.current && initBlockFnRef.current();\r\n          }\r\n        }, 1000);\r\n      },\r\n      pause() {\r\n        if (!timerRef.current) return;\r\n        clearInterval(timerRef.current);\r\n        timerRef.current = null;\r\n        dispatch(setGameState(\"PAUSING\"));\r\n      },\r\n      move(operation: Operations) {\r\n        if (gameState !== \"DROPPING\") return \"STOPPED\";\r\n\r\n        const validStep = checkBoundary(operation);\r\n        if (validStep === false || validStep === 0) return \"STOPPED\";\r\n\r\n        let nextStartPos: StartPos;\r\n        if (curDropPos.length === 0) {\r\n          // not shown yet\r\n          nextStartPos = { row: -2, col: Math.floor(maxCol / 2) - 1 };\r\n        } else {\r\n          switch (operation) {\r\n            case \"DOWN\":\r\n              nextStartPos = {\r\n                row: curStartPos.row + 1,\r\n                col: curStartPos.col,\r\n              };\r\n              break;\r\n            case \"FAST_DOWN\":\r\n            case \"DROP\":\r\n              nextStartPos = {\r\n                row: curStartPos.row + (validStep as number),\r\n                col: curStartPos.col,\r\n              };\r\n              break;\r\n            case \"LEFT\":\r\n              nextStartPos = {\r\n                row: curStartPos.row,\r\n                col: curStartPos.col - 1,\r\n              };\r\n              break;\r\n            case \"RIGHT\":\r\n              nextStartPos = {\r\n                row: curStartPos.row,\r\n                col: curStartPos.col + 1,\r\n              };\r\n              break;\r\n            case \"ROTATE\":\r\n              nextStartPos = {\r\n                row: curStartPos.row,\r\n                col: curStartPos.col,\r\n              };\r\n              break;\r\n            default:\r\n              nextStartPos = { row: -2, col: Math.floor(maxCol / 2) - 1 };\r\n              break;\r\n          }\r\n        }\r\n\r\n        dispatch(\r\n          setDropBlocks({\r\n            startPos: nextStartPos,\r\n            activePos: getActivePos(\r\n              nextStartPos,\r\n              operation === \"ROTATE\" ? rotateFsm(curDropState) : curDropState\r\n            ),\r\n            dropState:\r\n              operation === \"ROTATE\" ? rotateFsm(curDropState) : curDropState,\r\n          })\r\n        );\r\n\r\n        return \"DROPPING\";\r\n      },\r\n    };\r\n\r\n    // every time changes, update the ref so that the timer can use the latest function\r\n    moveFnRef.current = controller.move;\r\n    initBlockFnRef.current = initBlock;\r\n    gameStateRef.current = gameState;\r\n\r\n    return controller;\r\n  }, [\r\n    initBlock,\r\n    checkBoundary,\r\n    dispatch,\r\n    curDropPos,\r\n    curDropState,\r\n    curStartPos,\r\n    maxCol,\r\n    gameState,\r\n  ]);\r\n};\r\n\r\nexport const useGenerateBlock = () => {\r\n  const { pannel, gameState, maxCol } = useSelector(selectPannel);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return useCallback(() => {\r\n    // check if there is any row can be cancelled\r\n    const cancellRows = pannel.reduce((cancelledRows, row, idx) => {\r\n      row.every((block) => block.isActive === true) && cancelledRows.push(idx);\r\n      return cancelledRows;\r\n    }, [] as number[]);\r\n\r\n    if (\r\n      (gameState === \"DROPPING\" || gameState === \"CANCELLED\") &&\r\n      cancellRows.length\r\n    ) {\r\n      dispatch(cancelBlocks(cancellRows));\r\n      return;\r\n    }\r\n\r\n    // down after cancellation\r\n    if (gameState === \"CANCELLING\") {\r\n      dispatch(downBlocksAfterCancellation());\r\n      return;\r\n    }\r\n\r\n    const dropStates: BlockStates[] = [\r\n      \"LU\",\r\n      \"JU\",\r\n      \"TU\",\r\n      \"SU\",\r\n      \"ZU\",\r\n      \"IU\",\r\n      \"OU\",\r\n    ];\r\n    // randomly generate\r\n    const dropState =\r\n      dropStates[Math.round(Math.random() * (dropStates.length - 1))];\r\n    const nextStartPos = { row: -2, col: Math.floor(maxCol / 2) - 1 };\r\n\r\n    dispatch(\r\n      setDropBlocks({\r\n        startPos: nextStartPos,\r\n        activePos: getActivePos(nextStartPos, dropState),\r\n        dropState,\r\n        clearPrev: false, // preserve previous blocks\r\n      })\r\n    );\r\n  }, [maxCol, gameState, pannel, dispatch]);\r\n};\r\n\r\nexport const useCheckBoundary = () => {\r\n  const { pannel, maxRow, maxCol, curDropPos, curStartPos, curDropState } =\r\n    useSelector(selectPannel);\r\n\r\n  return useCallback(\r\n    (operation: Operations) => {\r\n      if (\r\n        operation === \"DOWN\" &&\r\n        curDropPos.some(\r\n          ({ row, col }) =>\r\n            row + 1 > maxRow || // exceed the maximum value\r\n            (pannel[row + 1][col].isActive && // next pos is active\r\n              !curDropPos.some(\r\n                // and next pos is not included in curDropPos\r\n                ({ row: row_, col: col_ }) => row_ === row + 1 && col_ === col\r\n              ))\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        operation === \"LEFT\" &&\r\n        curDropPos.some(\r\n          ({ row, col }) =>\r\n            col - 1 < 0 || // less than minimum value\r\n            (pannel[row][col - 1].isActive && // next pos is active\r\n              !curDropPos.some(\r\n                // and next pos is not included in curDropPos\r\n                ({ row: row_, col: col_ }) => row_ === row && col_ === col - 1\r\n              ))\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        operation === \"RIGHT\" &&\r\n        curDropPos.some(\r\n          ({ row, col }) =>\r\n            col + 1 > maxCol || // bigger than maximum value\r\n            (pannel[row][col + 1].isActive && // next pos is active\r\n              !curDropPos.some(\r\n                // and next pos is not included in curDropPos\r\n                ({ row: row_, col: col_ }) => row_ === row && col_ === col + 1\r\n              ))\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      if (operation === \"ROTATE\") {\r\n        const rotatedPos = getActivePos(\r\n          curStartPos,\r\n          rotateFsm(curDropState),\r\n          false\r\n        );\r\n\r\n        if (\r\n          rotatedPos.some(\r\n            ({ row, col }) =>\r\n              !(row >= 0 && row <= maxRow && col >= 0 && col <= maxCol) || // outside boundary\r\n              (pannel[row][col].isActive && // rotated pos is active\r\n                !curDropPos.some(\r\n                  // and rotated pos is not included in curDropPos\r\n                  ({ row: row_, col: col_ }) => row_ === row && col_ === col\r\n                ))\r\n          )\r\n        )\r\n          return false;\r\n      }\r\n\r\n      if (operation === \"FAST_DOWN\" || operation === \"DROP\") {\r\n        const dropStep = 3;\r\n        let validStep = Infinity;\r\n\r\n        for (const { row, col } of curDropPos) {\r\n          let validStepPerBlock = 0;\r\n\r\n          for (\r\n            let i = 1;\r\n            i <= (operation === \"FAST_DOWN\" ? dropStep : maxRow - row);\r\n            i++\r\n          ) {\r\n            if (\r\n              row + i > maxRow ||\r\n              (pannel[row + i][col].isActive &&\r\n                !curDropPos.some(\r\n                  // and pos is not included in curDropPos\r\n                  ({ row: row_, col: col_ }) => row_ === row + i && col_ === col\r\n                ))\r\n            ) {\r\n              validStep = Math.min(validStep, validStepPerBlock);\r\n              break;\r\n            }\r\n\r\n            validStepPerBlock++;\r\n          }\r\n\r\n          validStep = Math.min(validStep, validStepPerBlock);\r\n        }\r\n\r\n        return validStep;\r\n      }\r\n\r\n      return true;\r\n    },\r\n    [pannel, maxRow, maxCol, curDropPos, curStartPos, curDropState]\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useController } from \"../../control\";\r\nimport \"./ControlPannel.less\";\r\n\r\nexport default function ControlPannel() {\r\n  const controller = useController();\r\n\r\n  return (\r\n    <div className=\"control-pannel\">\r\n      <div className=\"overall-control\">\r\n        <button className=\"restart-btn\" onClick={controller.pause}>\r\n          restart\r\n        </button>\r\n        <button className=\"start-btn\" onClick={controller.start}>\r\n          start\r\n        </button>\r\n        <button className=\"pause-btn\" onClick={controller.pause}>\r\n          pause\r\n        </button>\r\n      </div>\r\n      <div className=\"step-control\">\r\n        <button\r\n          className=\"left-btn\"\r\n          onClick={() => controller.move(\"LEFT\")}\r\n        ></button>\r\n        <button\r\n          className=\"right-btn\"\r\n          onClick={() => controller.move(\"RIGHT\")}\r\n        ></button>\r\n        <button\r\n          className=\"down-btn\"\r\n          onClick={() => controller.move(\"FAST_DOWN\")}\r\n        ></button>\r\n        <button\r\n          className=\"rotate-btn\"\r\n          onClick={() => controller.move(\"ROTATE\")}\r\n        ></button>\r\n      </div>\r\n      <div className=\"drop-control\">\r\n        <button className=\"drop-btn\" onClick={() => controller.move(\"DROP\")}>\r\n          drop\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\n// import Home from \"./Home\";\r\n// import About from \"./About\";\r\n\r\n// the clip will split the lazy components as indenpendent chunks\r\nconst lazyHome = React.lazy(() => import(\"./Home\"));\r\nconst lazyAbout = React.lazy(() => import(\"./About\"));\r\n\r\nexport default class LazyLoad extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <NavLink to=\"/others/lazyLoad/home\">Home</NavLink>&nbsp;\r\n          <NavLink to=\"/others/lazyLoad/about\">About</NavLink>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Route path=\"/others/lazyLoad/home\" component={lazyHome} />\r\n            <Route path=\"/others/lazyLoad/about\" component={lazyAbout} />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\ninterface InfoContextInterface {\r\n  name: string;\r\n  age: number;\r\n}\r\n\r\n// create a context\r\nconst MyContext = React.createContext<InfoContextInterface | null>(null);\r\nconst { Provider, Consumer } = MyContext;\r\n\r\nexport default class Grand extends Component {\r\n  state = {\r\n    name: \"leo\",\r\n    age: 22,\r\n  };\r\n\r\n  render() {\r\n    const { name, age } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>This is Grand component</div>\r\n        <div>\r\n          name: {name} --age: {age}\r\n        </div>\r\n        <hr />\r\n        {/* all the childs in Provider can access the value data */}\r\n        {/* put the value in the state will avoid render the children when the father is rendered */}\r\n        <Provider value={this.state}>\r\n          <Parent />\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Parent extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>This is Parent component</div>\r\n        <hr />\r\n        <Child />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Child extends Component {\r\n  // need to declare if want to use\r\n  static contextType = MyContext;\r\n\r\n  render() {\r\n    const { name, age } = this.context;\r\n    return (\r\n      <div>\r\n        <div>This is Child component</div>\r\n        <div>\r\n          name from Grand: {name} --age from Grand: {age}\r\n        </div>\r\n        <hr />\r\n        <NextChild />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// in function component, need to use second type context which both class and functin can use\r\n// second type no need to declare\r\nfunction NextChild() {\r\n  return (\r\n    <div>\r\n      <div>This is NextChild component</div>\r\n      <div>\r\n        <Consumer>\r\n          {\r\n            // value is the this.context\r\n            (value) =>\r\n              `name from Grand: ${value!.name} --age from Grand: ${value!.age}`\r\n          }\r\n        </Consumer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./index.less\";\r\n\r\nexport default class Parent extends PureComponent {\r\n  state = {\r\n    name: \"leo\",\r\n  };\r\n\r\n  // or just use PureComponent\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //     // no change no render\r\n  //     return !nextState.name === this.state.name;\r\n  // }\r\n  changeName() {\r\n    this.setState({ name: \"pit\" });\r\n    /**\r\n     * when using PureComponent\r\n     * the child will not render if no use the props from parent or no changed props\r\n     * it will not watch shallow copy\r\n     */\r\n    // cannot use the example below!!\r\n    // const obj = this.state;\r\n    // obj.name = 'pit';\r\n    // this.setState(obj);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"parent--render\");\r\n    return (\r\n      <div className=\"parent\">\r\n        <div>Parent: {this.state.name}</div>\r\n        <button onClick={this.changeName.bind(this)}>change name</button>\r\n        <Child />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Child extends PureComponent {\r\n  render() {\r\n    console.log(\"child-render\");\r\n    return (\r\n      <div className=\"child\">\r\n        <div>Child...</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Parent extends React.Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  // when the child components have errors\r\n  // this function will be called\r\n  // return the obj will change the state\r\n  // it only works in production mode\r\n  static getDerivedStateFromError(err: object) {\r\n    console.log(err);\r\n    return { hasError: true };\r\n  }\r\n\r\n  // used to stat the errors\r\n  // and send the stats to the server\r\n  componentDidCatch(err: object, info: object) {\r\n    console.log(err, info);\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n\r\n    return hasError ? <h4>some problems</h4> : this.props.children;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\ntype User = {\r\n  id: string;\r\n  name: string;\r\n  age: number;\r\n};\r\ntype StateType = {\r\n  users: string | Array<User>;\r\n};\r\n\r\nexport default class Child extends React.Component<{}, StateType> {\r\n  state = {\r\n    // users: [\r\n    //   { id: \"001\", name: \"leo\", age: 18 },\r\n    //   { id: \"002\", name: \"pit\", age: 18 },\r\n    //   { id: \"003\", name: \"git\", age: 18 },\r\n    // ],\r\n    users: \"leo\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {Array.isArray(this.state.users) &&\r\n          this.state.users.map((user) => (\r\n            <h4 key={user.id}>\r\n              {user.id}---{user.name},{user.age}\r\n            </h4>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\ntype StateType = { count: number };\r\ntype PropType = { name: string };\r\n\r\nexport default class Demo extends Component<PropType, StateType> {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  add() {\r\n    // note that setState is async!\r\n    // you can get the updated state in the callback\r\n\r\n    //#region first use of setState\r\n\r\n    // const { count } = this.state;\r\n    // this.setState(\r\n    //   {\r\n    //     count: count + 1,\r\n    //   },\r\n    //   () => {\r\n    //     console.log(\"async:\", this.state.count);\r\n    //   }\r\n    // );\r\n    //#endregion\r\n\r\n    // second use:\r\n    // when the updated state needs to use the previous one, recommand this\r\n    this.setState(\r\n      (state, props) => {\r\n        return { count: state.count + 1 };\r\n      },\r\n      () => {\r\n        console.log(\"async:\", this.state.count);\r\n      }\r\n    );\r\n\r\n    console.log(\"sync:\", this.state.count);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Count name: {this.props.name}</div>\r\n        <div>count: {this.state.count}</div>\r\n        <button onClick={this.add.bind(this)}>+</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Count from \"../01-setState/setState\";\r\n\r\ntype APropType = {\r\n  render: (name: string) => React.ComponentElement<BPropType, any>;\r\n};\r\n\r\ntype BPropType = {\r\n  name: string;\r\n};\r\n\r\nexport default class Parent extends Component {\r\n  // use the concrete function to declare instead of anominous func\r\n  renderBFunc = (name: string) => {\r\n    return <B name={name} />;\r\n  };\r\n\r\n  renderCountFunc = (name: string) => {\r\n    return <Count name={name} />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Parent...</div>\r\n        {/* the render prop can be changed to another name */}\r\n        <A render={this.renderBFunc} />\r\n        <A render={this.renderCountFunc} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass A extends Component<APropType> {\r\n  state = {\r\n    name: \"leo\",\r\n  };\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>A...</div>\r\n        {/* slot, this area can be customized by the parent */}\r\n        {this.props.render(name)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass B extends Component<BPropType> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>B...</div>\r\n        {this.props.name} from A\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.less\";\r\n\r\ninterface ModalProps {\r\n  modalRoot: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nclass Modal extends Component<ModalProps> {\r\n  // ths parent of the children from the props of Modal\r\n  modalContainer: HTMLElement;\r\n\r\n  constructor(props: ModalProps) {\r\n    super(props);\r\n    this.modalContainer = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    // append the container to the root dom of the modal\r\n    // provided by the parent\r\n    this.props.modalRoot.current!.append(this.modalContainer);\r\n  }\r\n\r\n  //   componentWillUnmount() {\r\n  //     this.props.modalRoot.current!.removeChild(this.modalContainer);\r\n  //   }\r\n\r\n  render() {\r\n    // append the children from props\r\n    // to the container\r\n    // see the type of the params of createPortal...\r\n    // then you know what it is for\r\n    return ReactDOM.createPortal(this.props.children, this.modalContainer);\r\n  }\r\n}\r\n\r\nfunction ModalChild() {\r\n  return <div>i am a kid</div>;\r\n}\r\n\r\nexport default class PortalDemo extends Component {\r\n  modalRoot = React.createRef<HTMLDivElement>();\r\n\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  handleShowModal = () => {\r\n    const { showModal } = this.state;\r\n\r\n    this.setState({\r\n      showModal: !showModal,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { showModal } = this.state;\r\n\r\n    return (\r\n      <div className=\"portal-box\">\r\n        <div\r\n          className=\"modal-root\"\r\n          ref={this.modalRoot}\r\n          style={showModal ? { display: \"block\" } : { display: \"none\" }}\r\n        ></div>\r\n        <button onClick={this.handleShowModal}>{`${\r\n          showModal ? \"close\" : \"show\"\r\n        } modal`}</button>\r\n        <Modal modalRoot={this.modalRoot}>\r\n          <ModalChild />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useRef } from \"react\";\r\n\r\nexport default function ResizeBar({\r\n  containerRef,\r\n  widthChange,\r\n  style = {},\r\n  idx,\r\n  widths,\r\n}: {\r\n  containerRef: React.RefObject<HTMLElement>;\r\n  widthChange: (widths: number[]) => void;\r\n  style?: any;\r\n  idx: number;\r\n  widths: number[];\r\n}) {\r\n  const barRef = useRef<HTMLDivElement>(null);\r\n\r\n  const dragStart = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n\r\n    const moveEvent = (e: MouseEvent) => {\r\n      if (containerRef.current && barRef.current) {\r\n        // the previous left side width of the current bar\r\n        const prevLeftTotalWidthPercent = widths\r\n          .slice(idx)\r\n          .reduce((total, width) => total + width, 0);\r\n\r\n        // the distance from the current bar to the left side of the father container\r\n        const offsetLeft = e.clientX - containerRef.current.offsetLeft;\r\n\r\n        // the left side width of the current bar\r\n        const leftTotalWidthPercent =\r\n          1 -\r\n          offsetLeft /\r\n            Number(\r\n              getComputedStyle(containerRef.current).width.replace(\"px\", \"\")\r\n            );\r\n\r\n        // get the diff\r\n        const widthDiff = leftTotalWidthPercent - prevLeftTotalWidthPercent;\r\n\r\n        // cur width is the right box of the current bar\r\n        const curWidthPercent = widths[idx] + widthDiff;\r\n        // last width is the left box of the current bar\r\n        const lastWidthPercent = widths[idx - 1] - widthDiff;\r\n\r\n        widthChange(\r\n          [...widths].map((_, index) => {\r\n            if (index === idx) {\r\n              return curWidthPercent;\r\n            }\r\n\r\n            if (index === idx - 1) {\r\n              return lastWidthPercent;\r\n            }\r\n\r\n            // only change the widths of the boxs aside the current bar\r\n            // others remain the previous width\r\n            return _;\r\n          })\r\n        );\r\n      }\r\n    };\r\n    document.addEventListener(\"mousemove\", moveEvent);\r\n\r\n    const upEvent = () => {\r\n      document.removeEventListener(\"mousemove\", moveEvent);\r\n      document.removeEventListener(\"mouseup\", upEvent);\r\n    };\r\n\r\n    document.addEventListener(\"mouseup\", upEvent);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"resiz-bar\"\r\n      ref={barRef}\r\n      onMouseDown={dragStart}\r\n      style={style}\r\n    ></div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport ResizeBar from \"./ResizeBar\";\r\nimport \"./ResizableBox.less\";\r\n\r\nexport type ResizableBoxProps = {\r\n  children: React.ReactChild[];\r\n};\r\n\r\nexport default function ResizableBox({ children }: ResizableBoxProps) {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [widths, setWidths] = useState<number[]>(\r\n    new Array(children.length).fill(1 / children.length)\r\n  );\r\n\r\n  const tostr = (n: number) => `${(n * 100).toFixed(2)}%`;\r\n\r\n  return (\r\n    <div className=\"resizable-box\" ref={containerRef}>\r\n      {children.map((box, idx) => (\r\n        <React.Fragment key={idx}>\r\n          <div style={{ width: tostr(widths[idx]) }}>{box}</div>\r\n\r\n          {idx !== children.length - 1 && (\r\n            <ResizeBar\r\n              containerRef={containerRef}\r\n              widthChange={(widths) => setWidths(widths)}\r\n              idx={idx + 1}\r\n              widths={widths}\r\n            />\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ResizableBox from \"./ResizableBox\";\r\n\r\nexport default function ResizeLayout() {\r\n  return (\r\n    <div style={{ width: \"800px\" }}>\r\n      <ResizableBox>\r\n        <Box1 />\r\n        <Box2 />\r\n        <Box1 />\r\n        <Box1 />\r\n      </ResizableBox>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Box1 = () => {\r\n  return <div className=\"left-box\">box1</div>;\r\n};\r\n\r\nconst Box2 = () => {\r\n  return <div className=\"right-box\">box2</div>;\r\n};\r\n","import React from \"react\";\r\nimport TicTacToe from \"./demos/01-tic-tac-toe\";\r\nimport TodoList from \"./demos/02-todoList/TodoList\";\r\nimport ProxyTest from \"./demos/03-proxy/Proxy\";\r\nimport SearchAxios from \"./demos/04-search-axios/SearchAxios\";\r\nimport ReduxDemo from \"./demos/react-basis/10-redux/ReduxDemo\";\r\nimport ReactRedux from \"./demos/react-basis/11-react-redux/ReactRedux\";\r\nimport RefDemo from \"./demos/react-basis/08-refs\";\r\nimport ReduxToolkit from \"./demos/react-basis/12-redux-toolkit/ReduxToolkit\";\r\nimport Tetris from \"./demos/06-tetris\";\r\nimport LazyLoad from \"./demos/react-basis/02-lazyLoad\";\r\nimport Hooks from \"./demos/react-basis/03-hooks\";\r\nimport Context from \"./demos/react-basis/04-context\";\r\nimport PureComDemo from \"./demos/react-basis/05-pureComponent\";\r\nimport ErrorBoundary from \"./demos/react-basis/07-errorBoundary/index\";\r\nimport RenderProp from \"./demos/react-basis/06-render_prop(slot)\";\r\nimport Portal from \"./demos/react-basis/09-portal/PortalDemo\";\r\nimport ResizeLayout from \"./demos/05-resizeLayout\";\r\n\r\nexport type Demo = {\r\n  path: string;\r\n  name: string;\r\n  component: React.ComponentType | Demo[];\r\n};\r\n\r\nexport const linkStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"black\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"inline-block\",\r\n  padding: \"10px\",\r\n};\r\n\r\nconst demos: Demo[] = [\r\n  {\r\n    path: \"/tictactoe\",\r\n    name: \"tic-tac-toe\",\r\n    component: TicTacToe,\r\n  },\r\n  {\r\n    path: \"/todoList\",\r\n    name: \"To do List\",\r\n    component: TodoList,\r\n  },\r\n  {\r\n    path: \"/proxy\",\r\n    name: \"ProxyTest\",\r\n    component: ProxyTest,\r\n  },\r\n  {\r\n    path: \"/searchAxios\",\r\n    name: \"SearchAxios\",\r\n    component: SearchAxios,\r\n  },\r\n  {\r\n    path: \"/resizeLayout\",\r\n    name: \"resizable layout\",\r\n    component: ResizeLayout,\r\n  },\r\n  {\r\n    path: \"/tetris\",\r\n    name: \"Tetris\",\r\n    component: Tetris,\r\n  },\r\n  {\r\n    path: \"/react-basis\",\r\n    name: \"React basis\",\r\n    component: [\r\n      {\r\n        path: \"/lazyLoad\",\r\n        name: \"LazyLoad\",\r\n        component: LazyLoad,\r\n      },\r\n      {\r\n        path: \"/hooks\",\r\n        name: \"Hooks\",\r\n        component: Hooks,\r\n      },\r\n      {\r\n        path: \"/context\",\r\n        name: \"Context\",\r\n        component: Context,\r\n      },\r\n      {\r\n        path: \"/pureComDemo\",\r\n        name: \"PureComDemo\",\r\n        component: PureComDemo,\r\n      },\r\n      {\r\n        path: \"/errorBoundary\",\r\n        name: \"Error Boumdary\",\r\n        component: ErrorBoundary,\r\n      },\r\n      {\r\n        path: \"/renderProp\",\r\n        name: \"Render Prop(slot)\",\r\n        component: RenderProp,\r\n      },\r\n      {\r\n        path: \"/portalDemo\",\r\n        name: \"portal demo\",\r\n        component: Portal,\r\n      },\r\n      {\r\n        path: \"/reduxDemo\",\r\n        name: \"ReduxDemo\",\r\n        component: ReduxDemo,\r\n      },\r\n      {\r\n        path: \"/reactRedux\",\r\n        name: \"ReactRedux\",\r\n        component: ReactRedux,\r\n      },\r\n      {\r\n        path: \"/refDemo\",\r\n        name: \"RefDemo\",\r\n        component: RefDemo,\r\n      },\r\n      {\r\n        path: \"/reduxToolkit\",\r\n        name: \"ReduxToolkit\",\r\n        component: ReduxToolkit,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default demos;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport GamePannel from \"./components/GamePannel/GamePannel\";\r\nimport ControlPannel from \"./components/ControlPannel/ControlPannel\";\r\n\r\nexport default function Tetris() {\r\n  return (\r\n    <Provider store={store}>\r\n      <main className=\"main-wrapper\">\r\n        <GamePannel />\r\n        <ControlPannel />\r\n      </main>\r\n    </Provider>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//#region class way\r\n// class Demo extends Component {\r\n//   state = {\r\n//     count: 0,\r\n//   };\r\n//   add() {\r\n//     this.setState((state) => ({ count: state.count + 1 }));\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <div>Count: {this.state.count}</div>\r\n//         <button onClick={this.add.bind(this)}>+</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n//#endregion\r\n\r\n// function way with hook to be able to use the states\r\nexport default function Demo() {\r\n  // React.useState is a so-called hook\r\n  // [state, setStateMethod] = React.useState(initial value);\r\n  // each state corresponding to a set method\r\n  const [count, setCount] = useState(0);\r\n  const [name, changeName] = useState(\"pit\");\r\n\r\n  /**\r\n   * React.useEffect(callback, array)\r\n   * array is used to watch the states\r\n   * if [count], when count updates, the callback will be called, it is the componentDidUpdate\r\n   * so blank [] means no states are watched, so it is the componentDidMount\r\n   * More accurately, the effect logics will run after rerendering every time by default\r\n   * if the array is null\r\n   * and the state in [] is being watched as if not being changed,\r\n   * the effect will not run\r\n   */\r\n\r\n  // only run once like componentDidMount\r\n  useEffect(() => {\r\n    console.log(\"did mount\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCount(count + 1);\r\n    }, 1000);\r\n\r\n    console.log(\"effected\");\r\n\r\n    // return the function is the like componentWillUnmount\r\n    // but actually it will be executed every time after rerendering\r\n    // following the above logic\r\n    // more like the following componentDidUpdate\r\n    return () => {\r\n      console.log(\"effected in return\");\r\n      clearInterval(timer);\r\n    };\r\n  });\r\n\r\n  // it can be multiple effects\r\n  useEffect(() => {\r\n    console.log(\"another effect used to watch the name state\");\r\n  }, [name]);\r\n\r\n  function unmount() {\r\n    ReactDOM.unmountComponentAtNode(\r\n      document.getElementById(\"root\") as HTMLElement\r\n    );\r\n  }\r\n\r\n  function add() {\r\n    // first way\r\n    // setCount(count + 1);\r\n    changeName(name === \"leo\" ? \"pit\" : \"leo\");\r\n\r\n    // second way\r\n    setCount((count) => count + 1);\r\n  }\r\n\r\n  const inputValue = React.useRef<HTMLInputElement>(null);\r\n\r\n  function show() {\r\n    console.log(inputValue);\r\n    if (inputValue.current) alert(inputValue.current.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" ref={inputValue} />\r\n      <div>\r\n        count: {count}---{name}\r\n      </div>\r\n      <button onClick={add}>+&changeName</button>&nbsp;\r\n      <button onClick={unmount}>unmount</button>&nbsp;\r\n      <button onClick={show}>show</button>\r\n    </div>\r\n  );\r\n}\r\n","// import React from \"react·\";\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport Child from './Child';\r\n\r\nexport default function ErrorBoundaryTest() {\r\n  return (\r\n    <ErrorBoundary>\r\n      <Child></Child>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Menu from \"./component/Menu\";\r\nimport demos, { linkStyle } from \"./menuconfig\";\r\n\r\nimport \"./App.less\";\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app-body\">\r\n        <div className=\"app-content\">\r\n          <Menu items={demos} linkStyle={linkStyle} menuPath=\"/\"></Menu>\r\n        </div>\r\n        <div className=\"footer\">@SuperLi</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootDom = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  rootDom\r\n);\r\n"],"sourceRoot":""}