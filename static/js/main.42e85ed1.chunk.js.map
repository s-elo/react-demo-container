{"version":3,"sources":["component/Ops/index.tsx","component/Menu/index.tsx","demos/01-tic-tac-toe/index.tsx","demos/02-todoList/component/ToDoInput/index.tsx","demos/02-todoList/component/ToDoItem/index.tsx","demos/02-todoList/component/ToDoList/index.tsx","demos/02-todoList/component/ToDoFooter/index.tsx","demos/02-todoList/TodoList.tsx","demos/03-proxy/Proxy.tsx","demos/04-search-axios/component/Search/index.tsx","demos/04-search-axios/component/List/index.tsx","demos/04-search-axios/SearchAxios.tsx","demos/05-redux/redux/todos/todo_reducer.ts","demos/05-redux/redux/store.ts","demos/05-redux/redux/counter/count_reducer.ts","demos/05-redux/redux/counter/count_action.ts","demos/05-redux/redux/counter/constant.ts","demos/05-redux/component/Count/index.tsx","demos/05-redux/redux/todos/todo_action.ts","demos/05-redux/component/Todos/Todos.tsx","demos/05-redux/ReduxDemo.tsx","demos/06-react-redux/redux/constant.ts","demos/06-react-redux/redux/reducers/person.ts","demos/06-react-redux/redux/store.ts","demos/06-react-redux/redux/reducers/count.ts","demos/06-react-redux/redux/actions/count.ts","demos/06-react-redux/component/Count/index.jsx","demos/06-react-redux/component/Person/index.tsx","demos/06-react-redux/redux/actions/person.ts","demos/06-react-redux/ReactRedux.tsx","demos/07-refs/index.tsx","demos/08-redux-toolkit/components/Header/Header.tsx","demos/08-redux-toolkit/api/client.js","demos/08-redux-toolkit/features/users/userSlice.ts","demos/08-redux-toolkit/features/posts/PostAuthor/PostAuthor.tsx","demos/08-redux-toolkit/components/TimeAgo/TimeAge.tsx","demos/08-redux-toolkit/features/api/apiSlice.ts","demos/08-redux-toolkit/features/posts/PostReactBtn/PostReactBtn.tsx","demos/08-redux-toolkit/features/posts/PostItem/PostItem.tsx","component/Spinner/Spinner.tsx","demos/08-redux-toolkit/features/posts/PostList/PostList.tsx","demos/08-redux-toolkit/features/posts/AddPostForm/AddPostForm.tsx","demos/08-redux-toolkit/features/posts/EditPostForm/EditPostForm.tsx","demos/08-redux-toolkit/features/posts/PostDetail/PostDetail.tsx","demos/08-redux-toolkit/features/users/UserList/UserList.tsx","demos/08-redux-toolkit/features/users/UserPage/UserPage.tsx","demos/08-redux-toolkit/features/notifications/notificationSlice.ts","demos/08-redux-toolkit/features/notifications/NotificationList/NotificationList.tsx","demos/08-redux-toolkit/api/server.js","demos/08-redux-toolkit/features/posts/postSlice.ts","demos/08-redux-toolkit/store.ts","demos/08-redux-toolkit/ReduxToolkit.tsx","demos/others/02-lazyLoad/index.tsx","demos/others/04-context/index.tsx","demos/others/05-pureComponent/index.tsx","demos/others/07-errorBoundary/ErrorBoundary.tsx","demos/others/07-errorBoundary/Child.tsx","demos/others/01-setState/setState.tsx","demos/others/06-render_prop(slot)/index.tsx","demos/others/08-portal/PortalDemo.tsx","demos/others/09-resizeLayout/ResizeBar.tsx","demos/others/09-resizeLayout/ResizableBox.tsx","demos/others/09-resizeLayout/index.tsx","demos/others/others.tsx","demos/others/03-hooks/index.tsx","demos/others/07-errorBoundary/index.tsx","App.tsx","index.tsx"],"names":["Ops","React","Component","Menu","state","isFirstTime","isMenuPath","menuPath","props","location","pathname","itemName","this","itemChanged","history","push","items","some","v","path","indexOf","item","find","name","setState","linkStyle","className","map","index","onClick","handleShowItem","bind","style","to","component","toMenu","withRouter","calculateWinner","squares","val","a","b","c","Square","squareClick","value","Board","i","square","handleClickOnBoard","renderSquare","Game","Array","fill","xIsNext","stepNumber","slice","nextSquare","length","concat","move","currentSquare","moves","step","desc","jumpTo","status","result","handleClick","ToDoInput","handleKeyUp","event","target","key","trim","alert","addTask","onKeyUp","type","placeholder","TodoItem","mouseFlag","handleChange","id","updateStatus","checked","handleDelete","window","confirm","deleteTask","flag","task","done","background","onMouseEnter","handleMouse","onMouseLeave","onChange","visibility","ToDoList","data","handleSelectAll","selectAll","handleClearAllDone","clearAllDone","doneTasks","reduce","pre","curVal","total","TodoList","handleAddTask","newTask","newItem","newData","filter","isAll","Proxy","getData","axios","get","then","res","console","log","err","Search","searchInput","createRef","updateState","searchStr","current","isFirst","isLoading","message","ref","List","color","href","html_url","src","avatar_url","alt","login","App","initialWorks","createStore","combineReducers","counterSum","prevState","action","todoList","work","includes","job","applyMiddleware","thunk","incrementAction","decrementAction","incrementAsyncAction","time","dispatch","setTimeout","Count","stateChange","Number","add","store","sub","addIfOdd","getState","addAsync","addWork","subWork","Todos","workInput","addToList","subFromList","ReduxDemo","unsubscribe","subscribe","forceUpdate","ADD_PERSON","initData","age","sum","persons","composeWithDevTools","count","asyncAdd","personNum","select","connect","Person","inputName","inputAge","handleAdd","personObj","handleNameInput","handleAgeInput","person","ClassInput","handleInputChanged","el","RefDemo","classInputRef","Header","demoPath","client","endpoint","body","customConfig","headers","config","method","JSON","stringify","fetch","response","json","ok","url","Error","statusText","Promise","reject","post","userAdapter","createEntityAdapter","initialState","getInitialState","error","fetchUsers","createAsyncThunk","resp","userSlice","createSlice","reducers","extraReducers","builder","addCase","pending","_","fulfilled","setAll","payload","rejected","getSelectors","users","selectById","selectAllUsers","selectUserFetchStatus","PostAuthor","userId","user","useSelector","selectUserById","TimeAge","timestamp","timeAgo","date","parseISO","timePeriod","formatDistanceToNow","title","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","getPosts","query","providesTags","queryRet","keepUnusedDataFor","getPost","postId","__","addNewPost","mutation","newPost","invalidatesTags","editPost","arg","addReaction","reactName","onQueryStarted","queryFulfilled","patchResult","util","updateQueryData","undefined","draft","reactions","undo","useGetPostsQuery","useGetPostQuery","useAddNewPostMutation","useEditPostMutation","useAddReactionMutation","reactionEmoji","thumbsUp","hooray","heart","rocket","eyes","PostReactBtn","updataReaction","Object","entries","emoji","fontWeight","PostItem","detailPath","margin","content","Spinner","text","size","header","height","width","PostList","useDispatch","userFetchStatus","useEffect","renderedPosts","posts","isSuccess","isError","sortedPosts","useMemo","sort","localeCompare","useState","setTitle","setContent","setUserId","onSaveBtnClick","e","preventDefault","unwrap","display","disabled","EditPostForm","match","params","updatePost","htmlFor","PostDetail","renderedDetail","isFetching","Fragment","UserList","finalRender","renderedUsers","UserPage","filteredPosts","notificationAdapter","sortComparer","fetchNotifications","allNotifications","selectAllNotifications","latestNotification","latestTimestamp","markAsRead","values","entities","forEach","notification","isRead","upsertMany","actions","notifications","selectNotificationFetchStatus","NotificationList","notificationFetchStatus","renderedNotifications","backgroundColor","emptyReminder","textAlign","fetchNewNotifications","seedDate","postAdapter","fetchPosts","nanoid","Date","toISOString","postSlice","postAdded","reducer","prepare","postUpdated","prevPost","reactionAdded","addOne","selectIds","configureStore","postReducer","userReducer","notificationReducer","middleware","getDefaultMiddleware","ARTIFICIAL_DELAY_MS","rng","seedrandom","randomSeedString","localStorage","getItem","getRandomInt","min","max","Math","ceil","floor","setItem","faker","seed","getTime","randomFromArray","array","db","factory","primaryKey","firstName","String","lastName","username","manyOf","oneOf","comments","comment","reaction","createUserData","internet","userName","author","create","j","lorem","words","recent","paragraphs","serializePost","handlers","rest","req","ctx","getAll","delay","findFirst","where","equals","patch","updatedPost","update","generateRandomNotifications","worker","setupWorker","socketServer","MockSocketServer","sendRandomNotifications","socket","since","obj","send","sendMessage","on","parse","notificationTemplates","numNotifications","pastDate","now","valueOf","setMinutes","getMinutes","template","between","start","onUnhandledRequest","workerStarted","stop","exact","AddPostForm","lazyHome","lazy","lazyAbout","LazyLoad","fallback","MyContext","createContext","Provider","Consumer","Grand","Parent","Child","context","NextChild","contextType","changeName","PureComponent","hasError","info","children","isArray","Demo","renderBFunc","renderCountFunc","render","A","B","Modal","modalContainer","document","createElement","modalRoot","append","ReactDOM","createPortal","ModalChild","PortalDemo","showModal","handleShowModal","ResizeBar","containerRef","widthChange","idx","widths","barRef","useRef","onMouseDown","moveEvent","prevLeftTotalWidthPercent","widthDiff","clientX","offsetLeft","getComputedStyle","replace","curWidthPercent","lastWidthPercent","addEventListener","upEvent","removeEventListener","ResizableBox","setWidths","box","n","toFixed","LeftBox","forwardRef","RightBox","leftRef","innerText","textDecoration","padding","demos","setCount","timer","setInterval","clearInterval","inputValue","unmountComponentAtNode","getElementById","Context","PureComDemo","RenderProp","Portal","flexDirection","others","TicTacToe","ProxyTest","SearchAxios","ReactRedux","ReduxToolkit","Others","currentDemoName","changeDemo","rootDom"],"mappings":"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","file":"static/js/main.42e85ed1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Ops extends React.Component {\r\n  render() {\r\n    return <div>Ops~</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n  RouteComponentProps,\r\n} from \"react-router-dom\";\r\nimport Ops from \"@/component/Ops\";\r\n\r\nimport \"./index.less\";\r\n\r\ntype Item = {\r\n  path: string;\r\n  name: string;\r\n  component: React.ComponentType;\r\n};\r\n\r\ntype Props = {\r\n  items: Array<Item>;\r\n  linkStyle: {\r\n    [Props: string]: string;\r\n  };\r\n  menuPath: string;\r\n  // sync the demo name\r\n  itemChanged?: (itemName: string) => void;\r\n};\r\n\r\nclass Menu extends React.Component<RouteComponentProps & Props> {\r\n  state = {\r\n    isFirstTime: true,\r\n  };\r\n\r\n  handleShowItem(itemName: string) {\r\n    this.props.itemChanged && this.props.itemChanged(itemName);\r\n  }\r\n\r\n  toMenu() {\r\n    const { history, menuPath } = this.props;\r\n\r\n    history.push(menuPath);\r\n\r\n    this.props.itemChanged && this.props.itemChanged(\"\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      location: { pathname },\r\n      history,\r\n      items,\r\n    } = this.props;\r\n\r\n    // only jump if the pathname is included in the path of one of the items in this menu (level)\r\n    // or the pathname is the next level of the path of one of the items\r\n    const isIncluded = items.some(\r\n      (v) => v.path === pathname || pathname.indexOf(v.path) !== -1\r\n    );\r\n\r\n    if (isIncluded && this.state.isFirstTime) {\r\n      history.push(pathname);\r\n\r\n      // sync the name if it has a name and being the up level the the pathname\r\n      if (\r\n        this.props.itemChanged &&\r\n        items.some((v) => pathname.indexOf(v.path) !== -1)\r\n      ) {\r\n        // find that up level\r\n        const item = items.find((v) => pathname.indexOf(v.path) !== -1);\r\n\r\n        item && this.props.itemChanged(item.name);\r\n      }\r\n\r\n      this.setState({\r\n        isFirstTime: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  isMenuPath = (menuPath: string) => {\r\n    // when it is a root path,\r\n    // show the menu instead of the items\r\n    return (\r\n      this.props.location.pathname === menuPath ||\r\n      this.props.location.pathname === \"/react-demos\"\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { items, linkStyle, menuPath } = this.props;\r\n\r\n    return (\r\n      <div className=\"body\">\r\n        {this.isMenuPath(menuPath) ? (\r\n          <div className=\"menu\">\r\n            {items.map((item, index) => (\r\n              <div\r\n                className=\"menu-item\"\r\n                key={item.path}\r\n                onClick={this.handleShowItem.bind(this, item.name)}\r\n              >\r\n                <div className=\"menu-order\">{index + 1}</div>\r\n                <Link style={linkStyle} to={item.path}>\r\n                  {item.name}\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"demo-area\">\r\n            <div className=\"demo-content\">\r\n              <Switch>\r\n                {items.map((item) => (\r\n                  <Route\r\n                    path={item.path}\r\n                    component={item.component}\r\n                    key={item.path}\r\n                  />\r\n                ))}\r\n                <Route path=\"/ops\" component={Ops} />\r\n                {/* when the above does not match */}\r\n                <Redirect to=\"/ops\" />\r\n              </Switch>\r\n            </div>\r\n            <div className=\"back-to-menu\" onClick={this.toMenu.bind(this)}>\r\n              Menu\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Menu);\r\n","import React from \"react\";\r\nimport { SquareProps, BoardProps, GameProps, GameStates } from \"./type\";\r\n\r\nimport \"./index.less\";\r\n\r\n// class Square extends React.Component {\r\n//   handleSquareClick() {\r\n//     this.props.squareClick();\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <button className=\"square\" onClick={this.handleSquareClick.bind(this)}>\r\n//         {this.props.value}\r\n//       </button>\r\n//     );\r\n//   }\r\n// }\r\nfunction calculateWinner(squares: Array<SquareProps[\"value\"]>) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (const val of lines) {\r\n    const [a, b, c] = val;\r\n\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction Square(props: SquareProps) {\r\n  return (\r\n    <button className=\"square\" onClick={props.squareClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component<BoardProps> {\r\n  renderSquare(i: number) {\r\n    return (\r\n      <Square\r\n        value={this.props.square[i]}\r\n        squareClick={this.props.handleClickOnBoard.bind(this, i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Game extends React.Component<GameProps, GameStates> {\r\n  constructor(props: GameProps) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: new Array(9).fill(null),\r\n        },\r\n      ],\r\n\r\n      xIsNext: true,\r\n\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  handleClick(i: number) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const currentSquare = history[history.length - 1].squares;\r\n\r\n    const nextSquare = currentSquare.slice();\r\n\r\n    // someone won or the square has beenn filled\r\n    if (calculateWinner(nextSquare) || nextSquare[i]) {\r\n      return;\r\n    }\r\n\r\n    nextSquare[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: nextSquare,\r\n        },\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  jumpTo(move: number) {\r\n    this.setState({\r\n      stepNumber: move,\r\n      xIsNext: move % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const currentSquare = history[this.state.stepNumber].squares;\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Go to move #\" + move : \"Go to start\";\r\n\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={this.jumpTo.bind(this, move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status = \"\";\r\n    let result = calculateWinner(currentSquare);\r\n\r\n    if (result) {\r\n      status = `Winner: ${result}`;\r\n    } else {\r\n      status = `Next player: ${this.state.xIsNext ? \"X\" : \"O\"}`;\r\n    }\r\n\r\n    return (\r\n      <div className=\"tic-tac-body\">\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n              square={currentSquare}\r\n              handleClickOnBoard={(i: number) => {\r\n                this.handleClick(i);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TodoInputProps } from \"../../type\";\r\nimport \"./index.css\";\r\n\r\nexport default class ToDoInput extends Component<TodoInputProps> {\r\n  handleKeyUp = (\r\n    event: React.KeyboardEvent<HTMLInputElement> &\r\n      React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const { target, key } = event;\r\n\r\n    if (key !== \"Enter\") {\r\n      return;\r\n    }\r\n\r\n    if (target.value.trim() === \"\") {\r\n      return alert(\"what the hell is the blank task?\");\r\n    }\r\n\r\n    this.props.addTask(target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <input\r\n          onKeyUp={this.handleKeyUp}\r\n          type=\"text\"\r\n          placeholder=\"Press Enter to Add\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TodoItemProps } from \"../../type\";\r\nimport \"./index.css\";\r\n\r\nexport default class TodoItem extends Component<TodoItemProps> {\r\n  state = {\r\n    mouseFlag: false,\r\n  };\r\n\r\n  handleMouse(flag: boolean) {\r\n    this.setState({\r\n      mouseFlag: flag,\r\n    });\r\n  }\r\n\r\n  handleChange = (id: number) => {\r\n    return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      this.props.updateStatus(id, event.target.checked);\r\n    };\r\n  };\r\n\r\n  handleDelete = (id: number) => {\r\n    return () => {\r\n      if (window.confirm(\"delete?\")) {\r\n        this.props.deleteTask(id);\r\n      }\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { id, task, done } = this.props;\r\n    const { mouseFlag } = this.state;\r\n\r\n    return (\r\n      <div\r\n        style={{ background: mouseFlag ? \"#e6e6e6\" : \"white\" }}\r\n        className=\"item-box\"\r\n        onMouseEnter={() => {\r\n          this.handleMouse(true);\r\n        }}\r\n        onMouseLeave={() => {\r\n          this.handleMouse(false);\r\n        }}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={done}\r\n          onChange={this.handleChange(id)}\r\n        />\r\n        <span className=\"task\">{task}</span>\r\n        <button\r\n          style={{ visibility: mouseFlag ? \"visible\" : \"hidden\" }}\r\n          onClick={this.handleDelete(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ToDoItem from \"../ToDoItem\";\r\nimport { TodoListProps } from \"../../type\";\r\nimport \"./index.css\";\r\n\r\nexport default class ToDoList extends Component<TodoListProps> {\r\n  render() {\r\n    const { data, updateStatus, deleteTask } = this.props;\r\n\r\n    return (\r\n      <div className=\"list-box\">\r\n        {data.map((item) => {\r\n          return (\r\n            <ToDoItem\r\n              key={item.id}\r\n              {...item}\r\n              updateStatus={updateStatus}\r\n              deleteTask={deleteTask}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TodoFooterProps } from \"../../type\";\r\nimport \"./index.css\";\r\n\r\nexport default class index extends Component<TodoFooterProps> {\r\n  handleSelectAll = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.props.selectAll(event.target.checked);\r\n  };\r\n\r\n  handleClearAllDone = () => {\r\n    this.props.clearAllDone();\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    const doneTasks = data.reduce((pre, curVal) => {\r\n      return pre + (curVal.done ? 1 : 0);\r\n    }, 0);\r\n\r\n    const total = data.length;\r\n    return (\r\n      <div className=\"footer-box\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={doneTasks === total && total !== 0}\r\n          onChange={this.handleSelectAll}\r\n        />\r\n        <span className=\"data\">\r\n          {doneTasks} Done / {total} All\r\n        </span>\r\n        <button onClick={this.handleClearAllDone}>Clear all done tasks</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ToDoInput from \"./component/ToDoInput\";\r\nimport ToDoList from \"./component/ToDoList\";\r\nimport ToDoFooter from \"./component/ToDoFooter\";\r\nimport { TodoState } from \"./type\";\r\nimport \"./TodoList.less\";\r\n\r\nexport default class TodoList extends Component<{}, TodoState> {\r\n  state = {\r\n    data: [\r\n      { id: 1, task: \"sleep\", done: true },\r\n      { id: 2, task: \"eat\", done: true },\r\n      { id: 3, task: \"codeing\", done: false },\r\n    ],\r\n\r\n    total: 3,\r\n  };\r\n\r\n  handleAddTask = (newTask: string) => {\r\n    const { data, total } = this.state;\r\n\r\n    const newItem = { id: total + 1, task: newTask, done: false };\r\n\r\n    this.setState({\r\n      data: [newItem, ...data],\r\n      total: total + 1,\r\n    });\r\n  };\r\n\r\n  updateStatus = (id: number, status: boolean) => {\r\n    const { data } = this.state;\r\n\r\n    const newData = data.map((item) => {\r\n      return item.id === id ? { ...item, done: status } : item;\r\n    });\r\n\r\n    this.setState({\r\n      data: newData,\r\n    });\r\n  };\r\n\r\n  deleteTask = (id: number) => {\r\n    const { data } = this.state;\r\n\r\n    const newData = data.filter((item) => {\r\n      return item.id !== id;\r\n    });\r\n\r\n    this.setState({\r\n      data: newData,\r\n    });\r\n  };\r\n\r\n  selectAll = (isAll: boolean) => {\r\n    const { data } = this.state;\r\n\r\n    const newData = data.map((item) => {\r\n      return { ...item, done: isAll };\r\n    });\r\n\r\n    this.setState({\r\n      data: newData,\r\n    });\r\n  };\r\n\r\n  clearAllDone = () => {\r\n    const { data } = this.state;\r\n\r\n    const newData = data.filter((item) => {\r\n      return !item.done;\r\n    });\r\n\r\n    this.setState({\r\n      data: newData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-box\">\r\n        <ToDoInput addTask={this.handleAddTask} />\r\n        <ToDoList\r\n          data={this.state.data}\r\n          updateStatus={this.updateStatus}\r\n          deleteTask={this.deleteTask}\r\n        />\r\n        <ToDoFooter\r\n          data={this.state.data}\r\n          selectAll={this.selectAll}\r\n          clearAllDone={this.clearAllDone}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Proxy extends Component {\r\n  getData = () => {\r\n    // proxy server\r\n    // leoProxy is used to fine the corresponding proxy\r\n    // when there are multiple proxys\r\n    axios.get(`http://localhost:3000/leoProxy/testData`).then(\r\n      (res) => {\r\n        console.log(res.data);\r\n      },\r\n      (err) => {\r\n        console.log(\"error!\", err);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.getData}>Get data</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n// import PubSub from \"pubsub-js\";\r\nimport { SearchProps } from \"../../type\";\r\nimport \"./index.less\";\r\n\r\nexport default class Search extends Component<SearchProps> {\r\n  private searchInput = React.createRef<HTMLInputElement>();\r\n\r\n  updateState = () => {\r\n    const searchStr = this.searchInput.current!.value;\r\n\r\n    // update the status\r\n    this.props.updateState({ isFirst: false, isLoading: true });\r\n\r\n    axios\r\n      // using the proxy\r\n      .get(`http://localhost:3000/leoProxy/search/users?q=${searchStr}`)\r\n      .then(\r\n        (res) => {\r\n          // console.log(res.data);\r\n          // PubSub.publish(\"status\", { isLoading: false, data: res.data.items });\r\n          this.props.updateState({ isLoading: false, data: res.data.items });\r\n        },\r\n        (err) => {\r\n          // console.log(err);\r\n          this.props.updateState({ isLoading: false, err: err.message });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-box\">\r\n        <div className=\"title\">Search Github Users</div>\r\n        <input\r\n          ref={this.searchInput}\r\n          type=\"text\"\r\n          placeholder=\"enter the name you search\"\r\n        />\r\n        <button onClick={this.updateState}>Search</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import PubSub from \"pubsub-js\";\r\nimport { Status } from \"../../type\";\r\nimport \"./index.less\";\r\n\r\nexport default class List extends Component<Status> {\r\n  // when using the PubSub\r\n  // componentDidMount() {\r\n  //   this.token = PubSub.subscribe(\"status\", (_, status) => {\r\n  //     this.setState(status);\r\n  //   });\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   PubSub.unsubscribe(this.token);\r\n  // }\r\n\r\n  // right now the state is hoisted to the father\r\n  render() {\r\n    const { data, isFirst, isLoading, err } = this.props;\r\n\r\n    return (\r\n      <div className=\"search-list-box\">\r\n        {isFirst ? (\r\n          <h2>Welcome!</h2>\r\n        ) : isLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : err ? (\r\n          <h2 style={{ color: \"red\" }}>{err}</h2>\r\n        ) : data ? (\r\n          data.map((val) => {\r\n            return (\r\n              <div className=\"item\" key={val.login}>\r\n                <a href={val.html_url}>\r\n                  <img src={val.avatar_url} alt=\"avatar\" />\r\n                </a>\r\n                <div className=\"desc\">{val.login}</div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./component/Search\";\r\nimport List from \"./component/List\";\r\nimport { Status } from \"./type\";\r\n\r\nexport default class App extends Component {\r\n  state: Status = {\r\n    data: [],\r\n    isFirst: true,\r\n    isLoading: false,\r\n    err: \"\",\r\n  };\r\n\r\n  updateState = (status: Status) => {\r\n    this.setState({\r\n      data: status.data,\r\n      isFirst: status.isFirst,\r\n      isLoading: status.isLoading,\r\n      err: status.err,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search updateState={this.updateState} />\r\n        <List {...this.state} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const initialWorks = [\"sleeping\", \"coding\", \"playing\"];\r\nexport default function todoReducer(\r\n  prevState: string[] = initialWorks,\r\n  action: any\r\n) {\r\n  const { type, work } = action;\r\n\r\n  switch (type) {\r\n    case \"ADD\":\r\n      return prevState.concat(work);\r\n    case \"SUB\":\r\n      if (prevState.includes(work)) {\r\n        return prevState.filter((job) => job !== work);\r\n      }\r\n\r\n      return [...prevState];\r\n    default:\r\n      return [...prevState];\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport countReducer from \"./counter/count_reducer\";\r\nimport todoReducer from \"./todos/todo_reducer\";\r\n\r\n// handle the async actions\r\n// the async reducers return a function,\r\n// but we need an object with type prop\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default createStore(\r\n  combineReducers({ counterSum: countReducer, todoList: todoReducer }),\r\n  applyMiddleware(thunk)\r\n);\r\n","const initData = 0;\r\nexport default function counterReducer (prevState = initData, action: any) {\r\n  const { type, data } = action;\r\n\r\n  switch (type) {\r\n    case \"increment\":\r\n      return prevState + data;\r\n    case \"decrement\":\r\n      return prevState - data;\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","import { INCREMENT, DECREMENT } from \"./constant\";\r\nimport { Dispatch } from \"react\";\r\nimport { AnyAction } from \"redux\";\r\n\r\n// sync action, reutrn an obj\r\nexport const incrementAction = (data: number) => ({ type: INCREMENT, data });\r\nexport const decrementAction = (data: number) => ({ type: DECREMENT, data });\r\n\r\n// async action, return a function\r\nexport const incrementAsyncAction = (data: number, time: number) => {\r\n  return (dispatch: Dispatch<AnyAction>) => {\r\n    setTimeout(() => {\r\n      dispatch(incrementAction(data));\r\n    }, time);\r\n\r\n    return { type: \"asycIncrement\" };\r\n  };\r\n};\r\n","export const INCREMENT = \"increment\";\r\nexport const DECREMENT = \"decrement\";\r\n","import React, { Component } from \"react\";\r\nimport store from \"../../redux/store\";\r\nimport {\r\n  incrementAction,\r\n  decrementAction,\r\n  incrementAsyncAction,\r\n} from \"../../redux/counter/count_action\";\r\n\r\nexport default class Count extends Component {\r\n  state = {\r\n    // count: 0,\r\n    step: 1,\r\n  };\r\n\r\n  stateChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = event.target;\r\n    this.setState({\r\n      step: Number(value),\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { step } = this.state;\r\n\r\n    store.dispatch(incrementAction(step));\r\n  };\r\n\r\n  sub = () => {\r\n    const { step } = this.state;\r\n\r\n    store.dispatch(decrementAction(step));\r\n  };\r\n\r\n  addIfOdd = () => {\r\n    const { step } = this.state;\r\n    // the store contains two states\r\n    const { counterSum } = store.getState();\r\n\r\n    if (counterSum % 2 === 0) {\r\n      return;\r\n    }\r\n\r\n    store.dispatch(incrementAction(step));\r\n  };\r\n\r\n  addAsync = () => {\r\n    const { step } = this.state;\r\n\r\n    // async action\r\n    store.dispatch(incrementAsyncAction(step, 1000));\r\n  };\r\n\r\n  render() {\r\n    const { counterSum, todoList } = store.getState();\r\n\r\n    return (\r\n      <div className=\"box\">\r\n        <h2 className=\"count-show\">SUM: {counterSum}</h2>\r\n        <h2>Todo Num: {todoList.length}</h2>\r\n        <select onChange={this.stateChange}>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n        &nbsp;\r\n        <button onClick={this.add}>+</button>&nbsp;\r\n        <button onClick={this.sub}>-</button>&nbsp;\r\n        <button onClick={this.addIfOdd}>+ ifodd</button>&nbsp;\r\n        <button onClick={this.addAsync}>+ async</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const addWork = (work: string) => ({ type: \"ADD\", work });\r\n\r\nexport const subWork = (work: string) => ({ type: \"SUB\", work });\r\n","import React, { Component } from \"react\";\r\nimport store from \"../../redux/store\";\r\nimport { addWork, subWork } from \"../../redux/todos/todo_action\";\r\nimport \"./todos.less\";\r\n\r\nexport default class Todos extends Component {\r\n  workInput: React.RefObject<HTMLInputElement> = React.createRef();\r\n\r\n  addToList = () => {\r\n    const work = this.workInput.current!.value;\r\n\r\n    if (work.trim() === \"\") return alert(\"blank work?\");\r\n\r\n    store.dispatch(addWork(work));\r\n  };\r\n\r\n  subFromList = () => {\r\n    const work = this.workInput.current!.value;\r\n\r\n    if (work.trim() === \"\") return alert(\"blank work?\");\r\n\r\n    const { todoList } = store.getState();\r\n\r\n    if (!todoList.includes(work)) return alert(\"no such work\");\r\n\r\n    store.dispatch(subWork(work));\r\n  };\r\n\r\n  render() {\r\n    const { todoList, counterSum } = store.getState();\r\n\r\n    return (\r\n      <div className=\"todo-redux-box\">\r\n        <h2>SUM: {counterSum}</h2>\r\n        <span>Todo List:</span>\r\n        <input type=\"text\" ref={this.workInput} />\r\n        <button onClick={this.addToList}>Add</button>\r\n        <button onClick={this.subFromList}>Sub</button>\r\n        {todoList.map((work, index) => (\r\n          <li key={work}>{`${index + 1}: ${work}`}</li>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport store from \"./redux/store\";\r\nimport Count from \"./component/Count\";\r\nimport Todos from './component/Todos/Todos';\r\n\r\nexport default class ReduxDemo extends Component {\r\n  unsubscribe: () => void = () => {}\r\n\r\n  componentDidMount() {\r\n    // when one of the states in the store changes\r\n    this.unsubscribe = store.subscribe(() => {\r\n      this.forceUpdate();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {    \r\n    return (\r\n      <div>\r\n        <Count />\r\n        <hr />\r\n        <Todos />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// for action types\r\nexport const INCREMENT = \"increment\";\r\nexport const DECREMENT = \"decrement\";\r\nexport const ADD_PERSON = \"add_person\";\r\n","import { ADD_PERSON } from \"../constant\";\r\n\r\nconst initData = [{ id: 1, name: \"leo\", age: \"22\" }];\r\nexport default function personReducer(prevState = initData, action: any) {\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case ADD_PERSON:\r\n      // must return a new reference!!\r\n      // reudx will have a shallow comparsion\r\n      return [data, ...prevState];\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\n\r\n// reducers\r\nimport sum from \"./reducers/count\";\r\nimport persons from \"./reducers/person\";\r\n\r\n// handle the async actions\r\nimport thunk from \"redux-thunk\";\r\n// for dev tools of redux\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport default createStore(\r\n  combineReducers({\r\n    sum,\r\n    persons,\r\n  }),\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","const initData = 0;\r\nexport default function counterReducer(prevState = initData, action: any) {\r\n  const { type, data } = action;\r\n\r\n  switch (type) {\r\n    case \"increment\":\r\n      return prevState + data;\r\n    case \"decrement\":\r\n      return prevState - data;\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n","import { INCREMENT, DECREMENT } from \"../constant\";\r\nimport { Dispatch } from \"react\";\r\nimport { AnyAction } from \"redux\";\r\n// sync action, reutrn an obj\r\nexport const incrementAction = (data: number) => ({ type: INCREMENT, data });\r\nexport const decrementAction = (data: number) => ({ type: DECREMENT, data });\r\n\r\n// async action, return a function\r\nexport const incrementAsyncAction = (data: number, time: number) => {\r\n  return (dispatch: Dispatch<AnyAction>) => {\r\n    setTimeout(() => {\r\n      dispatch(incrementAction(data));\r\n    }, time);\r\n  };\r\n};\r\n","// import CountUI from \"../../component/Count\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  incrementAction,\r\n  decrementAction,\r\n  incrementAsyncAction,\r\n} from \"../../redux/actions/count\";\r\n\r\n// put the UI component in the same file\r\nclass Count extends Component {\r\n  state = {\r\n    step: 1,\r\n  };\r\n\r\n  stateChange = (event) => {\r\n    const { value } = event.target;\r\n    this.setState({\r\n      step: value * 1,\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { step } = this.state;\r\n\r\n    // from the container\r\n    this.props.add(step);\r\n  };\r\n\r\n  sub = () => {\r\n    const { step } = this.state;\r\n\r\n    this.props.sub(step);\r\n  };\r\n\r\n  addIfOdd = () => {\r\n    const { step } = this.state;\r\n    const { count, add } = this.props;\r\n\r\n    if (count % 2 === 0) {\r\n      return;\r\n    }\r\n\r\n    add(step);\r\n  };\r\n\r\n  addAsync = () => {\r\n    const { step } = this.state;\r\n\r\n    // async action\r\n    this.props.asyncAdd(step, 1000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"box\">\r\n        <h2 className=\"count-show\">\r\n          SUM: {this.props.count} --- person number: {this.props.personNum}\r\n        </h2>\r\n        <select onChange={this.stateChange}>\r\n          <option select=\"1\">1</option>\r\n          <option select=\"2\">2</option>\r\n          <option select=\"3\">3</option>\r\n        </select>\r\n        &nbsp;\r\n        <button onClick={this.add}>+</button>&nbsp;\r\n        <button onClick={this.sub}>-</button>&nbsp;\r\n        <button onClick={this.addIfOdd}>+ odd</button>&nbsp;\r\n        <button onClick={this.addAsync}>+ async</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// concise version\r\nexport default connect(\r\n  (state) => ({\r\n    count: state.sum,\r\n    personNum: state.persons.length,\r\n  }),\r\n\r\n  {\r\n    add: incrementAction,\r\n    sub: decrementAction,\r\n    asyncAdd: incrementAsyncAction,\r\n  }\r\n)(Count);\r\n\r\n/**\r\n *\r\n * @param {*} state in redux\r\n * 1. return an obj\r\n * 2. key is the key of the props in UI component\r\n * 3. used to map the states to the props...\r\n */\r\n// function mapStateToProps(state) {\r\n//   return {\r\n//     count: state,\r\n//   };\r\n// }\r\n\r\n/**\r\n *\r\n * @param {*} dispatch the actions in redux\r\n * 1. return an obj (must store functions (actions))\r\n * 2. key is the name of the fucntions, value is the functions\r\n * 3. used to map the actions to the props...\r\n */\r\n// function mapDispatchToProps(dispatch) {\r\n//   return {\r\n//     add: (step) => dispatch(incrementAction(step)),\r\n//     sub: (step) => dispatch(decrementAction(step)),\r\n//     asyncAdd: (step, time) => dispatch(incrementAsyncAction(step, time)),\r\n//   };\r\n// }\r\n\r\n// connect the container with the UI component and the redux\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(CountUI);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { AddPerosonAction } from \"../../redux/actions/person\";\r\n\r\nimport { Person as PersonData, ReduxState } from \"../../redux/type\";\r\n\r\ntype PersonProps = {\r\n  persons: Array<PersonData>;\r\n  count: number;\r\n  add: (personObj: PersonData) => void;\r\n};\r\n\r\nclass Person extends Component<PersonProps> {\r\n  state = {\r\n    inputName: \"\",\r\n    inputAge: \"\",\r\n    id: 1,\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { inputName, inputAge, id } = this.state;\r\n\r\n    const personObj = { id: id + 1, name: inputName, age: inputAge };\r\n\r\n    this.props.add(personObj);\r\n\r\n    this.setState({\r\n      inputName: \"\",\r\n      inputAge: \"\",\r\n      id: id + 1,\r\n    });\r\n  };\r\n\r\n  handleNameInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      inputName: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleAgeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      inputAge: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"person-box\">\r\n        <h2>Person Cpmponent --- count: {this.props.count}</h2>\r\n        <input\r\n          onChange={this.handleNameInput}\r\n          type=\"text\"\r\n          placeholder=\"name?\"\r\n          value={this.state.inputName}\r\n        />\r\n        &nbsp;\r\n        <input\r\n          onChange={this.handleAgeInput}\r\n          type=\"text\"\r\n          placeholder=\"age?\"\r\n          value={this.state.inputAge}\r\n        />\r\n        &nbsp;\r\n        <button onClick={this.handleAdd}>Add a person</button>\r\n        <ul>\r\n          {this.props.persons.map((person) => {\r\n            return (\r\n              <li key={person.id}>\r\n                {person.name}---{person.age}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state: ReduxState) => ({\r\n    persons: state.persons,\r\n    count: state.sum,\r\n  }),\r\n  {\r\n    add: AddPerosonAction,\r\n  }\r\n)(Person);\r\n","import { ADD_PERSON } from \"../constant\";\r\nimport { Person } from \"../type\";\r\n\r\n\r\nexport const AddPerosonAction = (personObj: Person) => ({\r\n  type: ADD_PERSON,\r\n  data: personObj,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n// import Count from \"./component/Count\";\r\n\r\n// use the container\r\nimport Count from \"./component/Count\";\r\nimport Person from \"./component/Person\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Provider store={store}>\r\n          {/* connect the container with the redux */}\r\n          {/* <Count store={store} /> */}\r\n          {/* using Provider in index to give the store to all components */}\r\n          <Count />\r\n          <hr />\r\n          <Person />\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n// function FunctionInput() {\r\n//   const state = {\r\n//     name: \"leo\",\r\n//     age: 22,\r\n//   };\r\n\r\n//   const handleInputChanged = (el: React.ChangeEvent<HTMLInputElement>) => {\r\n//     console.log(el.target.value);\r\n//   };\r\n\r\n//   return <input type=\"text\" onChange={handleInputChanged} />;\r\n// }\r\n\r\nclass ClassInput extends Component {\r\n  state = {\r\n    name: \"leo\",\r\n    age: 22,\r\n  };\r\n\r\n  handleInputChanged = (el: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(el.target.value);\r\n  };\r\n\r\n  render() {\r\n    return <input type=\"text\" onChange={this.handleInputChanged} />;\r\n  }\r\n}\r\n\r\nexport default class RefDemo extends Component {\r\n  classInputRef = React.createRef<ClassInput>();\r\n  // cannot use ref to get function component instance\r\n  //   funcInputRef = React.createRef<FunctionInput>();\r\n\r\n  componentDidMount() {\r\n    console.log(this.classInputRef.current?.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Func: <FunctionInput ref={this.funcInputRef}/> */}\r\n        &nbsp; Class: <ClassInput ref={this.classInputRef} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.less\";\r\n\r\nexport default function Header(props: { demoPath: string }) {\r\n  const { demoPath } = props;\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <title>Mini Postland</title>\r\n      <div className=\"tap-box\">\r\n        <Link className=\"link-btn\" to={`${demoPath}/posts`}>\r\n          Posts\r\n        </Link>\r\n        <Link className=\"link-btn\" to={`${demoPath}/addPost`}>\r\n          Add Post\r\n        </Link>\r\n        <Link className=\"link-btn\" to={`${demoPath}/users`}>\r\n          Users\r\n        </Link>\r\n        <Link className=\"link-btn\" to={`${demoPath}/notifications`}>\r\n          Notifications\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// A tiny wrapper around fetch(), borrowed from\r\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\r\n\r\nexport async function client(endpoint, { body, ...customConfig } = {}) {\r\n  const headers = { \"Content-Type\": \"application/json\" };\r\n\r\n  const config = {\r\n    method: body ? \"POST\" : \"GET\",\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      ...customConfig.headers,\r\n    },\r\n  };\r\n\r\n  if (body) {\r\n    config.body = JSON.stringify(body);\r\n  }\r\n\r\n  let data;\r\n  try {\r\n    const response = await window.fetch(endpoint, config);\r\n    data = await response.json();\r\n    if (response.ok) {\r\n      // Return a result object similar to Axios\r\n      return {\r\n        status: response.status,\r\n        data,\r\n        headers: response.headers,\r\n        url: response.url,\r\n      };\r\n    }\r\n    throw new Error(response.statusText);\r\n  } catch (err) {\r\n    return Promise.reject(err.message ? err.message : data);\r\n  }\r\n}\r\n\r\nclient.get = function (endpoint, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, method: \"GET\" });\r\n};\r\n\r\nclient.post = function (endpoint, body, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, body });\r\n};\r\n","import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  EntityId,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../store\";\r\nimport { UserData, UserExtraField } from \"./user\";\r\nimport { client } from \"../../api/client\";\r\n\r\nconst userAdapter = createEntityAdapter<UserData>();\r\n\r\nconst initialState = userAdapter.getInitialState({\r\n  status: \"idle\",\r\n  error: null,\r\n} as UserExtraField);\r\n\r\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\r\n  const resp = await client.get(\"/fakeApi/users\");\r\n\r\n  return resp.data;\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state, _) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.status = \"complete\";\r\n        userAdapter.setAll(state, action.payload);\r\n      })\r\n      .addCase(fetchUsers.rejected, (state, _) => {\r\n        state.status = \"failed\";\r\n      });\r\n  },\r\n});\r\n\r\nconst { selectAll, selectById } = userAdapter.getSelectors(\r\n  (state: RootState) => state.users\r\n);\r\n\r\nexport const selectAllUsers = selectAll;\r\nexport const selectUserById = (userId: EntityId) => (state: RootState) =>\r\n  selectById(state, userId);\r\nexport const selectUserFetchStatus = (state: RootState) => state.users.status;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserById } from \"../../users/userSlice\";\r\n\r\nexport default function PostAuthor({ userId }: { userId: string }) {\r\n  const user = useSelector(selectUserById(userId));\r\n\r\n  return <span>by {user ? user.name : \"Unknown author\"}</span>;\r\n}\r\n","import React from \"react\";\r\nimport { parseISO, formatDistanceToNow } from \"date-fns\";\r\n\r\nexport default function TimeAge({ timestamp }: { timestamp: string }) {\r\n  let timeAgo = \"\";\r\n\r\n  if (timestamp) {\r\n    const date = parseISO(timestamp);\r\n    const timePeriod = formatDistanceToNow(date);\r\n    timeAgo = `${timePeriod} ago`;\r\n  }\r\n\r\n  return (\r\n    <span title={timestamp}>\r\n      &nbsp; <i>{timeAgo}</i>\r\n    </span>\r\n  );\r\n}\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport {\r\n  PostAddedField,\r\n  PostUpdatedPayload,\r\n  ReactionAddedPayload,\r\n  PostData,\r\n} from \"../posts/post\";\r\n\r\nexport const apiSlice = createApi({\r\n  // The cache reducer expects to be added at `state.api` (already default - this is optional)\r\n  reducerPath: \"api\",\r\n  // All of our requests will have URLs starting with '/fakeApi'\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"/fakeApi\" }),\r\n  // define all the tags\r\n  tagTypes: [\"Posts\"] as string[],\r\n  // The \"endpoints\" represent operations and requests for this server\r\n  endpoints: (builder) => ({\r\n    // The `getPosts` endpoint is a \"query\" operation that returns data\r\n    getPosts: builder.query<PostData[], void>({\r\n      // The URL for the request is '/fakeApi/posts'\r\n      query: () => \"/posts\",\r\n      // when the mutation includes one of the tags\r\n      // in the array, this data will be refetched\r\n      // providesTags: [\"Post\"],\r\n      // it can be a callback as well\r\n      providesTags: (queryRet = [], error, queryArg) => [\r\n        \"Posts\",\r\n        // specific to a certian post\r\n        ...queryRet.map(({ id }) => ({ type: \"Posts\", id })),\r\n      ],\r\n      // the cached time when no subscribers\r\n      // 60s by default\r\n      keepUnusedDataFor: 300, // 300s 5min\r\n    }),\r\n    getPost: builder.query<PostData, string>({\r\n      query: (postId) => `/posts/${postId}`,\r\n      providesTags: (queryRet, _, __) =>\r\n        queryRet ? [\"Posts\", { type: \"Posts\", id: queryRet.id }] : [\"Posts\"],\r\n    }),\r\n    addNewPost: builder.mutation<\r\n      unknown,\r\n      // the other fields will be handled in server-side\r\n      PostAddedField\r\n    >({\r\n      query: (newPost) => ({\r\n        url: \"/posts\",\r\n        method: \"POST\",\r\n        // Include the entire post object as the body of the request\r\n        body: newPost,\r\n      }),\r\n      // when mutating, the query containing the tags will be called\r\n      // but why can we just add to the cached list\r\n      // instead of refetching...\r\n      invalidatesTags: [\"Posts\"],\r\n    }),\r\n    editPost: builder.mutation<unknown, PostUpdatedPayload>({\r\n      query: (post) => ({\r\n        url: `/posts/${post.id}`,\r\n        method: \"PATCH\",\r\n        body: post,\r\n      }),\r\n      invalidatesTags: (_, __, arg) => [{ type: \"Posts\", id: arg.id }],\r\n    }),\r\n    addReaction: builder.mutation<unknown, ReactionAddedPayload>({\r\n      query: ({ id, reactName }) => ({\r\n        url: `/posts/${id}/reactions`,\r\n        method: \"POST\",\r\n        body: { reactName },\r\n      }),\r\n      // for optimistic updates\r\n      async onQueryStarted({ id, reactName }, { dispatch, queryFulfilled }) {\r\n        // `updateQueryData` requires the endpoint name and cache key arguments,\r\n        // so it knows which piece of cache state to update\r\n        const patchResult = dispatch(\r\n          apiSlice.util.updateQueryData(\"getPosts\", undefined, (draft) => {\r\n            // The `draft` is Immer-wrapped and can be \"mutated\" like in createSlice\r\n            const post = draft.find((post) => post.id === id);\r\n            if (post) {\r\n              post.reactions[reactName]++;\r\n            }\r\n          })\r\n        );\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n        }\r\n      },\r\n      invalidatesTags: (_, __, arg) => [\"Posts\", { type: \"Posts\", id: arg.id }],\r\n    }),\r\n  }),\r\n});\r\n\r\n// Export the auto-generated hook for the `getPosts` query endpoint\r\n// use + <endpoints name (capitalized)> + Query|Mutation\r\nexport const {\r\n  useGetPostsQuery,\r\n  useGetPostQuery,\r\n  useAddNewPostMutation,\r\n  useEditPostMutation,\r\n  useAddReactionMutation,\r\n} = apiSlice;\r\n","import React from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { reactionAdded } from \"../postSlice\";\r\nimport { PostData, ReactionNames } from \"../post\";\r\nimport { useAddReactionMutation } from \"../../api/apiSlice\";\r\nimport \"./PostReactBtn.less\";\r\n\r\nconst reactionEmoji = {\r\n  thumbsUp: \"👍\",\r\n  hooray: \"🎉\",\r\n  heart: \"❤️\",\r\n  rocket: \"🚀\",\r\n  eyes: \"👀\",\r\n};\r\n\r\nexport default function PostReactBtn({ post }: { post: PostData }) {\r\n  // const dispatch = useDispatch();\r\n  const [updataReaction] = useAddReactionMutation();\r\n\r\n  return (\r\n    <div className=\"react-btn-container\">\r\n      {Object.entries(reactionEmoji).map(([name, emoji]) => (\r\n        <button\r\n          className=\"btn emoji-btn\"\r\n          key={name}\r\n          onClick={() =>\r\n            // dispatch(\r\n            //   reactionAdded({ id: post.id, reactName: name as ReactionNames })\r\n            // )\r\n\r\n            updataReaction({ id: post.id, reactName: name as ReactionNames })\r\n          }\r\n        >\r\n          {emoji}{\" \"}\r\n          <span style={{ fontWeight: \"bold\" }}>\r\n            {post.reactions[name as ReactionNames]}\r\n          </span>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { useSelector } from \"react-redux\";\r\nimport PostAuthor from \"../PostAuthor/PostAuthor\";\r\nimport TimeAge from \"@/demos/08-redux-toolkit/components/TimeAgo/TimeAge\";\r\nimport PostReactBtn from \"../PostReactBtn/PostReactBtn\";\r\nimport { PostData } from \"../post\";\r\n// import { selectPostById } from \"../postSlice\";\r\nimport \"./PostItem.less\";\r\n// import { EntityId } from \"@reduxjs/toolkit\";\r\n\r\nexport default function PostItem({ post }: { post: PostData }) {\r\n  // now using the normalized data to find the item\r\n  // instead of array\r\n  // const post = useSelector(selectPostById(postId)) as PostData;\r\n  const detailPath = `/reduxToolkit/posts/${post.id}`;\r\n\r\n  return (\r\n    <article className=\"post-excerpt\">\r\n      <h2>{post.title}</h2>\r\n      <PostAuthor userId={post.user} />\r\n      <TimeAge timestamp={post.date} />\r\n      <hr style={{ margin: \"5px 0\" }} />\r\n      <p className=\"post-content\">{post.content.slice(0, 100)}</p>\r\n      <PostReactBtn post={post} />\r\n      <Link to={detailPath} className=\"view-btn btn\">\r\n        View\r\n      </Link>\r\n    </article>\r\n  );\r\n}\r\n\r\n// just like pureComponent for class component\r\n// export default React.memo(PostItem);\r\n","import React from \"react\";\r\nimport \"./Spinner.less\";\r\n\r\nexport default function Spinner({ text = \"\", size = \"5em\" }) {\r\n  const header = text ? <h4>{text}</h4> : null;\r\n  return (\r\n    <div className=\"spinner\">\r\n      {header}\r\n      <div className=\"loader\" style={{ height: size, width: size }} />\r\n    </div>\r\n  );\r\n}\r\n","import { useMemo, useEffect, ReactNode } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PostItem from \"../PostItem/PostItem\";\r\n// import { selectPostIds, fetchPosts } from \"../postSlice\";\r\nimport { RootState } from \"@/demos/08-redux-toolkit/store\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\nimport { fetchUsers } from \"../../users/userSlice\";\r\nimport { useGetPostsQuery } from \"../../api/apiSlice\";\r\nimport \"./PostList.less\";\r\n\r\nexport default function PostList() {\r\n  const dispatch = useDispatch();\r\n\r\n  // const postIds = useSelector(selectPostIds);\r\n  // const postFetchStatus = useSelector((state: RootState) => state.posts.status);\r\n  // const postFetchError = useSelector((state: RootState) => state.posts.error);\r\n  const userFetchStatus = useSelector((state: RootState) => state.users.status);\r\n\r\n  useEffect(() => {\r\n    // if (postFetchStatus === \"idle\") {\r\n    //   dispatch(fetchPosts());\r\n    // }\r\n\r\n    if (userFetchStatus === \"idle\") {\r\n      dispatch(fetchUsers());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // replace the postSlice.ts\r\n  // this is not stored in the Redux store anymore\r\n  // the data will be cached once query\r\n  // actually it is the endpoint query func being cached with the same arg\r\n  // unless the arg changes or using refetch func, it wont re-fetch\r\n  const {\r\n    data: posts = [],\r\n    isLoading, // only once for first time\r\n    // isFetching,\r\n    isSuccess,\r\n    isError,\r\n    // error,\r\n    // refetch\r\n  } = useGetPostsQuery();\r\n\r\n  // to avoid sorting every time re-render\r\n  // unless posts has been changed\r\n  const sortedPosts = useMemo(() => {\r\n    const sortedPosts = posts.slice();\r\n    // Sort posts in descending chronological order\r\n    sortedPosts.sort((a, b) => b.date.localeCompare(a.date));\r\n    return sortedPosts;\r\n  }, [posts]);\r\n\r\n  let renderedPosts: ReactNode;\r\n\r\n  if (isLoading) {\r\n    renderedPosts = <Spinner text=\"Loading\" />;\r\n  } else if (isSuccess) {\r\n    renderedPosts = sortedPosts.map((post) => (\r\n      <PostItem post={post} key={post.id} />\r\n    ));\r\n  } else if (isError) {\r\n    renderedPosts = <div>{`error, cannot fetch the list so far`}</div>;\r\n  }\r\n\r\n  // if (postFetchStatus === \"loading\") {\r\n  //   renderedPosts = <Spinner text=\"Loading\" />;\r\n  // } else if (postFetchStatus === \"complete\") {\r\n  //   renderedPosts = postIds.map((postId) => (\r\n  //     <PostItem postId={postId} key={postId} />\r\n  //   ));\r\n  // } else if (postFetchStatus === \"failed\") {\r\n  //   renderedPosts = <div>{postFetchError}</div>;\r\n  // }\r\n\r\n  return <div className=\"post-list-container\">{renderedPosts}</div>;\r\n}\r\n","import { MouseEvent, ChangeEvent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\n// import { addNewPost } from \"../postSlice\";\r\nimport {\r\n  selectAllUsers,\r\n  selectUserFetchStatus,\r\n  fetchUsers,\r\n} from \"../../users/userSlice\";\r\nimport { useAddNewPostMutation } from \"../../api/apiSlice\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\n\r\nimport \"./AddPostForm.less\";\r\n\r\nfunction AddPostForm(props: RouteComponentProps) {\r\n  const users = useSelector(selectAllUsers);\r\n  const userFetchStatus = useSelector(selectUserFetchStatus);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (userFetchStatus === \"idle\") {\r\n    dispatch(fetchUsers());\r\n  }\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const [addNewPost, { isLoading }] = useAddNewPostMutation();\r\n\r\n  const onTitleChanged = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setTitle(e.target.value);\r\n  const onContentChanged = (e: ChangeEvent<HTMLTextAreaElement>) =>\r\n    setContent(e.target.value);\r\n  const onUserSelected = (e: ChangeEvent<HTMLSelectElement>) =>\r\n    setUserId(e.target.value);\r\n\r\n  const onSaveBtnClick = async (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (title.trim() === \"\") return alert(\"Please enter the title\");\r\n\r\n    if (content.trim() === \"\") return alert(\"Please give some content\");\r\n\r\n    if (userId.trim() === \"\") return alert(\"Please select the user\");\r\n\r\n    try {\r\n      // setAddStatus(\"pending\");\r\n      // await dispatch(addNewPost({ title, content, user: userId }));\r\n      await addNewPost({ title, content, user: userId }).unwrap();\r\n\r\n      // alert(\"Added!\");\r\n      // jump to the /posts\r\n      // and the addStatus will be idle next time rendering\r\n      props.history.push(\"/reduxToolkit/posts\");\r\n    } catch (err) {\r\n      console.error(\"Failed to save the post: \", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"add-post-form-container\">\r\n      <form className=\"form\">\r\n        <label>Post Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postTitle\"\r\n          name=\"postTitle\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n          placeholder={`What's on your mind?`}\r\n        />\r\n        <label>Author:</label>\r\n        <select name=\"user\" id=\"user\" onChange={onUserSelected} value={userId}>\r\n          <option value=\"\" style={{ display: \"none\" }}></option>\r\n          {users.map((user) => (\r\n            <option value={user.id} key={user.id}>\r\n              {user.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Post Content:</label>\r\n        <textarea\r\n          className=\"scroll-bar\"\r\n          id=\"postContent\"\r\n          name=\"postContent\"\r\n          value={content}\r\n          onChange={onContentChanged}\r\n        />\r\n        <div style={{ display: \"flex\" }}>\r\n          <button className=\"btn\" onClick={onSaveBtnClick} disabled={isLoading}>\r\n            Save\r\n          </button>\r\n          {isLoading ? (\r\n            <span style={{ display: \"inline-block\" }}>\r\n              <Spinner size={\"2em\"} />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default withRouter(AddPostForm);\r\n","import { MouseEvent, ChangeEvent, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { postUpdated } from \"../postSlice\";\r\n// import { selectPostById } from \"../postSlice\";\r\nimport { useEditPostMutation, useGetPostQuery } from \"../../api/apiSlice\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\nimport \"./EditPostForm.less\";\r\n\r\nexport default function EditPostForm(\r\n  props: RouteComponentProps<{ postId: string }>\r\n) {\r\n  const { postId } = props.match.params;\r\n\r\n  // const post = useSelector(selectPostById(postId));\r\n\r\n  const { data: post } = useGetPostQuery(postId);\r\n  const [updatePost, { isLoading }] = useEditPostMutation();\r\n\r\n  const [title, setTitle] = useState(post ? post.title : \"\");\r\n  const [content, setContent] = useState(post ? post.content : \"\");\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  const onTitleChanged = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setTitle(e.target.value);\r\n  const onContentChanged = (e: ChangeEvent<HTMLTextAreaElement>) =>\r\n    setContent(e.target.value);\r\n\r\n  const onSaveBtnClick = async (e: MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (title.trim() === \"\") return alert(\"Please enter the title\");\r\n\r\n    if (content.trim() === \"\") return alert(\"Please give some content\");\r\n\r\n    // dispatch(postUpdated(postId, title, content));\r\n    await updatePost({ id: postId, title, content });\r\n\r\n    alert(\"Updated!\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"edit-post-form-container\">\r\n      <form className=\"form\">\r\n        <label htmlFor=\"\">Post Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postTitle\"\r\n          name=\"postTitle\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n          placeholder={`What's on your mind?`}\r\n        />\r\n        <label htmlFor=\"\">Post Content:</label>\r\n        <textarea\r\n          className=\"scroll-bar\"\r\n          id=\"postContent\"\r\n          name=\"postContent\"\r\n          value={content}\r\n          onChange={onContentChanged}\r\n        />\r\n        <div style={{ display: \"flex\" }}>\r\n          <button className=\"btn\" onClick={onSaveBtnClick} disabled={isLoading}>\r\n            Edit Post\r\n          </button>\r\n          {isLoading ? (\r\n            <span style={{ display: \"inline-block\" }}>\r\n              <Spinner size={\"2em\"} />\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport PostAuthor from \"../PostAuthor/PostAuthor\";\r\nimport TimeAge from \"@/demos/08-redux-toolkit/components/TimeAgo/TimeAge\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\nimport PostReactBtn from \"../PostReactBtn/PostReactBtn\";\r\n// import { selectPostById } from \"../postSlice\";\r\nimport { useGetPostQuery } from \"../../api/apiSlice\";\r\nimport \"./PostDetail.less\";\r\n\r\nexport default function PostDetail(\r\n  props: RouteComponentProps<{ postId: string }>\r\n) {\r\n  const { postId } = props.match.params;\r\n\r\n  // const post = useSelector(selectPostById(postId));\r\n\r\n  // you can use the same query hook multiple times,\r\n  // pass it different query parameters,\r\n  // and each result will be cached separately in the Redux store\r\n  const {\r\n    data: post,\r\n    isFetching,\r\n    isSuccess,\r\n    isError,\r\n    // error,\r\n  } = useGetPostQuery(postId);\r\n\r\n  let renderedDetail;\r\n  if (isFetching) {\r\n    renderedDetail = <Spinner />;\r\n  } else if (isSuccess) {\r\n    if (!post) {\r\n      return <h2>Page not found...</h2>;\r\n    }\r\n\r\n    renderedDetail = (\r\n      <article className=\"post-detail-container\">\r\n        <h2>{post.title}</h2>\r\n        <PostAuthor userId={post.user} />\r\n        <TimeAge timestamp={post.date} />\r\n        <hr style={{ margin: \"5px 0\" }} />\r\n        <main>{post.content}</main>\r\n        <PostReactBtn post={post} />\r\n        <Link to={`/reduxToolkit/edit/${post.id}`} className=\"btn edit-btn\">\r\n          Edit\r\n        </Link>\r\n      </article>\r\n    );\r\n  } \r\n  else if (isError) {\r\n    return <div>{`error, cannot find this id`}</div>;\r\n  }\r\n\r\n  return <React.Fragment>{renderedDetail}</React.Fragment>;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectAllUsers,\r\n  selectUserFetchStatus,\r\n  fetchUsers,\r\n} from \"../userSlice\";\r\n// import { selectPostFetchStatus, fetchPosts } from \"../../posts/postSlice\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\nimport \"./UserList.less\";\r\n\r\nexport default function UserList() {\r\n  const users = useSelector(selectAllUsers);\r\n  const userFetchStatus = useSelector(selectUserFetchStatus);\r\n  // const postFetchStatus = useSelector(selectPostFetchStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  if (userFetchStatus === \"idle\") {\r\n    dispatch(fetchUsers());\r\n  }\r\n\r\n  // if (postFetchStatus === \"idle\") {\r\n  //   dispatch(fetchPosts());\r\n  // }\r\n\r\n  const renderedUsers = users.map((user) => (\r\n    <li key={user.id}>\r\n      <Link to={`/reduxToolkit/users/${user.id}`} className=\"link\">\r\n        {user.name}\r\n      </Link>\r\n    </li>\r\n  ));\r\n\r\n  let finalRender;\r\n\r\n  if (userFetchStatus === \"complete\") {\r\n    finalRender = renderedUsers;\r\n  } else if (userFetchStatus === \"loading\" || userFetchStatus === \"idle\") {\r\n    finalRender = <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-list-container\">\r\n      <ul>{finalRender}</ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { selectPostByUser } from \"../../posts/postSlice\";\r\nimport PostItem from \"../../posts/PostItem/PostItem\";\r\nimport { useGetPostsQuery } from \"../../api/apiSlice\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\n\r\nexport default function UserPage(\r\n  props: RouteComponentProps<{ userId: string }>\r\n) {\r\n  const { userId } = props.match.params;\r\n\r\n  // const posts = useSelector(selectPostByUser(userId));\r\n  const {\r\n    data: posts = [],\r\n    isLoading,\r\n    // isFetching,\r\n    isSuccess,\r\n    isError,\r\n  } = useGetPostsQuery();\r\n\r\n  const filteredPosts = useMemo(() => {\r\n    console.log(\"call\");\r\n    return posts.filter((post) => post.user === userId);\r\n  }, [posts, userId]);\r\n\r\n  let renderedPosts;\r\n  if (isLoading) {\r\n    renderedPosts = <Spinner />;\r\n  } else if (isSuccess) {\r\n    if (filteredPosts.length === 0) {\r\n      return <div>{`This user has noting here`}</div>;\r\n    }\r\n    renderedPosts = filteredPosts.map((post) => (\r\n      <PostItem key={post.id} post={post} />\r\n    ));\r\n  } else if (isError) {\r\n    return <div>{`can not fetch`}</div>;\r\n  }\r\n\r\n  return <div>{renderedPosts}</div>;\r\n}\r\n","import {\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../store\";\r\nimport { client } from \"../../api/client\";\r\nimport { NotificationData, NotificationExtraField } from \"./notifications\";\r\n\r\nconst notificationAdapter = createEntityAdapter<NotificationData>({\r\n  sortComparer: (a, b) => b.date.localeCompare(a.date),\r\n});\r\n\r\nconst initialState = notificationAdapter.getInitialState({\r\n  status: \"idle\",\r\n  error: null,\r\n} as NotificationExtraField);\r\n\r\nexport const fetchNotifications = createAsyncThunk(\r\n  \"notifications/fetchNotifications\",\r\n  async (_, { getState }) => {\r\n    const allNotifications = selectAllNotifications(getState() as RootState);\r\n    const latestNotification = allNotifications[0];\r\n    const latestTimestamp = latestNotification ? latestNotification.date : \"\";\r\n    const response = await client.get(\r\n      `/fakeApi/notifications?since=${latestTimestamp}`\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst slice = createSlice({\r\n  name: \"notifications\",\r\n  initialState,\r\n  reducers: {\r\n    markAsRead(state) {\r\n      Object.values(state.entities).forEach((notification) => {\r\n        notification!.isRead = true;\r\n      });\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchNotifications.pending, (state, _) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(\r\n        fetchNotifications.fulfilled,\r\n        (state, action: PayloadAction<NotificationData[]>) => {\r\n          state.status = \"complete\";\r\n          // newly fetched mark as no read\r\n          action.payload.forEach((notification) => {\r\n            notification.isRead = false;\r\n          });\r\n\r\n          notificationAdapter.upsertMany(state, action.payload);\r\n        }\r\n      )\r\n      .addCase(fetchNotifications.rejected, (state, _) => {\r\n        state.status = \"failed\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { markAsRead } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const { selectAll: selectAllNotifications } =\r\n  notificationAdapter.getSelectors((state: RootState) => state.notifications);\r\nexport const selectNotificationFetchStatus = (state: RootState) =>\r\n  state.notifications.status;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectAllUsers } from \"../../users/userSlice\";\r\nimport {\r\n  selectAllNotifications,\r\n  selectNotificationFetchStatus,\r\n  fetchNotifications,\r\n  markAsRead,\r\n} from \"../notificationSlice\";\r\nimport { formatDistanceToNow, parseISO } from \"date-fns\";\r\nimport \"./NotificationList.less\";\r\nimport Spinner from \"@/component/Spinner/Spinner\";\r\n\r\nexport default function NotificationList() {\r\n  const notifications = useSelector(selectAllNotifications);\r\n  const notificationFetchStatus = useSelector(selectNotificationFetchStatus);\r\n  const users = useSelector(selectAllUsers);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (notificationFetchStatus === \"idle\") {\r\n      dispatch(fetchNotifications());\r\n    }\r\n\r\n    // mark as been read\r\n    return () => {\r\n      dispatch(markAsRead());\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const renderedNotifications = notifications.map((notification) => {\r\n    const date = parseISO(notification.date);\r\n    const timeAgo = formatDistanceToNow(date);\r\n    const user = users.find((user) => user.id === notification.user) || {\r\n      name: \"Unknown User\",\r\n    };\r\n    return (\r\n      <li\r\n        key={notification.id}\r\n        style={{\r\n          backgroundColor: notification.isRead\r\n            ? \"rgb(230, 224, 224)\"\r\n            : \"#b56ef8\",\r\n        }}\r\n      >\r\n        <div>\r\n          <b>{user.name}</b> {notification.message}\r\n        </div>\r\n        <div title={notification.date}>\r\n          <i>{timeAgo} ago</i>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const emptyReminder = (\r\n    <div style={{ textAlign: \"center\", margin: \"20px 0\", fontWeight: \"bold\" }}>\r\n      It is empty now~\r\n    </div>\r\n  );\r\n\r\n  const fetchNewNotifications = async () => {\r\n    // before fetch more, mark the existed as read\r\n    dispatch(markAsRead());\r\n    dispatch(fetchNotifications());\r\n  };\r\n\r\n  let finalRender;\r\n\r\n  if (notificationFetchStatus === \"complete\") {\r\n    if (notifications.length === 0) {\r\n      finalRender = emptyReminder;\r\n    } else {\r\n      finalRender = renderedNotifications;\r\n    }\r\n  } else if (\r\n    notificationFetchStatus === \"loading\" ||\r\n    notificationFetchStatus === \"idle\"\r\n  ) {\r\n    finalRender = <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification-list-container\">\r\n      <button className=\"btn refresh-btn\" onClick={fetchNewNotifications}>\r\n        Refresh Notifications\r\n      </button>\r\n      {finalRender}\r\n    </div>\r\n  );\r\n}\r\n","import { rest, setupWorker } from \"msw\";\r\nimport { factory, oneOf, manyOf, primaryKey } from \"@mswjs/data\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport faker from \"faker\";\r\nimport seedrandom from \"seedrandom\";\r\nimport { Server as MockSocketServer } from \"mock-socket\";\r\n// import { setRandom } from \"txtgen\";\r\n\r\nimport { parseISO } from \"date-fns\";\r\n\r\nconst NUM_USERS = 3;\r\nconst POSTS_PER_USER = 3;\r\nconst RECENT_NOTIFICATIONS_DAYS = 7;\r\n\r\n// Add an extra delay to all endpoints, so loading spinners show up.\r\nconst ARTIFICIAL_DELAY_MS = 1000;\r\n\r\n/* RNG setup */\r\n\r\n// Set up a seeded random number generator, so that we get\r\n// a consistent set of users / entries each time the page loads.\r\n// This can be reset by deleting this localStorage value,\r\n// or turned off by setting `useSeededRNG` to false.\r\nlet useSeededRNG = true;\r\n\r\nlet rng = seedrandom();\r\n\r\nif (useSeededRNG) {\r\n  let randomSeedString = localStorage.getItem(\"randomTimestampSeed\");\r\n  let seedDate;\r\n\r\n  if (randomSeedString) {\r\n    seedDate = new Date(randomSeedString);\r\n  } else {\r\n    seedDate = new Date();\r\n    randomSeedString = seedDate.toISOString();\r\n    localStorage.setItem(\"randomTimestampSeed\", randomSeedString);\r\n  }\r\n\r\n  rng = seedrandom(randomSeedString);\r\n  // setRandom(rng);\r\n  faker.seed(seedDate.getTime());\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(rng() * (max - min + 1)) + min;\r\n}\r\n\r\nconst randomFromArray = (array) => {\r\n  const index = getRandomInt(0, array.length - 1);\r\n  return array[index];\r\n};\r\n\r\n/* MSW Data Model Setup */\r\n\r\nexport const db = factory({\r\n  user: {\r\n    id: primaryKey(nanoid),\r\n    firstName: String,\r\n    lastName: String,\r\n    name: String,\r\n    username: String,\r\n    posts: manyOf(\"post\"),\r\n  },\r\n  post: {\r\n    id: primaryKey(nanoid),\r\n    title: String,\r\n    date: String,\r\n    content: String,\r\n    reactions: oneOf(\"reaction\"),\r\n    comments: manyOf(\"comment\"),\r\n    user: oneOf(\"user\"),\r\n  },\r\n  comment: {\r\n    id: primaryKey(String),\r\n    date: String,\r\n    text: String,\r\n    post: oneOf(\"post\"),\r\n  },\r\n  reaction: {\r\n    id: primaryKey(nanoid),\r\n    thumbsUp: Number,\r\n    hooray: Number,\r\n    heart: Number,\r\n    rocket: Number,\r\n    eyes: Number,\r\n    post: oneOf(\"post\"),\r\n  },\r\n});\r\n\r\nconst createUserData = () => {\r\n  const firstName = faker.name.firstName();\r\n  const lastName = faker.name.lastName();\r\n\r\n  return {\r\n    firstName,\r\n    lastName,\r\n    name: `${firstName} ${lastName}`,\r\n    username: faker.internet.userName(),\r\n  };\r\n};\r\n\r\nconst createPostData = (user) => {\r\n  return {\r\n    title: faker.lorem.words(),\r\n    date: faker.date.recent(RECENT_NOTIFICATIONS_DAYS).toISOString(),\r\n    user,\r\n    content: faker.lorem.paragraphs(),\r\n    reactions: db.reaction.create(),\r\n  };\r\n};\r\n\r\n// Create an initial set of users and posts\r\nfor (let i = 0; i < NUM_USERS; i++) {\r\n  const author = db.user.create(createUserData());\r\n\r\n  for (let j = 0; j < POSTS_PER_USER; j++) {\r\n    const newPost = createPostData(author);\r\n    db.post.create(newPost);\r\n  }\r\n}\r\n\r\nconst serializePost = (post) => ({\r\n  ...post,\r\n  user: post.user.id,\r\n});\r\n\r\n/* MSW REST API Handlers */\r\n\r\nexport const handlers = [\r\n  rest.get(\"/fakeApi/posts\", function (req, res, ctx) {\r\n    const posts = db.post.getAll().map(serializePost);\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(posts));\r\n  }),\r\n  rest.post(\"/fakeApi/posts\", function (req, res, ctx) {\r\n    const data = req.body;\r\n\r\n    if (data.content === \"error\") {\r\n      return res(\r\n        ctx.delay(ARTIFICIAL_DELAY_MS),\r\n        ctx.status(500),\r\n        ctx.json(\"Server error saving this post!\")\r\n      );\r\n    }\r\n\r\n    data.date = new Date().toISOString();\r\n\r\n    const user = db.user.findFirst({ where: { id: { equals: data.user } } });\r\n    data.user = user;\r\n    data.reactions = db.reaction.create();\r\n\r\n    const post = db.post.create(data);\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(serializePost(post)));\r\n  }),\r\n  rest.get(\"/fakeApi/posts/:postId\", function (req, res, ctx) {\r\n    const post = db.post.findFirst({\r\n      where: { id: { equals: req.params.postId } },\r\n    });\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(serializePost(post)));\r\n  }),\r\n  rest.patch(\"/fakeApi/posts/:postId\", (req, res, ctx) => {\r\n    const { id, ...data } = req.body;\r\n    const updatedPost = db.post.update({\r\n      where: { id: { equals: req.params.postId } },\r\n      data,\r\n    });\r\n    return res(\r\n      ctx.delay(ARTIFICIAL_DELAY_MS),\r\n      ctx.json(serializePost(updatedPost))\r\n    );\r\n  }),\r\n\r\n  rest.get(\"/fakeApi/posts/:postId/comments\", (req, res, ctx) => {\r\n    const post = db.post.findFirst({\r\n      where: { id: { equals: req.params.postId } },\r\n    });\r\n    return res(\r\n      ctx.delay(ARTIFICIAL_DELAY_MS),\r\n      ctx.json({ comments: post.comments })\r\n    );\r\n  }),\r\n\r\n  rest.post(\"/fakeApi/posts/:postId/reactions\", (req, res, ctx) => {\r\n    const postId = req.params.postId;\r\n    const reaction = req.body.reactName;\r\n    \r\n    const post = db.post.findFirst({\r\n      where: { id: { equals: postId } },\r\n    });\r\n\r\n    const updatedPost = db.post.update({\r\n      where: { id: { equals: postId } },\r\n      data: {\r\n        reactions: {\r\n          ...post.reactions,\r\n          [reaction]: (post.reactions[reaction] += 1),\r\n        },\r\n      },\r\n    });\r\n\r\n    return res(\r\n      ctx.delay(ARTIFICIAL_DELAY_MS),\r\n      ctx.json(serializePost(updatedPost))\r\n    );\r\n  }),\r\n  rest.get(\"/fakeApi/notifications\", (req, res, ctx) => {\r\n    const numNotifications = getRandomInt(1, 5);\r\n\r\n    let notifications = generateRandomNotifications(\r\n      undefined,\r\n      numNotifications,\r\n      db\r\n    );\r\n\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(notifications));\r\n  }),\r\n  rest.get(\"/fakeApi/users\", (req, res, ctx) => {\r\n    return res(ctx.delay(ARTIFICIAL_DELAY_MS), ctx.json(db.user.getAll()));\r\n  }),\r\n];\r\n\r\nexport const worker = setupWorker(...handlers);\r\n// worker.printHandlers() // Optional: nice for debugging to see all available route handlers that will be intercepted\r\n\r\n/* Mock Websocket Setup */\r\n\r\nconst socketServer = new MockSocketServer(\"ws://localhost\");\r\n\r\nlet currentSocket;\r\n\r\nconst sendMessage = (socket, obj) => {\r\n  socket.send(JSON.stringify(obj));\r\n};\r\n\r\n// Allow our UI to fake the server pushing out some notifications over the websocket,\r\n// as if other users were interacting with the system.\r\nconst sendRandomNotifications = (socket, since) => {\r\n  const numNotifications = getRandomInt(1, 5);\r\n\r\n  const notifications = generateRandomNotifications(\r\n    since,\r\n    numNotifications,\r\n    db\r\n  );\r\n\r\n  sendMessage(socket, { type: \"notifications\", payload: notifications });\r\n};\r\n\r\nexport const forceGenerateNotifications = (since) => {\r\n  sendRandomNotifications(currentSocket, since);\r\n};\r\n\r\nsocketServer.on(\"connection\", (socket) => {\r\n  currentSocket = socket;\r\n\r\n  socket.on(\"message\", (data) => {\r\n    const message = JSON.parse(data);\r\n\r\n    switch (message.type) {\r\n      case \"notifications\": {\r\n        const since = message.payload;\r\n        sendRandomNotifications(socket, since);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n});\r\n\r\n/* Random Notifications Generation */\r\n\r\nconst notificationTemplates = [\r\n  \"poked you\",\r\n  \"says hi!\",\r\n  `is glad we're friends`,\r\n  \"sent you a gift\",\r\n];\r\n\r\nfunction generateRandomNotifications(since, numNotifications, db) {\r\n  const now = new Date();\r\n  let pastDate;\r\n\r\n  if (since) {\r\n    pastDate = parseISO(since);\r\n  } else {\r\n    pastDate = new Date(now.valueOf());\r\n    pastDate.setMinutes(pastDate.getMinutes() - 15);\r\n  }\r\n\r\n  // Create N random notifications. We won't bother saving these\r\n  // in the DB - just generate a new batch and return them.\r\n  const notifications = [...Array(numNotifications)].map(() => {\r\n    const user = randomFromArray(db.user.getAll());\r\n    const template = randomFromArray(notificationTemplates);\r\n    return {\r\n      id: nanoid(),\r\n      date: faker.date.between(pastDate, now).toISOString(),\r\n      message: template,\r\n      user: user.id,\r\n    };\r\n  });\r\n\r\n  return notifications;\r\n}\r\n","import {\r\n  createSlice,\r\n  nanoid,\r\n  createAsyncThunk,\r\n  PayloadAction,\r\n  createSelector,\r\n  createEntityAdapter,\r\n  EntityId,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  PostData,\r\n  PostExtraField,\r\n  PostAddedPayload,\r\n  PostUpdatedPayload,\r\n  ReactionAddedPayload,\r\n  PostAddedField,\r\n} from \"./post\";\r\nimport { RootState } from \"../../store\";\r\nimport { client } from \"../../api/client\";\r\n\r\n// instead of using array, now using Map kind of method to store the data\r\n// so that we can get the item by id without iterating the entire array\r\nconst postAdapter = createEntityAdapter<PostData>({\r\n  // Sort posts in reverse chronological order by datetime string\r\n  sortComparer: (a, b) => b.date.localeCompare(a.date),\r\n});\r\n\r\n// {status: 'idle', error: null} is the extra field plus entities field\r\n// The type of the state is inferred here\r\nconst initialState = postAdapter.getInitialState({\r\n  status: \"idle\",\r\n  error: null,\r\n} as PostExtraField);\r\n\r\nexport const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\r\n  const resp = await client.get(\"/fakeApi/posts\");\r\n\r\n  return resp.data;\r\n});\r\n\r\nexport const addNewPost = createAsyncThunk(\r\n  \"posts/addNewPost\",\r\n  async ({ title, content, user }: PostAddedField) => {\r\n    const newPost = {\r\n      id: nanoid(),\r\n      title,\r\n      content,\r\n      user,\r\n      date: new Date().toISOString(),\r\n      reactions: {\r\n        thumbsUp: 0,\r\n        hooray: 0,\r\n        heart: 0,\r\n        rocket: 0,\r\n        eyes: 0,\r\n      },\r\n    };\r\n\r\n    const resp = await client.post(\"/fakeApi/posts\", newPost);\r\n\r\n    // The response includes the complete post object, including unique ID\r\n    return resp.data;\r\n  }\r\n);\r\n\r\nconst postSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState,\r\n  reducers: {\r\n    // sync added, addNewPost is aync for AJAX\r\n    postAdded: {\r\n      reducer(state, action: PayloadAction<PostAddedPayload>) {\r\n        state.entities[action.payload.id] = action.payload;\r\n      },\r\n\r\n      // this callback help us create the payload object\r\n      // so that we dont need do this every time in components\r\n      prepare(title: string, content: string, userId: string) {\r\n        return {\r\n          payload: {\r\n            id: nanoid(),\r\n            title,\r\n            content,\r\n            user: userId,\r\n            date: new Date().toISOString(),\r\n            reactions: {\r\n              thumbsUp: 0,\r\n              hooray: 0,\r\n              heart: 0,\r\n              rocket: 0,\r\n              eyes: 0,\r\n            },\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    postUpdated: {\r\n      reducer(state, action: PayloadAction<PostUpdatedPayload>) {\r\n        const { id, title, content } = action.payload;\r\n\r\n        const prevPost = state.entities[id];\r\n        if (prevPost) {\r\n          prevPost.title = title;\r\n          prevPost.content = content;\r\n        }\r\n      },\r\n\r\n      prepare(id: string, title: string, content: string) {\r\n        return {\r\n          payload: {\r\n            id,\r\n            title,\r\n            content,\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    reactionAdded(state, action: PayloadAction<ReactionAddedPayload>) {\r\n      const { id, reactName } = action.payload;\r\n\r\n      const prevPost = state.entities[id];\r\n      if (prevPost) {\r\n        prevPost.reactions[reactName]++;\r\n      }\r\n    },\r\n  },\r\n\r\n  // for async reducers\r\n  extraReducers(builder) {\r\n    // for fetch posts\r\n    builder\r\n      .addCase(fetchPosts.pending, (state, _) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, action) => {\r\n        state.status = \"complete\";\r\n        // Add any fetched posts to the array\r\n        // if there's any items in action.payload that already existing in our state,\r\n        // the upsertMany function will merge them together based on matching IDs\r\n        postAdapter.upsertMany(state, action.payload);\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      });\r\n\r\n    // for save post\r\n    // Use the `addOne` reducer for the fulfilled case\r\n    builder.addCase(addNewPost.fulfilled, postAdapter.addOne);\r\n  },\r\n});\r\n\r\nexport const { postAdded, postUpdated, reactionAdded } = postSlice.actions;\r\n\r\n// Export the customized selectors for this adapter using `getSelectors`\r\nconst {\r\n  selectAll,\r\n  selectById,\r\n  selectIds,\r\n  // Pass in a selector that returns the posts slice of state\r\n} = postAdapter.getSelectors((state: RootState) => state.posts);\r\n\r\nexport const selectAllPosts = selectAll;\r\nexport const selectPostById = (postId: EntityId) => (state: RootState) =>\r\n  selectById(state, postId);\r\nexport const selectPostIds = selectIds;\r\nexport const selectPostFetchStatus = (state: RootState) => state.posts.status;\r\n\r\n// here using the posts.filter which will return a new reference\r\n// and it leads to rerender even the posts doesnt change when other states changed in other places\r\n// createSelector can return a memorized selector to avoid this unneccessary rerender\r\nexport const selectPostByUser = (userId: string) =>\r\n  createSelector([selectAllPosts], (posts) =>\r\n    posts.filter((post) => post.user === userId)\r\n  );\r\n\r\nexport default postSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport postReducer from \"./features/posts/postSlice\";\r\nimport userReducer from \"./features/users/userSlice\";\r\nimport notificationReducer from \"./features/notifications/notificationSlice\";\r\nimport { apiSlice } from \"./features/api/apiSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    posts: postReducer,\r\n    users: userReducer,\r\n    notifications: notificationReducer,\r\n    [apiSlice.reducerPath]: apiSlice.reducer,\r\n  },\r\n  // This middleware must be added as well - it manages cache lifetimes and expiration\r\n  // We need to keep all of the existing standard middleware like redux-thunk in the store setup,\r\n  // which leads to the use of concat\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(apiSlice.middleware),\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import { useEffect } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n  RouteComponentProps,\r\n} from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Header from \"./components/Header/Header\";\r\nimport PostList from \"./features/posts/PostList/PostList\";\r\nimport AddPostForm from \"./features/posts/AddPostForm/AddPostForm\";\r\nimport EditPostForm from \"./features/posts/EditPostForm/EditPostForm\";\r\nimport PostDetail from \"./features/posts/PostDetail/PostDetail\";\r\nimport UserList from \"./features/users/UserList/UserList\";\r\nimport UserPage from \"./features/users/UserPage/UserPage\";\r\nimport NotificationList from \"./features/notifications/NotificationList/NotificationList\";\r\nimport store from \"./store\";\r\nimport { worker } from \"./api/server\";\r\nimport \"./reduxToolkit.less\";\r\n\r\nconst demoPath = \"/reduxToolkit\";\r\n\r\nasync function start() {\r\n  // Start our mock API server\r\n  await worker.start({ onUnhandledRequest: \"bypass\" });\r\n}\r\n\r\nlet workerStarted = false;\r\n\r\nfunction ReduxToolkit(props: RouteComponentProps) {\r\n  // only call when entering this component\r\n  // and only call once\r\n  if (!workerStarted) {\r\n    start();\r\n    workerStarted = true;\r\n  }\r\n\r\n  // only call once\r\n  useEffect(() => {\r\n    const {\r\n      history,\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    // only the path is /reduxToolkit\r\n    if (pathname === demoPath) {\r\n      history.push(`${demoPath}/posts`);\r\n    }\r\n\r\n    // when unmount, stop the worker\r\n    // so that the conflit of HMR doesnt affect other demos\r\n    return () => {\r\n      worker.stop();\r\n      workerStarted = false;\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"post-container\">\r\n      <Provider store={store}>\r\n        <Header demoPath={demoPath} />\r\n        <main className=\"app-sections scroll-bar\">\r\n          <Switch>\r\n            <Route\r\n              exact // to match the /posts/:postId\r\n              path={`${demoPath}/posts`}\r\n              component={PostList}\r\n              key=\"/posts\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/posts/:postId`}\r\n              component={PostDetail}\r\n              key=\"/postDetail\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/edit/:postId`}\r\n              component={EditPostForm}\r\n              key=\"/editPostForm\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/addPost`}\r\n              component={AddPostForm}\r\n              key=\"/addPost\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/users`}\r\n              component={UserList}\r\n              key=\"/users\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/users/:userId`}\r\n              component={UserPage}\r\n              key=\"/users\"\r\n            />\r\n            <Route\r\n              exact\r\n              path={`${demoPath}/notifications`}\r\n              component={NotificationList}\r\n              key=\"/notifications\"\r\n            />\r\n            {/* when the above does not match */}\r\n            <Redirect to={`${demoPath}/posts`} />\r\n          </Switch>\r\n        </main>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ReduxToolkit);\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\n// import Home from \"./Home\";\r\n// import About from \"./About\";\r\n\r\n// the clip will split the lazy components as indenpendent chunks\r\nconst lazyHome = React.lazy(() => import(\"./Home\"));\r\nconst lazyAbout = React.lazy(() => import(\"./About\"));\r\n\r\nexport default class LazyLoad extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <NavLink to=\"/others/lazyLoad/home\">Home</NavLink>&nbsp;\r\n          <NavLink to=\"/others/lazyLoad/about\">About</NavLink>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Route path=\"/others/lazyLoad/home\" component={lazyHome} />\r\n            <Route path=\"/others/lazyLoad/about\" component={lazyAbout} />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\ninterface InfoContextInterface {\r\n  name: string;\r\n  age: number;\r\n}\r\n\r\n// create a context\r\nconst MyContext = React.createContext<InfoContextInterface | null>(null);\r\nconst { Provider, Consumer } = MyContext;\r\n\r\nexport default class Grand extends Component {\r\n  state = {\r\n    name: \"leo\",\r\n    age: 22,\r\n  };\r\n\r\n  render() {\r\n    const { name, age } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>This is Grand component</div>\r\n        <div>\r\n          name: {name} --age: {age}\r\n        </div>\r\n        <hr />\r\n        {/* all the childs in Provider can access the value data */}\r\n        {/* put the value in the state will avoid render the children when the father is rendered */}\r\n        <Provider value={this.state}>\r\n          <Parent />\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Parent extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>This is Parent component</div>\r\n        <hr />\r\n        <Child />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Child extends Component {\r\n  // need to declare if want to use\r\n  static contextType = MyContext;\r\n\r\n  render() {\r\n    const { name, age } = this.context;\r\n    return (\r\n      <div>\r\n        <div>This is Child component</div>\r\n        <div>\r\n          name from Grand: {name} --age from Grand: {age}\r\n        </div>\r\n        <hr />\r\n        <NextChild />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// in function component, need to use second type context which both class and functin can use\r\n// second type no need to declare\r\nfunction NextChild() {\r\n  return (\r\n    <div>\r\n      <div>This is NextChild component</div>\r\n      <div>\r\n        <Consumer>\r\n          {\r\n            // value is the this.context\r\n            (value) =>\r\n              `name from Grand: ${value!.name} --age from Grand: ${value!.age}`\r\n          }\r\n        </Consumer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./index.less\";\r\n\r\nexport default class Parent extends PureComponent {\r\n  state = {\r\n    name: \"leo\",\r\n  };\r\n\r\n  // or just use PureComponent\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //     // no change no render\r\n  //     return !nextState.name === this.state.name;\r\n  // }\r\n  changeName() {\r\n    this.setState({ name: \"pit\" });\r\n    /**\r\n     * when using PureComponent\r\n     * the child will not render if no use the props from parent or no changed props\r\n     * it will not watch shallow copy\r\n     */\r\n    // cannot use the example below!!\r\n    // const obj = this.state;\r\n    // obj.name = 'pit';\r\n    // this.setState(obj);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"parent--render\");\r\n    return (\r\n      <div className=\"parent\">\r\n        <div>Parent: {this.state.name}</div>\r\n        <button onClick={this.changeName.bind(this)}>change name</button>\r\n        <Child />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Child extends PureComponent {\r\n  render() {\r\n    console.log(\"child-render\");\r\n    return (\r\n      <div className=\"child\">\r\n        <div>Child...</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Parent extends React.Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  // when the child components have errors\r\n  // this function will be called\r\n  // return the obj will change the state\r\n  // it only works in production mode\r\n  static getDerivedStateFromError(err: object) {\r\n    console.log(err);\r\n    return { hasError: true };\r\n  }\r\n\r\n  // used to stat the errors\r\n  // and send the stats to the server\r\n  componentDidCatch(err: object, info: object) {\r\n    console.log(err, info);\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n\r\n    return hasError ? <h4>some problems</h4> : this.props.children;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\ntype User = {\r\n  id: string;\r\n  name: string;\r\n  age: number;\r\n};\r\ntype StateType = {\r\n  users: string | Array<User>;\r\n};\r\n\r\nexport default class Child extends React.Component<{}, StateType> {\r\n  state = {\r\n    // users: [\r\n    //   { id: \"001\", name: \"leo\", age: 18 },\r\n    //   { id: \"002\", name: \"pit\", age: 18 },\r\n    //   { id: \"003\", name: \"git\", age: 18 },\r\n    // ],\r\n    users: \"leo\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {Array.isArray(this.state.users) &&\r\n          this.state.users.map((user) => (\r\n            <h4 key={user.id}>\r\n              {user.id}---{user.name},{user.age}\r\n            </h4>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\ntype StateType = { count: number };\r\ntype PropType = { name: string };\r\n\r\nexport default class Demo extends Component<PropType, StateType> {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  add() {\r\n    // note that setState is async!\r\n    // you can get the updated state in the callback\r\n\r\n    //#region first use of setState\r\n\r\n    // const { count } = this.state;\r\n    // this.setState(\r\n    //   {\r\n    //     count: count + 1,\r\n    //   },\r\n    //   () => {\r\n    //     console.log(\"async:\", this.state.count);\r\n    //   }\r\n    // );\r\n    //#endregion\r\n\r\n    // second use:\r\n    // when the updated state needs to use the previous one, recommand this\r\n    this.setState(\r\n      (state, props) => {\r\n        return { count: state.count + 1 };\r\n      },\r\n      () => {\r\n        console.log(\"async:\", this.state.count);\r\n      }\r\n    );\r\n\r\n    console.log(\"sync:\", this.state.count);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Count name: {this.props.name}</div>\r\n        <div>count: {this.state.count}</div>\r\n        <button onClick={this.add.bind(this)}>+</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Count from \"../01-setState/setState\";\r\n\r\ntype APropType = {\r\n  render: (name: string) => React.ComponentElement<BPropType, any>;\r\n};\r\n\r\ntype BPropType = {\r\n  name: string;\r\n};\r\n\r\nexport default class Parent extends Component {\r\n  // use the concrete function to declare instead of anominous func\r\n  renderBFunc = (name: string) => {\r\n    return <B name={name} />;\r\n  };\r\n\r\n  renderCountFunc = (name: string) => {\r\n    return <Count name={name} />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Parent...</div>\r\n        {/* the render prop can be changed to another name */}\r\n        <A render={this.renderBFunc} />\r\n        <A render={this.renderCountFunc} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass A extends Component<APropType> {\r\n  state = {\r\n    name: \"leo\",\r\n  };\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>A...</div>\r\n        {/* slot, this area can be customized by the parent */}\r\n        {this.props.render(name)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass B extends Component<BPropType> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>B...</div>\r\n        {this.props.name} from A\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.less\";\r\n\r\ninterface ModalProps {\r\n  modalRoot: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nclass Modal extends Component<ModalProps> {\r\n  // ths parent of the children from the props of Modal\r\n  modalContainer: HTMLElement;\r\n\r\n  constructor(props: ModalProps) {\r\n    super(props);\r\n    this.modalContainer = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    // append the container to the root dom of the modal\r\n    // provided by the parent\r\n    this.props.modalRoot.current!.append(this.modalContainer);\r\n  }\r\n\r\n  //   componentWillUnmount() {\r\n  //     this.props.modalRoot.current!.removeChild(this.modalContainer);\r\n  //   }\r\n\r\n  render() {\r\n    // append the children from props\r\n    // to the container\r\n    // see the type of the params of createPortal...\r\n    // then you know what it is for\r\n    return ReactDOM.createPortal(this.props.children, this.modalContainer);\r\n  }\r\n}\r\n\r\nfunction ModalChild() {\r\n  return <div>i am a kid</div>;\r\n}\r\n\r\nexport default class PortalDemo extends Component {\r\n  modalRoot = React.createRef<HTMLDivElement>();\r\n\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  handleShowModal = () => {\r\n    const { showModal } = this.state;\r\n\r\n    this.setState({\r\n      showModal: !showModal,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { showModal } = this.state;\r\n\r\n    return (\r\n      <div className=\"portal-box\">\r\n        <div\r\n          className=\"modal-root\"\r\n          ref={this.modalRoot}\r\n          style={showModal ? { display: \"block\" } : { display: \"none\" }}\r\n        ></div>\r\n        <button onClick={this.handleShowModal}>{`${\r\n          showModal ? \"close\" : \"show\"\r\n        } modal`}</button>\r\n        <Modal modalRoot={this.modalRoot}>\r\n          <ModalChild />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useRef } from \"react\";\r\n\r\nexport default function ResizeBar({\r\n  containerRef,\r\n  widthChange,\r\n  style = {},\r\n  idx,\r\n  widths,\r\n}: {\r\n  containerRef: React.RefObject<HTMLElement>;\r\n  widthChange: (widths: number[]) => void;\r\n  style?: any;\r\n  idx: number;\r\n  widths: number[];\r\n}) {\r\n  const barRef = useRef<HTMLDivElement>(null);\r\n\r\n  const dragStart = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n\r\n    const moveEvent = (e: MouseEvent) => {\r\n      if (containerRef.current && barRef.current) {\r\n        // the previous left side width of the current bar\r\n        const prevLeftTotalWidthPercent = widths\r\n          .slice(idx)\r\n          .reduce((total, width) => total + width, 0);\r\n\r\n        // the distance from the current bar to the left side of the father container\r\n        const offsetLeft = e.clientX - containerRef.current.offsetLeft;\r\n\r\n        // the left side width of the current bar\r\n        const leftTotalWidthPercent =\r\n          1 -\r\n          offsetLeft /\r\n            Number(\r\n              getComputedStyle(containerRef.current).width.replace(\"px\", \"\")\r\n            );\r\n\r\n        // get the diff\r\n        const widthDiff = leftTotalWidthPercent - prevLeftTotalWidthPercent;\r\n\r\n        // cur width is the right box of the current bar\r\n        const curWidthPercent = widths[idx] + widthDiff;\r\n        // last width is the left box of the current bar\r\n        const lastWidthPercent = widths[idx - 1] - widthDiff;\r\n\r\n        widthChange(\r\n          [...widths].map((_, index) => {\r\n            if (index === idx) {\r\n              return curWidthPercent;\r\n            }\r\n\r\n            if (index === idx - 1) {\r\n              return lastWidthPercent;\r\n            }\r\n\r\n            // only change the widths of the boxs aside the current bar\r\n            // others remain the previous width\r\n            return _;\r\n          })\r\n        );\r\n      }\r\n    };\r\n    document.addEventListener(\"mousemove\", moveEvent);\r\n\r\n    const upEvent = () => {\r\n      document.removeEventListener(\"mousemove\", moveEvent);\r\n      document.removeEventListener(\"mouseup\", upEvent);\r\n    };\r\n\r\n    document.addEventListener(\"mouseup\", upEvent);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"resiz-bar\"\r\n      ref={barRef}\r\n      onMouseDown={dragStart}\r\n      style={style}\r\n    ></div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport ResizeBar from \"./ResizeBar\";\r\nimport \"./ResizableBox.less\";\r\n\r\nexport type ResizableBoxProps = {\r\n  children: React.ReactChild[];\r\n};\r\n\r\nexport default function ResizableBox({ children }: ResizableBoxProps) {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [widths, setWidths] = useState<number[]>(\r\n    new Array(children.length).fill(1 / children.length)\r\n  );\r\n\r\n  const tostr = (n: number) => `${(n * 100 - 1.5).toFixed(2)}%`;\r\n\r\n  return (\r\n    <div className=\"resizable-box\" ref={containerRef}>\r\n      {children.map((box, idx) => (\r\n        <React.Fragment key={idx}>\r\n          <div style={{ width: tostr(widths[idx]) }}>{box}</div>\r\n\r\n          {idx !== children.length - 1 ? (\r\n            <ResizeBar\r\n              containerRef={containerRef}\r\n              widthChange={(widths) => setWidths(widths)}\r\n              idx={idx + 1}\r\n              widths={widths}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\r\nimport ResizableBox from \"./ResizableBox\";\r\n\r\nexport default function ResizeLayout() {\r\n  const leftRef = useRef<HTMLDivElement>(null);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <div>\r\n        <Link to=\"/others/resizeLayout/right\">right</Link>\r\n        <Link to=\"/others/resizeLayout/left\">left</Link>\r\n      </div>\r\n      <div style={{ width: \"800px\" }}>\r\n        <ResizableBox>\r\n          <LeftBox ref={leftRef} />\r\n          <RightBox leftRef={leftRef} />\r\n          <LeftBox ref={leftRef} />\r\n          <LeftBox ref={leftRef} />\r\n        </ResizableBox>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LeftBox = React.forwardRef<HTMLDivElement>((_, ref) => {\r\n  return (\r\n    <div className=\"left-box\" ref={ref}>\r\n      left\r\n    </div>\r\n  );\r\n});\r\n\r\nconst RightBox = ({\r\n  leftRef,\r\n}: {\r\n  leftRef: React.RefObject<HTMLDivElement>;\r\n}) => {\r\n  return (\r\n    <div className=\"right-box\">\r\n      {leftRef.current ? leftRef.current.innerText : \"right\"}\r\n      <Switch>\r\n        <Route exact path={`/others/resizeLayout/left`} key=\"/left\">\r\n          <div>this is left router</div>\r\n        </Route>\r\n        <Route exact path={`/others/resizeLayout/right`} key=\"/right\">\r\n          <div>this is right router</div>\r\n        </Route>\r\n        <Redirect to=\"/others/resizeLayout/right\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"@/component/Menu\";\r\nimport LazyLoad from \"./02-lazyLoad\";\r\nimport Hooks from \"./03-hooks\";\r\nimport Context from \"./04-context\";\r\nimport PureComDemo from \"./05-pureComponent\";\r\nimport ErrorBoundary from \"./07-errorBoundary/index\";\r\nimport RenderProp from \"./06-render_prop(slot)\";\r\nimport Portal from \"./08-portal/PortalDemo\";\r\nimport ResizeLayout from \"./09-resizeLayout\";\r\nimport \"./others.less\";\r\n\r\nconst linkStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"black\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"inline-block\",\r\n  padding: \"10px\",\r\n};\r\n\r\nconst demos = [\r\n  {\r\n    path: \"/others/lazyLoad\",\r\n    name: \"LazyLoad\",\r\n    component: LazyLoad,\r\n  },\r\n  {\r\n    path: \"/others/hooks\",\r\n    name: \"Hooks\",\r\n    component: Hooks,\r\n  },\r\n  {\r\n    path: \"/others/context\",\r\n    name: \"Context\",\r\n    component: Context,\r\n  },\r\n  {\r\n    path: \"/others/pureComDemo\",\r\n    name: \"PureComDemo\",\r\n    component: PureComDemo,\r\n  },\r\n  {\r\n    path: \"/others/errorBoundary\",\r\n    name: \"Error Boumdary\",\r\n    component: ErrorBoundary,\r\n  },\r\n  {\r\n    path: \"/others/renderProp\",\r\n    name: \"Render Prop(slot)\",\r\n    component: RenderProp,\r\n  },\r\n  {\r\n    path: \"/others/portalDemo\",\r\n    name: \"portal demo\",\r\n    component: Portal,\r\n  },\r\n  {\r\n    path: \"/others/resizeLayout\",\r\n    name: \"resizable layout\",\r\n    component: ResizeLayout,\r\n  },\r\n];\r\n\r\nexport default class others extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"others-body\">\r\n        <div className=\"others-content\">\r\n          <Menu items={demos} linkStyle={linkStyle} menuPath=\"/others\"></Menu>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//#region class way\r\n// class Demo extends Component {\r\n//   state = {\r\n//     count: 0,\r\n//   };\r\n//   add() {\r\n//     this.setState((state) => ({ count: state.count + 1 }));\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <div>Count: {this.state.count}</div>\r\n//         <button onClick={this.add.bind(this)}>+</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n//#endregion\r\n\r\n// function way with hook to be able to use the states\r\nexport default function Demo() {\r\n  // React.useState is a so-called hook\r\n  // [state, setStateMethod] = React.useState(initial value);\r\n  // each state corresponding to a set method\r\n  const [count, setCount] = useState(0);\r\n  const [name, changeName] = useState(\"pit\");\r\n\r\n  /**\r\n   * React.useEffect(callback, array)\r\n   * array is used to watch the states\r\n   * if [count], when count updates, the callback will be called, it is the componentDidUpdate\r\n   * so blank [] means no states are watched, so it is the componentDidMount\r\n   * More accurately, the effect logics will run after rerendering every time by default\r\n   * if the array is null\r\n   * and the state in [] is being watched as if not being changed,\r\n   * the effect will not run\r\n   */\r\n\r\n  // only run once like componentDidMount\r\n  useEffect(() => {\r\n    console.log(\"did mount\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCount(count + 1);\r\n    }, 1000);\r\n\r\n    console.log(\"effected\");\r\n\r\n    // return the function is the like componentWillUnmount\r\n    // but actually it will be executed every time after rerendering\r\n    // following the above logic\r\n    // more like the following componentDidUpdate\r\n    return () => {\r\n      console.log(\"effected in return\");\r\n      clearInterval(timer);\r\n    };\r\n  });\r\n\r\n  // it can be multiple effects\r\n  useEffect(() => {\r\n    console.log(\"another effect used to watch the name state\");\r\n  }, [name]);\r\n\r\n  function unmount() {\r\n    ReactDOM.unmountComponentAtNode(\r\n      document.getElementById(\"root\") as HTMLElement\r\n    );\r\n  }\r\n\r\n  function add() {\r\n    // first way\r\n    // setCount(count + 1);\r\n    changeName(name === \"leo\" ? \"pit\" : \"leo\");\r\n\r\n    // second way\r\n    setCount((count) => count + 1);\r\n  }\r\n\r\n  const inputValue = React.useRef<HTMLInputElement>(null);\r\n\r\n  function show() {\r\n    console.log(inputValue);\r\n    if (inputValue.current) alert(inputValue.current.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" ref={inputValue} />\r\n      <div>\r\n        count: {count}---{name}\r\n      </div>\r\n      <button onClick={add}>+&changeName</button>&nbsp;\r\n      <button onClick={unmount}>unmount</button>&nbsp;\r\n      <button onClick={show}>show</button>\r\n    </div>\r\n  );\r\n}\r\n","// import React from \"react·\";\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport Child from './Child';\r\n\r\nexport default function ErrorBoundaryTest() {\r\n  return (\r\n    <ErrorBoundary>\r\n      <Child></Child>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Menu from \"./component/Menu\";\r\nimport TicTacToe from \"./demos/01-tic-tac-toe\";\r\nimport TodoList from \"./demos/02-todoList/TodoList\";\r\nimport ProxyTest from \"./demos/03-proxy/Proxy\";\r\nimport SearchAxios from \"./demos/04-search-axios/SearchAxios\";\r\nimport ReduxDemo from \"./demos/05-redux/ReduxDemo\";\r\nimport ReactRedux from \"./demos/06-react-redux/ReactRedux\";\r\nimport RefDemo from \"./demos/07-refs\";\r\nimport ReduxToolkit from \"./demos/08-redux-toolkit/ReduxToolkit\";\r\nimport Others from \"./demos/others/others\";\r\n\r\nimport \"./App.less\";\r\n\r\nconst linkStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"black\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  display: \"inline-block\",\r\n  padding: \"10px\",\r\n};\r\n\r\nconst demos = [\r\n  {\r\n    path: \"/tictactoe\",\r\n    name: \"tic-tac-toe\",\r\n    component: TicTacToe,\r\n  },\r\n  {\r\n    path: \"/todoList\",\r\n    name: \"To do List\",\r\n    component: TodoList,\r\n  },\r\n  {\r\n    path: \"/proxy\",\r\n    name: \"ProxyTest\",\r\n    component: ProxyTest,\r\n  },\r\n  {\r\n    path: \"/searchAxios\",\r\n    name: \"SearchAxios\",\r\n    component: SearchAxios,\r\n  },\r\n  {\r\n    path: \"/reduxDemo\",\r\n    name: \"ReduxDemo\",\r\n    component: ReduxDemo,\r\n  },\r\n  {\r\n    path: \"/reactRedux\",\r\n    name: \"ReactRedux\",\r\n    component: ReactRedux,\r\n  },\r\n  {\r\n    path: \"/refDemo\",\r\n    name: \"RefDemo\",\r\n    component: RefDemo,\r\n  },\r\n  {\r\n    path: \"/reduxToolkit\",\r\n    name: \"ReduxToolkit\",\r\n    component: ReduxToolkit,\r\n  },\r\n  {\r\n    path: \"/others\",\r\n    name: \"Others\",\r\n    component: Others,\r\n  },\r\n];\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    currentDemoName: \"\",\r\n  };\r\n\r\n  changeDemo = (itemName: string) => {\r\n    this.setState({\r\n      currentDemoName: itemName,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-body\">\r\n        <div className=\"app-content\">\r\n          <div className=\"demo-name\">{this.state.currentDemoName}</div>\r\n          <Menu\r\n            items={demos}\r\n            linkStyle={linkStyle}\r\n            menuPath=\"/\"\r\n            itemChanged={this.changeDemo}\r\n          ></Menu>\r\n        </div>\r\n        <div className=\"footer\">@SuperLi</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootDom = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootDom\r\n);\r\n"],"sourceRoot":""}